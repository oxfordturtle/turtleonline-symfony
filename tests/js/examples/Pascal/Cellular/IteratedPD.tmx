{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Iterated Prisoner's Dilemma",
  "author":"Peter Millican",
  "date":"31/08/2020",
  "time":"11:16:52",
  "code":"PROGRAM IteratedPD;\nCONST width = 50;\n      height = 50;\n      n = 10;\nVAR i, j: integer;\n    util: array[1..14] of integer;\n\n  Procedure utility(x, y: integer);\n  Var this, utot, i, j, flag: integer;\n  Begin\n    this := pixcol(x, y) and #7;\n    utot := 0;\n    for i := -1 to 1 do\n      for j := -1 to 1 do\n        if (i <> 0) or (j <> 0) then\n          begin\n            flag := this or (pixcol((x + width + i) mod width, (y + height + j) mod height)) and\n     #F;\n            utot := utot + util[flag]\n          end;\n    pixset(x, y, utot * #100 + pixcol(x, y) and #F)\n  End;\n\n  Procedure pickbest(x, y: integer);\n  Var i, j, bestsofar: integer;\n  Begin\n    bestsofar := pixcol(x, y);\n    if random(5) > 0 then\n      for i := -1 to 1 do\n        for j := -1 to 1 do\n          if (pixcol((x + width + i) mod width, (y + height + j) mod height) and #FFFF00) > (bestsofar\n     and #FFFF00) then\n            bestsofar := pixcol((x + width + i) mod width, (y + height + j) mod height);\n    pixset(x, y, (pixcol(x, y) and #FFFF0F) + (bestsofar and #F) * #10)\n  End;\n\n  Procedure fixbest(x, y: integer);\n  Begin\n    if (pixcol(x, y) and #10) > 0 then\n      pixset(x, y, #FF0001)\n    else\n    if (pixcol(x, y) and #20) > 0 then\n      pixset(x, y, #00FF02)\n    else\n      pixset(x, y, #0000FC)\n  End;\n\n  Procedure setutilities;\n  Begin\n    util[1] := 3 * n;\n    util[2] := 3 * n;\n    util[3] := 3 * n;\n    util[5] := 5 * n;\n    util[6] := n + 4;\n    util[12] := n;\n    util[13] := 0;\n    util[14] := n - 1\n  End;\n\nBEGIN\n  canvas(0, 0, width, height);\n  resolution(width, height);\n  setutilities;\n  noupdate;\n  for i := 0 to width - 1 do\n    for j := 0 to height - 1 do\n      if random(50) = 0 then\n        pixset(i, j, #0000FC)\n      else\n      if random(7) = 0 then\n        pixset(i, j, #00FF02)\n      else\n        pixset(i, j, #FF0001);\n  pause(1000);\n  while ?key <> \\escape do\n    begin\n      timeset(0);\n      noupdate;\n      for i := 0 to width - 1 do\n        for j := 0 to height - 1 do\n          utility(i, j);\n      for i := 0 to width - 1 do\n        for j := 0 to height - 1 do\n          pickbest(i, j);\n      for i := 0 to width - 1 do\n        for j := 0 to height - 1 do\n          fixbest(i, j);\n      update;\n      noupdate\n    end\nEND.",
  "usage":[
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"noupdate", "level":1, "count":3, "lines":"64 78 89"},
        {"name":"update", "level":1, "count":1, "lines":"88"},
        {"name":"canvas", "level":2, "count":1, "lines":"61"},
        {"name":"resolution", "level":2, "count":1, "lines":"62"},
        {"name":"pixcol", "level":3, "count":9, "lines":"11 17 21 27 31 33 34 39 42"},
        {"name":"pixset", "level":3, "count":8, "lines":"21 34 40 43 45 68 71 73"}
      ],
      "total":23
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"random", "level":2, "count":3, "lines":"28 67 70"}
      ],
      "total":3
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"pause", "level":1, "count":1, "lines":"74"},
        {"name":"timeset", "level":2, "count":1, "lines":"77"}
      ],
      "total":2
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":7, "lines":"15 28 31 39 42 67 70"},
        {"name":"else", "level":1, "count":4, "lines":"41 44 69 72"},
        {"name":"for", "level":1, "count":12, "lines":"13 14 29 30 65 66 79 80 82 83 85 86"},
        {"name":"while", "level":2, "count":1, "lines":"75"},
        {"name":"procedure", "level":2, "count":4, "lines":"8 24 37 48"}
      ],
      "total":28
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"setutilities", "level":0, "count":1, "lines":"63"},
        {"name":"utility", "level":0, "count":1, "lines":"81"},
        {"name":"pickbest", "level":0, "count":1, "lines":"84"},
        {"name":"fixbest", "level":0, "count":1, "lines":"87"}
      ],
      "total":4
    }
  ],
  "pcode":[
    [112,16,1,1,112,0,123,112,6,2,123,4,112,24,124,112,40,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [116,26,119,25],
    [112,14,119,26],
    [128,62],
    [133,1],
    [139,12,7],
    [120,12,2,120,12,1],
    [114,12,1,114,12,2,99,112,7,17,120,12,3],
    [112,0,120,12,4],
    [112,1,23],
    [120,12,5,112,1],
    [114,12,5,37,129,22],
    [112,1,23],
    [120,12,6,112,1],
    [114,12,6,37,129,21],
    [114,12,5,112,0,33,114,12,6,112,0,33,18,129,20],
    [114,12,3,114,12,1,112,50,26,114,12,5,26,112,50,31,114,12,2,112,50,26,114,12,6,26,112,50,31,99,112,15,17,18,120,12,7],
    [114,12,4,113,25,114,12,7,112,1,27,2,127,26,4,122,26,120,12,4],
    [114,12,6,4,128,15],
    [114,12,5,4,128,12],
    [114,12,1,114,12,2,114,12,4,112,256,28,114,12,1,114,12,2,99,112,15,17,26,100],
    [140,12,134,132],
    [133,2],
    [139,13,5],
    [120,13,2,120,13,1],
    [114,13,1,114,13,2,99,120,13,5],
    [112,5,7,112,0,35,129,39],
    [112,1,23],
    [120,13,3,112,1],
    [114,13,3,37,129,39],
    [112,1,23],
    [120,13,4,112,1],
    [114,13,4,37,129,38],
    [114,13,1,112,50,26,114,13,3,26,112,50,31,114,13,2,112,50,26,114,13,4,26,112,50,31,99,112,16776960,17,114,13,5,112,16776960,17,35,129,37],
    [114,13,1,112,50,26,114,13,3,26,112,50,31,114,13,2,112,50,26,114,13,4,26,112,50,31,99,120,13,5],
    [114,13,4,4,128,33],
    [114,13,3,4,128,30],
    [114,13,1,114,13,2,114,13,1,114,13,2,99,112,16776975,17,114,13,5,112,15,17,112,16,28,26,100],
    [140,13,134,132],
    [133,3],
    [139,14,2],
    [120,14,2,120,14,1],
    [114,14,1,114,14,2,99,112,16,17,112,0,35,129,47],
    [114,14,1,114,14,2,112,16711681,100],
    [128,51],
    [114,14,1,114,14,2,99,112,32,17,112,0,35,129,50],
    [114,14,1,114,14,2,112,65282,100],
    [128,51],
    [114,14,1,114,14,2,112,252,100],
    [140,14,134,132],
    [133,4],
    [113,25,112,1,112,1,27,2,127,26,4,112,3,112,10,28,2,123],
    [113,25,112,2,112,1,27,2,127,26,4,112,3,112,10,28,2,123],
    [113,25,112,3,112,1,27,2,127,26,4,112,3,112,10,28,2,123],
    [113,25,112,5,112,1,27,2,127,26,4,112,5,112,10,28,2,123],
    [113,25,112,6,112,1,27,2,127,26,4,112,10,112,4,26,2,123],
    [113,25,112,12,112,1,27,2,127,26,4,112,10,2,123],
    [113,25,112,13,112,1,27,2,127,26,4,112,0,2,123],
    [113,25,112,14,112,1,27,2,127,26,4,112,10,112,1,27,2,123],
    [134,132],
    [112,0,112,0,112,50,112,50,144],
    [112,50,112,50,145],
    [131,52],
    [112,0,146],
    [112,0],
    [119,23,112,50,112,1,27],
    [113,23,37,129,81],
    [112,0],
    [119,24,112,50,112,1,27],
    [113,24,37,129,80],
    [112,50,7,112,0,32,129,75],
    [113,23,113,24,112,252,100],
    [128,79],
    [112,7,7,112,0,32,129,78],
    [113,23,113,24,112,65282,100],
    [128,79],
    [113,23,113,24,112,16711681,100],
    [113,24,4,128,70],
    [113,23,4,128,67],
    [112,1000,174],
    [112,-9,160,112,27,33,129,115],
    [112,0,173],
    [112,0,146],
    [112,0],
    [119,23,112,50,112,1,27],
    [113,23,37,129,94],
    [112,0],
    [119,24,112,50,112,1,27],
    [113,24,37,129,93],
    [113,23,113,24,131,6],
    [113,24,4,128,89],
    [113,23,4,128,86],
    [112,0],
    [119,23,112,50,112,1,27],
    [113,23,37,129,103],
    [112,0],
    [119,24,112,50,112,1,27],
    [113,24,37,129,102],
    [113,23,113,24,131,24],
    [113,24,4,128,98],
    [113,23,4,128,95],
    [112,0],
    [119,23,112,50,112,1,27],
    [113,23,37,129,112],
    [112,0],
    [119,24,112,50,112,1,27],
    [113,24,37,129,111],
    [113,23,113,24,131,41],
    [113,24,4,128,107],
    [113,23,4,128,104],
    [112,-1,146],
    [112,0,146],
    [128,82],
    [130]
  ]
}
