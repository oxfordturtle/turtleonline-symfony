{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Tipping point (city epidemic)",
  "author":"Peter Millican",
  "date":"31/08/2020",
  "time":"11:16:49",
  "code":"PROGRAM TippingPoint;\nCONST width = 100;\n      height = 100;\n      susceptible = lightgreen;\n      infected = red;\n      recovered = blue;\n      startradius = 10;\n      infectprob = 2;\n      contacts = 50;\n      report = false;\nVAR x, y, n, i, j: integer;\n    numimmune, numinfected, numinfectious: integer;\n\n  Procedure infect(x, y: integer);\n  Begin\n    pixset(x, y, infected);\n    inc(numinfected);\n    inc(numinfectious);\n    if report then\n      writeln('Infected: ' + pad(str(numinfected), ' ', 4) + '      Infectious: ' + pad(str(numinfectious),\n     ' ', 4))\n  End;\n\nBEGIN\n  canvas(0, 0, width, height);\n  resolution(width, height);\n  writeln('Contacts per person:       ' + str(contacts));\n  writeln('Transmission probability:  ' + str(infectprob) + '%');\n  writeln('R0 (reproduction number):  ' + qstr(contacts * infectprob, 100, 2));\n  if report then\n    writeln('');\n  n := randseed(3);\n  timeset(0);\n  numimmune := 0;\n  numinfected := 0;\n  numinfectious := 0;\n  noupdate;\n  for x := 0 to width - 1 do\n    for y := 0 to height - 1 do\n      if (random(100) < infectprob) and (hypot(x - width / 2, y - height / 2, 1) <= startradius)\n     then\n        infect(x, y)\n      else\n        pixset(x, y, susceptible);\n  update;\n  repeat\n    x := random(width);\n    y := random(height);\n    if pixcol(x, y) = infected then\n      begin\n        for n := 1 to contacts do\n          begin\n            if random(100) < infectprob then\n              begin\n                i := random(width);\n                j := random(height);\n                if pixcol(i, j) = susceptible then\n                  infect(i, j)\n              end\n          end;\n        pixset(x, y, recovered);\n        dec(numinfectious);\n        if report then\n          writeln('                    Infectious: ' + pad(str(numinfectious), ' ', 4))\n      end\n  until numinfectious = 0;\n  if report then\n    writeln('');\n  writeln('Total infected overall:    ' + str(numinfected) + ' (' + qstr(time, 1000, 2) +\n     ' sec)');\n  writeln('Proportion infected:       ' + qstr(numinfected * 100, width * height - numimmune, 2)\n     + '%')\nEND.",
  "usage":[
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"noupdate", "level":1, "count":1, "lines":"37"},
        {"name":"update", "level":1, "count":1, "lines":"45"},
        {"name":"canvas", "level":2, "count":1, "lines":"25"},
        {"name":"resolution", "level":2, "count":1, "lines":"26"},
        {"name":"pixcol", "level":3, "count":2, "lines":"49 57"},
        {"name":"pixset", "level":3, "count":3, "lines":"16 44 61"}
      ],
      "total":9
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"dec", "level":1, "count":1, "lines":"62"},
        {"name":"inc", "level":1, "count":2, "lines":"17 18"},
        {"name":"hypot", "level":2, "count":1, "lines":"40"},
        {"name":"random", "level":2, "count":6, "lines":"40 47 48 53 55 56"},
        {"name":"randseed", "level":3, "count":1, "lines":"32"}
      ],
      "total":11
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"writeln", "level":1, "count":9, "lines":"20 27 28 29 31 64 68 69 71"},
        {"name":"pad", "level":3, "count":3, "lines":"20 20 64"}
      ],
      "total":12
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"str", "level":1, "count":6, "lines":"20 20 27 28 64 69"},
        {"name":"qstr", "level":2, "count":3, "lines":"29 69 71"}
      ],
      "total":9
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"time", "level":2, "count":1, "lines":"69"},
        {"name":"timeset", "level":2, "count":1, "lines":"33"}
      ],
      "total":2
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":8, "lines":"19 30 40 49 53 57 63 67"},
        {"name":"else", "level":1, "count":1, "lines":"43"},
        {"name":"for", "level":1, "count":3, "lines":"38 39 51"},
        {"name":"repeat", "level":2, "count":1, "lines":"46"},
        {"name":"procedure", "level":2, "count":1, "lines":"14"}
      ],
      "total":14
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"infect", "level":0, "count":2, "lines":"42 58"}
      ],
      "total":2
    }
  ],
  "pcode":[
    [112,13,1,1,112,0,123,112,6,2,123,4,112,14,124,112,27,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [128,13],
    [133,1],
    [139,12,2],
    [120,12,2,120,12,1],
    [114,12,1,114,12,2,112,16711680,100],
    [116,26,1,122,4,2,123],
    [116,27,1,122,4,2,123],
    [112,0,129,12],
    [118,10,73,110,102,101,99,116,101,100,58,32,113,26,11,112,32,9,112,4,72,64,118,18,32,32,32,32,32,32,73,110,102,101,99,116,105,111,117,115,58,32,64,113,27,11,112,32,9,112,4,72,64,169,170,142],
    [140,12,134,132],
    [112,0,112,0,112,100,112,100,144],
    [112,100,112,100,145],
    [118,27,67,111,110,116,97,99,116,115,32,112,101,114,32,112,101,114,115,111,110,58,32,32,32,32,32,32,32,112,50,11,64,169,170,142],
    [118,27,84,114,97,110,115,109,105,115,115,105,111,110,32,112,114,111,98,97,98,105,108,105,116,121,58,32,32,112,2,11,64,112,37,9,64,169,170,142],
    [118,27,82,48,32,40,114,101,112,114,111,100,117,99,116,105,111,110,32,110,117,109,98,101,114,41,58,32,32,112,50,112,2,28,112,100,112,2,14,64,169,170,142],
    [112,0,129,20],
    [118,0,169,170,142],
    [112,3,147,119,22],
    [112,0,173],
    [112,0,119,25],
    [112,0,119,26],
    [112,0,119,27],
    [112,0,146],
    [112,0],
    [119,20,112,100,112,1,27],
    [113,20,37,129,38],
    [112,0],
    [119,21,112,100,112,1,27],
    [113,21,37,129,37],
    [112,100,7,112,2,34,113,20,112,100,112,2,29,27,113,21,112,100,112,2,29,27,112,1,50,112,10,36,17,129,35],
    [113,20,113,21,131,4],
    [128,36],
    [113,20,113,21,112,10025880,100],
    [113,21,4,128,30],
    [113,20,4,128,27],
    [112,-1,146],
    [112,100,7,119,20],
    [112,100,7,119,21],
    [113,20,113,21,99,112,16711680,32,129,55],
    [112,1],
    [119,22,112,50],
    [113,22,37,129,51],
    [112,100,7,112,2,34,129,50],
    [112,100,7,119,23],
    [112,100,7,119,24],
    [113,23,113,24,99,112,10025880,32,129,50],
    [113,23,113,24,131,4],
    [113,22,4,128,43],
    [113,20,113,21,112,255,100],
    [116,27,1,122,5,2,123],
    [112,0,129,55],
    [118,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,73,110,102,101,99,116,105,111,117,115,58,32,113,27,11,112,32,9,112,4,72,64,169,170,142],
    [113,27,112,0,32,129,39],
    [112,0,129,58],
    [118,0,169,170,142],
    [118,27,84,111,116,97,108,32,105,110,102,101,99,116,101,100,32,111,118,101,114,97,108,108,58,32,32,32,32,113,26,11,64,118,2,32,40,64,172,112,1000,112,2,14,64,118,5,32,115,101,99,41,64,169,170,142],
    [118,27,80,114,111,112,111,114,116,105,111,110,32,105,110,102,101,99,116,101,100,58,32,32,32,32,32,32,32,113,26,112,100,28,112,100,112,100,28,113,25,27,112,2,14,64,112,37,9,64,169,170,142],
    [130]
  ]
}
