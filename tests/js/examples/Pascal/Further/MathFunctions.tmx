{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Mathematical functions",
  "author":"Peter Millican",
  "date":"31/08/2020",
  "time":"11:16:42",
  "code":"PROGRAM MathFunctions;\nCONST dpl = 4;       {decimal places for display of values}\n      den = 1000000; {denominator gives level of precision}\nVAR a, b: integer;\n\n  {Writes to the output the value of a mathematical function of a/b,}\n  {or - in the case of HYPOT (where OP is \",\" not \"/\") - of a and b;}\n  {chr(176) is the degree symbol for sin/cos/tan and their inverses.}\n  Procedure show(fn: string; op: char; value: integer; degrees: integer);\n  Begin\n    if degrees = 1 then\n      writeln(fn + '(' + str(a) + op + str(b) + chr(176) + ') = ' + qstr(value, den, dpl))\n    else\n    if degrees = 2 then\n      writeln(fn + '(' + str(a) + op + str(b) + ') = ' + qstr(value, den, dpl) + chr(176))\n    else\n      writeln(fn + '(' + str(a) + op + str(b) + ') = ' + qstr(value, den, dpl))\n  End;\n\nBEGIN\n  {show the output and display information about the program}\n  output(true, white, true);\n  writeln('This program selects two random numbers a and b, in the');\n  writeln('range 100-999, and then outputs various mathematical');\n  writeln('functions of the fraction a/b. The results are expressed');\n  writeln('to ' + str(dpl) + ' decimal places, and a denominator of ' + str(den) + ' is');\n  writeln('used in the calculations to provide precision, even');\n  writeln('though the Turtle functions strictly operate only on');\n  writeln('integers and produce integer results.');\n  writeln('');\n  {set a and b to random values, and display their values and quotient}\n  a := random(900) + 100;\n  b := random(900) + 100;\n  writeln('a = ' + str(a) + '; b = ' + str(b));\n  writeln('a/b = ' + str(a) + '/' + str(b) + ' = ' + qstr(a, b, dpl));\n  writeln('');\n  {display the square, square root, cube, and cube root of a/b}\n  show('square', '/', power(a, b, 2, den), 0);\n  show('square root', '/', root(a, b, 2, den), 0);\n  show('cube', '/', power(a, b, 3, den), 0);\n  show('cube root', '/', root(a, b, 3, den), 0);\n  writeln('');\n  {display hypotenuse of right-angled triangle with shorter sides a and b}\n  show('hypot', ',', hypot(a, b, den), 0);\n  show('calculated hypot', ',', sqrt(a * a + b * b, den), 0);\n  writeln('');\n  {display sin, cos, and tan of a/b, interpreted in degrees}\n  show('sin', '/', sin(a, b, den), 1);\n  show('cos', '/', cos(a, b, den), 1);\n  show('tan', '/', tan(a, b, den), 1);\n  writeln('');\n  {display ln, exp, log10, and antilog of a/b}\n  show('ln', '/', ln(a, b, den), 0);\n  if divmult(a, b, 1000) + ln(den, 1, 1000) > ln(maxint, 1, 1000) then\n    begin\n      writeln('EXP(' + str(a) + '/' + str(b) + ') would give numerical overflow, because');\n      writeln('the result*' + str(den) + ' would be greater than ' + str(maxint))\n    end\n  else\n    show('exp', '/', exp(a, b, den), 0);\n  show('log10', '/', log10(a, b, den), 0);\n  if divmult(a, b, 1000) + log10(den, 1, 1000) > log10(maxint, 1, 1000) then\n    begin\n      writeln('ANTILOG(' + str(a) + '/' + str(b) + ') would give numerical overflow, because');\n      writeln('the result*' + str(den) + ' would be greater than ' + str(maxint))\n    end\n  else\n    show('antilog', '/', antilog(a, b, den), 0);\n  writeln('');\n  {display arccos, arcsin, and arctan of a/b, in degrees}\n  if a > b then\n    writeln('ARCCOS and ARCSIN are not defined for ' + str(a) + '/' + str(b) + ' = ' + qstr(a, b,\n     dpl))\n  else\n    begin\n      show('arccos', '/', arccos(a, b, den), 2);\n      show('arcsin', '/', arcsin(a, b, den), 2)\n    end;\n  show('arctan', '/', arctan(a, b, den), 2)\nEND.",
  "usage":[
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"output", "level":2, "count":1, "lines":"22"}
      ],
      "total":1
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"hypot", "level":2, "count":1, "lines":"44"},
        {"name":"random", "level":2, "count":2, "lines":"32 33"},
        {"name":"sqrt", "level":2, "count":1, "lines":"45"},
        {"name":"divmult", "level":3, "count":2, "lines":"54 62"},
        {"name":"maxint", "level":3, "count":4, "lines":"54 57 62 65"},
        {"name":"power", "level":3, "count":2, "lines":"38 40"},
        {"name":"root", "level":3, "count":2, "lines":"39 41"}
      ],
      "total":14
    },
    {
      "category": "Trig / exp / log functions",
      "expressions":[
        {"name":"cos", "level":2, "count":1, "lines":"49"},
        {"name":"exp", "level":2, "count":1, "lines":"60"},
        {"name":"ln", "level":2, "count":3, "lines":"53 54 54"},
        {"name":"sin", "level":2, "count":1, "lines":"48"},
        {"name":"tan", "level":2, "count":1, "lines":"50"},
        {"name":"antilog", "level":3, "count":1, "lines":"68"},
        {"name":"arccos", "level":3, "count":1, "lines":"76"},
        {"name":"arcsin", "level":3, "count":1, "lines":"77"},
        {"name":"arctan", "level":3, "count":1, "lines":"79"},
        {"name":"log10", "level":3, "count":3, "lines":"61 62 62"}
      ],
      "total":14
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"writeln", "level":1, "count":23, "lines":"12 15 17 23 24 25 26 27 28 29 30 34 35 36 42 46 51 56 57 64 65 69 72"}
      ],
      "total":23
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"str", "level":1, "count":22, "lines":"12 12 15 15 17 17 26 26 34 34 35 35 56 56 57 57 64 64 65 65 72 72"},
        {"name":"qstr", "level":2, "count":5, "lines":"12 15 17 35 72"},
        {"name":"chr", "level":3, "count":2, "lines":"12 15"}
      ],
      "total":29
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":5, "lines":"11 14 54 62 71"},
        {"name":"else", "level":1, "count":5, "lines":"13 16 59 67 74"},
        {"name":"procedure", "level":2, "count":1, "lines":"9"}
      ],
      "total":11
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"show", "level":0, "count":16, "lines":"38 39 40 41 44 45 48 49 50 53 60 61 68 76 77 79"}
      ],
      "total":16
    }
  ],
  "pcode":[
    [112,13,1,1,112,0,123,112,6,2,123,4,112,8,124,112,21,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [128,15],
    [133,1],
    [139,12,38],
    [120,12,38,120,12,37,120,12,36,117,12,2,1,1,4,120,12,1,112,33,2,123,4,126],
    [114,12,38,112,1,32,129,10],
    [114,12,1,112,40,9,64,113,20,11,64,114,12,36,9,64,113,21,11,64,112,176,9,64,118,4,41,32,61,32,64,114,12,37,112,1000000,112,4,14,64,169,170],
    [128,14],
    [114,12,38,112,2,32,142,129,13],
    [114,12,1,112,40,9,64,113,20,11,64,114,12,36,9,64,113,21,11,64,118,4,41,32,61,32,64,114,12,37,112,1000000,112,4,14,64,112,176,9,64,169,170],
    [128,14],
    [114,12,1,112,40,9,64,113,20,11,64,114,12,36,9,64,113,21,11,64,118,4,41,32,61,32,64,114,12,37,112,1000000,112,4,14,64,169,170,142],
    [140,12,134,132],
    [112,-1,112,16777215,112,-1,166],
    [118,55,84,104,105,115,32,112,114,111,103,114,97,109,32,115,101,108,101,99,116,115,32,116,119,111,32,114,97,110,100,111,109,32,110,117,109,98,101,114,115,32,97,32,97,110,100,32,98,44,32,105,110,32,116,104,101,169,170,142],
    [118,52,114,97,110,103,101,32,49,48,48,45,57,57,57,44,32,97,110,100,32,116,104,101,110,32,111,117,116,112,117,116,115,32,118,97,114,105,111,117,115,32,109,97,116,104,101,109,97,116,105,99,97,108,169,170,142],
    [118,56,102,117,110,99,116,105,111,110,115,32,111,102,32,116,104,101,32,102,114,97,99,116,105,111,110,32,97,47,98,46,32,84,104,101,32,114,101,115,117,108,116,115,32,97,114,101,32,101,120,112,114,101,115,115,101,100,169,170,142],
    [118,3,116,111,32,112,4,11,64,118,38,32,100,101,99,105,109,97,108,32,112,108,97,99,101,115,44,32,97,110,100,32,97,32,100,101,110,111,109,105,110,97,116,111,114,32,111,102,32,64,112,1000000,11,64,118,3,32,105,115,64,169,170,142],
    [118,51,117,115,101,100,32,105,110,32,116,104,101,32,99,97,108,99,117,108,97,116,105,111,110,115,32,116,111,32,112,114,111,118,105,100,101,32,112,114,101,99,105,115,105,111,110,44,32,101,118,101,110,169,170,142],
    [118,52,116,104,111,117,103,104,32,116,104,101,32,84,117,114,116,108,101,32,102,117,110,99,116,105,111,110,115,32,115,116,114,105,99,116,108,121,32,111,112,101,114,97,116,101,32,111,110,108,121,32,111,110,169,170,142],
    [118,37,105,110,116,101,103,101,114,115,32,97,110,100,32,112,114,111,100,117,99,101,32,105,110,116,101,103,101,114,32,114,101,115,117,108,116,115,46,169,170,142],
    [118,0,169,170,142],
    [112,900,7,112,100,26,119,20],
    [112,900,7,112,100,26,119,21],
    [118,4,97,32,61,32,113,20,11,64,118,6,59,32,98,32,61,32,64,113,21,11,64,169,170,142],
    [118,6,97,47,98,32,61,32,113,20,11,64,112,47,9,64,113,21,11,64,118,3,32,61,32,64,113,20,113,21,112,4,14,64,169,170,142],
    [118,0,169,170,142],
    [118,6,115,113,117,97,114,101,112,47,113,20,113,21,112,2,112,1000000,52,112,0,142,131,4],
    [118,11,115,113,117,97,114,101,32,114,111,111,116,112,47,113,20,113,21,112,2,112,1000000,51,112,0,142,131,4],
    [118,4,99,117,98,101,112,47,113,20,113,21,112,3,112,1000000,52,112,0,142,131,4],
    [118,9,99,117,98,101,32,114,111,111,116,112,47,113,20,113,21,112,3,112,1000000,51,112,0,142,131,4],
    [118,0,169,170,142],
    [118,5,104,121,112,111,116,112,44,113,20,113,21,112,1000000,50,112,0,142,131,4],
    [118,16,99,97,108,99,117,108,97,116,101,100,32,104,121,112,111,116,112,44,113,20,113,20,28,113,21,113,21,28,26,112,1000000,49,112,0,142,131,4],
    [118,0,169,170,142],
    [118,3,115,105,110,112,47,113,20,113,21,112,1000000,57,112,1,142,131,4],
    [118,3,99,111,115,112,47,113,20,113,21,112,1000000,58,112,1,142,131,4],
    [118,3,116,97,110,112,47,113,20,113,21,112,1000000,59,112,1,142,131,4],
    [118,0,169,170,142],
    [118,2,108,110,112,47,113,20,113,21,112,1000000,55,112,0,142,131,4],
    [113,20,113,21,112,1000,48,112,1000000,112,1,112,1000,55,26,6,112,1,112,1000,55,35,129,46],
    [118,4,69,88,80,40,113,20,11,64,112,47,9,64,113,21,11,64,118,40,41,32,119,111,117,108,100,32,103,105,118,101,32,110,117,109,101,114,105,99,97,108,32,111,118,101,114,102,108,111,119,44,32,98,101,99,97,117,115,101,64,169,170,142],
    [118,11,116,104,101,32,114,101,115,117,108,116,42,112,1000000,11,64,118,23,32,119,111,117,108,100,32,98,101,32,103,114,101,97,116,101,114,32,116,104,97,110,32,64,6,11,64,169,170,142],
    [128,47],
    [118,3,101,120,112,112,47,113,20,113,21,112,1000000,56,112,0,142,131,4],
    [118,5,108,111,103,49,48,112,47,113,20,113,21,112,1000000,53,112,0,142,131,4],
    [113,20,113,21,112,1000,48,112,1000000,112,1,112,1000,53,26,6,112,1,112,1000,53,35,129,52],
    [118,8,65,78,84,73,76,79,71,40,113,20,11,64,112,47,9,64,113,21,11,64,118,40,41,32,119,111,117,108,100,32,103,105,118,101,32,110,117,109,101,114,105,99,97,108,32,111,118,101,114,102,108,111,119,44,32,98,101,99,97,117,115,101,64,169,170,142],
    [118,11,116,104,101,32,114,101,115,117,108,116,42,112,1000000,11,64,118,23,32,119,111,117,108,100,32,98,101,32,103,114,101,97,116,101,114,32,116,104,97,110,32,64,6,11,64,169,170,142],
    [128,53],
    [118,7,97,110,116,105,108,111,103,112,47,113,20,113,21,112,1000000,54,112,0,142,131,4],
    [118,0,169,170,142],
    [113,20,113,21,35,129,57],
    [118,38,65,82,67,67,79,83,32,97,110,100,32,65,82,67,83,73,78,32,97,114,101,32,110,111,116,32,100,101,102,105,110,101,100,32,102,111,114,32,113,20,11,64,112,47,9,64,113,21,11,64,118,3,32,61,32,64,113,20,113,21,112,4,14,64,169,170],
    [142,128,59],
    [118,6,97,114,99,99,111,115,112,47,113,20,113,21,112,1000000,61,112,2,142,131,4],
    [118,6,97,114,99,115,105,110,112,47,113,20,113,21,112,1000000,60,112,2,142,131,4],
    [118,6,97,114,99,116,97,110,112,47,113,20,113,21,112,1000000,62,112,2,142,131,4],
    [130]
  ]
}
