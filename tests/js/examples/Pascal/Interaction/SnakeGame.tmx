{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Snake (classic game)",
  "author":"Peter Millican",
  "date":"31/08/2020",
  "time":"11:16:45",
  "code":"PROGRAM SnakeGame;\nCONST boardsize = 30;\n      snakecolour = purple;\n      applecolour = green;\nVAR snakelength: integer;\n    crash: boolean;\n\n  Procedure newapple;\n  Var x, y: integer;\n  Begin\n    repeat\n      x := random(boardsize);\n      y := random(boardsize)\n    until (pixcol(x, y) <> snakecolour);\n    pixset(x, y, applecolour)\n  End;\n\nBEGIN\n  canvas(0, 0, boardsize, boardsize);\n  resolution(boardsize, boardsize);\n  angles(4);\n  blank(lightblue);\n  cursor(0);\n  colour(snakecolour);\n  thickness(1);\n  penup;\n  forward(1);\n  snakelength := 2;\n  newapple;\n  crash := false;\n  repeat\n    noupdate;\n    if (abs(?key) = \\up) and (turtd <> 2) then\n      direction(0);\n    if (abs(?key) = \\right) and (turtd <> 3) then\n      direction(1);\n    if (abs(?key) = \\down) and (turtd <> 0) then\n      direction(2);\n    if (abs(?key) = \\left) and (turtd <> 1) then\n      direction(3);\n    forward(1);\n    if (turtx < 0) or (turtx >= boardsize) or (turty < 0) or (turty >= boardsize) then\n      crash := true;\n    if pixcol(turtx, turty) = snakecolour then\n      crash := true;\n    if pixcol(turtx, turty) = applecolour then\n      begin\n        inc(snakelength);\n        pixset(turtx, turty, snakecolour);\n        newapple\n      end;\n    colour(lightblue);\n    polyline(snakelength + 2);\n    colour(snakecolour);\n    polyline(snakelength);\n    update;\n    pause(250 - (snakelength * 3))\n  until crash;\n  resolution(1000, 1000);\n  blank(lilac);\n  setxy(boardsize / 4, 2 * boardsize / 5);\n  print('Score ' + str(snakelength - 2), 20, 100)\nEND.",
  "usage":[
    {
      "category": "Turtle: relative movement",
      "expressions":[
        {"name":"forward", "level":1, "count":2, "lines":"27 41"}
      ],
      "total":2
    },
    {
      "category": "Turtle: absolute movement",
      "expressions":[
        {"name":"direction", "level":1, "count":4, "lines":"34 36 38 40"},
        {"name":"setxy", "level":1, "count":1, "lines":"61"},
        {"name":"angles", "level":2, "count":1, "lines":"21"}
      ],
      "total":6
    },
    {
      "category": "Turtle: drawing shapes",
      "expressions":[
        {"name":"polyline", "level":2, "count":2, "lines":"53 55"}
      ],
      "total":2
    },
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"colour", "level":1, "count":3, "lines":"24 52 54"},
        {"name":"penup", "level":1, "count":1, "lines":"26"},
        {"name":"thickness", "level":1, "count":1, "lines":"25"}
      ],
      "total":5
    },
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"blank", "level":1, "count":2, "lines":"22 60"},
        {"name":"noupdate", "level":1, "count":1, "lines":"32"},
        {"name":"update", "level":1, "count":1, "lines":"56"},
        {"name":"canvas", "level":2, "count":1, "lines":"19"},
        {"name":"resolution", "level":2, "count":2, "lines":"20 59"},
        {"name":"pixcol", "level":3, "count":3, "lines":"14 44 46"},
        {"name":"pixset", "level":3, "count":2, "lines":"15 49"}
      ],
      "total":12
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"abs", "level":1, "count":4, "lines":"33 35 37 39"},
        {"name":"inc", "level":1, "count":1, "lines":"48"},
        {"name":"random", "level":2, "count":2, "lines":"12 13"}
      ],
      "total":7
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"print", "level":1, "count":1, "lines":"62"}
      ],
      "total":1
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"str", "level":1, "count":1, "lines":"62"}
      ],
      "total":1
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"pause", "level":1, "count":1, "lines":"57"},
        {"name":"cursor", "level":2, "count":1, "lines":"23"}
      ],
      "total":2
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":7, "lines":"33 35 37 39 42 44 46"},
        {"name":"repeat", "level":2, "count":2, "lines":"11 31"},
        {"name":"procedure", "level":2, "count":1, "lines":"8"}
      ],
      "total":10
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"newapple", "level":0, "count":2, "lines":"29 50"}
      ],
      "total":2
    }
  ],
  "pcode":[
    [112,13,1,1,112,0,123,112,6,2,123,4,112,8,124,112,21,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [128,11],
    [133,1],
    [139,12,2],
    [112,30,7,120,12,1],
    [112,30,7,120,12,2],
    [114,12,1,114,12,2,99,112,8388736,33,129,6],
    [114,12,1,114,12,2,112,2263842,100],
    [140,12,134,132],
    [112,0,112,0,112,30,112,30,144],
    [112,30,112,30,145],
    [112,4,84],
    [112,10075135,96],
    [112,0,171],
    [112,8388736,87],
    [112,1,85],
    [112,0,86],
    [112,1,91],
    [112,2,119,20],
    [131,4],
    [112,0,119,21],
    [112,0,146],
    [112,-9,160,24,112,38,32,113,16,112,2,33,17,129,26],
    [112,0,83],
    [112,-9,160,24,112,39,32,113,16,112,3,33,17,129,28],
    [112,1,83],
    [112,-9,160,24,112,40,32,113,16,112,0,33,17,129,30],
    [112,2,83],
    [112,-9,160,24,112,37,32,113,16,112,1,33,17,129,32],
    [112,3,83],
    [112,1,91],
    [113,14,112,0,34,113,14,112,30,37,18,113,15,112,0,34,18,113,15,112,30,37,18,129,35],
    [112,-1,119,21],
    [113,14,113,15,99,112,8388736,32,129,37],
    [112,-1,119,21],
    [113,14,113,15,99,112,2263842,32,129,41],
    [116,20,1,122,4,2,123],
    [113,14,113,15,112,8388736,100],
    [131,4],
    [112,10075135,87],
    [113,20,112,2,26,105],
    [112,8388736,87],
    [113,20,105],
    [112,-1,146],
    [112,250,113,20,112,3,28,27,174],
    [113,21,129,23],
    [112,1000,112,1000,145],
    [112,11572223,96],
    [112,30,112,4,29,112,2,112,30,28,112,5,29,88],
    [118,6,83,99,111,114,101,32,113,20,112,2,27,11,64,112,20,112,100,168,142],
    [130]
  ]
}
