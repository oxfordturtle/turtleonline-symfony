{
  "format":1,
  "language":"BASIC",
  "version":13,
  "name":"Dendritic crystal growth",
  "author":"Peter Millican",
  "date":"31/08/2020",
  "time":"11:18:35",
  "code":"REM Dendrites\n\nCONST HALF% = 100\nCONST CRYSTAL% = CYAN\nCONST MOLECULE% = WHITE\nCONST SOLUTION% = TEAL\nCONST INITRANDOMRADIUS% = 10\nCONST MAXDISTANCE% = 75\nCONST CYCLEMOD% = 5\nCONST MODDELAY% = 0\nwhole% = HALF% * 2 + 3\nCANVAS(-HALF%, -HALF%, whole%, whole%)\nRESOLUTION(whole%, whole%)\nPENUP\nSETXY(-HALF%, -HALF%)\nBOX(whole%, whole%, SOLUTION%, TRUE)\nrandomradius% = INITRANDOMRADIUS%\nWRITELN(\"Initial randomradius = \" + STR$(randomradius%))\nPIXSET(0, 0, CRYSTAL%)\nnumattached% = 1\nWRITELN(\"Counting molecules within growing crystal:\")\nWRITE(\"1 \")\nmaxsofar% = 1\nTIMESET(0)\nREPEAT\n  HOME\n  DIRECTION(RND(360))\n  FORWARD(HALF%)\n  IF PIXCOL(turtx%, turty%) <> SOLUTION% THEN PROCrandomwalk\n  cycle% = 0\n  WHILE NOT(FNattached(turtx%, turty%))\n    PIXSET(turtx%, turty%, MOLECULE%)\n    IF cycle% MOD CYCLEMOD% = 0 THEN\n      UPDATE\n      IF MODDELAY% > 0 THEN\n        PAUSE(MODDELAY%)\n      ENDIF\n      NOUPDATE\n    ENDIF\n    INC(cycle%)\n    PIXSET(turtx%, turty%, SOLUTION%)\n    PROCbiasedwalk\n  ENDWHILE\n  IF numattached% MOD 10 = 0 THEN\n    WRITELN(STR$(numattached%))\n  ELSE\n    WRITE(STR$(numattached%) + \" \")\n  ENDIF\n  IF maxsofar% > randomradius% THEN\n    randomradius% = maxsofar%\n    WRITELN(\"\")\n    WRITELN(\"randomradius = \" + STR$(randomradius%))\n  ENDIF\nUNTIL maxsofar% >= MAXDISTANCE%\nWRITELN(\"Simulation finished (\" + QSTR$(TIME, 1000, 2) + \" seconds)\")\nEND\n\nDEF FNattached(x%, y%)\n  result% = FALSE\n  IF (PIXCOL(x% - 1, y%) = CRYSTAL%) OR (PIXCOL(x% + 1, y%) = CRYSTAL%) OR (PIXCOL(x%, y% - 1) = CRYSTAL%) OR (PIXCOL(x%, y% + 1) = CRYSTAL%) THEN\n    result% = TRUE\n    PIXSET(x%, y%, CRYSTAL%)\n    INC(numattached%)\n    IF HYPOT(x%, y%, 1) >= maxsofar% THEN\n      maxsofar% = HYPOT(x%, y%, 1)\n    ENDIF\n  ENDIF\n= result%\n\nDEF PROCrandomwalk\n  LOCAL n%\n  REPEAT\n    n% = RND(4) * 2\n    turtx% = turtx% + n% DIV 3 - 1\n    turty% = turty% + n% MOD 3 - 1\n    IF PIXCOL(turtx%, turty%) = BLACK THEN\n      turtx% = turtx% - 2 * (n% DIV 3 - 1)\n      turty% = turty% - 2 * (n% MOD 3 - 1)\n    ENDIF\n  UNTIL PIXCOL(turtx%, turty%) = SOLUTION%\nENDPROC\n\nDEF PROCbiasedwalk\n  LOCAL distance%, turn%, range%\n  TURNXY(-turtx%, -turty%)\n  distance% = HYPOT(turtx%, turty%, 1)\n  IF distance% < randomradius% THEN\n    DIRECTION(RND(360))\n  ELSE\n    range% = DIVMULT(HALF% - distance%, HALF% - randomradius%, 180)\n    turn% = RND(range% * 2) - range%\n    RIGHT(turn%)\n  ENDIF\n  REPEAT\n    FORWARD(1)\n  UNTIL PIXCOL(turtx%, turty%) = SOLUTION%\nENDPROC",
  "usage":[
    {
      "category": "Turtle: relative movement",
      "expressions":[
        {"name":"FORWARD", "level":1, "count":2, "lines":"95 28"},
        {"name":"RIGHT", "level":1, "count":1, "lines":"92"}
      ],
      "total":3
    },
    {
      "category": "Turtle: absolute movement",
      "expressions":[
        {"name":"DIRECTION", "level":1, "count":2, "lines":"88 27"},
        {"name":"HOME", "level":1, "count":1, "lines":"26"},
        {"name":"SETXY", "level":1, "count":1, "lines":"15"},
        {"name":"TURNXY", "level":2, "count":1, "lines":"85"}
      ],
      "total":5
    },
    {
      "category": "Turtle: drawing shapes",
      "expressions":[
        {"name":"BOX", "level":2, "count":1, "lines":"16"}
      ],
      "total":1
    },
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"PENUP", "level":1, "count":1, "lines":"14"}
      ],
      "total":1
    },
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"NOUPDATE", "level":1, "count":1, "lines":"38"},
        {"name":"UPDATE", "level":1, "count":1, "lines":"34"},
        {"name":"CANVAS", "level":2, "count":1, "lines":"12"},
        {"name":"RESOLUTION", "level":2, "count":1, "lines":"13"},
        {"name":"PIXCOL", "level":3, "count":8, "lines":"60 60 60 60 76 80 96 29"},
        {"name":"PIXSET", "level":3, "count":4, "lines":"62 19 32 41"}
      ],
      "total":16
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"INC", "level":1, "count":2, "lines":"63 40"},
        {"name":"HYPOT", "level":2, "count":3, "lines":"64 65 86"},
        {"name":"RND", "level":2, "count":4, "lines":"73 88 91 27"},
        {"name":"DIVMULT", "level":3, "count":1, "lines":"90"}
      ],
      "total":10
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"WRITE", "level":1, "count":2, "lines":"22 47"},
        {"name":"WRITELN", "level":1, "count":6, "lines":"18 21 45 51 52 55"}
      ],
      "total":8
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"STR$", "level":1, "count":4, "lines":"18 45 47 52"},
        {"name":"QSTR$", "level":2, "count":1, "lines":"55"}
      ],
      "total":5
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"PAUSE", "level":1, "count":1, "lines":"36"},
        {"name":"TIME", "level":2, "count":1, "lines":"55"},
        {"name":"TIMESET", "level":2, "count":1, "lines":"24"}
      ],
      "total":3
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"IF", "level":1, "count":9, "lines":"60 64 76 87 29 33 35 44 49"},
        {"name":"ELSE", "level":1, "count":2, "lines":"89 46"},
        {"name":"REPEAT", "level":2, "count":3, "lines":"72 94 25"},
        {"name":"WHILE", "level":2, "count":1, "lines":"31"},
        {"name":"DEF PROC", "level":2, "count":2, "lines":"70 83"},
        {"name":"DEF FN", "level":3, "count":1, "lines":"58"}
      ],
      "total":18
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"PROCrandomwalk", "level":0, "count":1, "lines":"29"},
        {"name":"FNattached", "level":0, "count":1, "lines":"31"},
        {"name":"PROCbiasedwalk", "level":0, "count":1, "lines":"42"}
      ],
      "total":3
    }
  ],
  "pcode":[
    [112,16,1,1,112,0,123,112,6,2,123,4,112,12,124,112,28,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [128,39],
    [133,1],
    [139,12,3],
    [120,12,3,120,12,2],
    [112,0,119,28],
    [114,12,2,112,1,27,114,12,3,99,112,65535,32,114,12,2,112,1,26,114,12,3,99,112,65535,32,18,114,12,2,114,12,3,112,1,27,99,112,65535,32,18,114,12,2,114,12,3,112,1,26,99,112,65535,32,18,129,14],
    [112,-1,119,28],
    [114,12,2,114,12,3,112,65535,100],
    [116,25,1,122,4,2,123],
    [114,12,2,114,12,3,112,1,50,113,26,37,129,14],
    [114,12,2,114,12,3,112,1,50,119,26],
    [113,28,120,12,1],
    [113,12,119,15,140,12,134,132],
    [133,2],
    [139,13,1],
    [112,4,7,4,112,2,28,120,13,1],
    [113,17,114,13,1,112,3,30,26,112,1,27,119,17],
    [113,18,114,13,1,112,3,31,26,112,1,27,119,18],
    [113,17,113,18,99,112,0,32,129,24],
    [113,17,112,2,114,13,1,112,3,30,112,1,27,28,27,119,17],
    [113,18,112,2,114,13,1,112,3,31,112,1,27,28,27,119,18],
    [113,17,113,18,99,112,32896,32,129,18],
    [140,13,134,132],
    [133,3],
    [139,14,3],
    [113,17,23,113,18,23,95],
    [113,17,113,18,112,1,50,120,14,1],
    [114,14,1,113,24,34,129,33],
    [112,360,7,4,83],
    [128,36],
    [112,100,114,14,1,27,112,100,113,24,27,112,180,48,120,14,3],
    [114,14,3,112,2,28,7,4,114,14,3,27,120,14,2],
    [114,14,2,94],
    [112,1,91],
    [113,17,113,18,99,112,32896,32,129,36],
    [140,14,134,132],
    [112,100,112,2,28,112,3,26,119,23],
    [112,100,23,112,100,23,113,23,113,23,144],
    [113,23,113,23,145],
    [112,0,86],
    [112,100,23,112,100,23,88],
    [113,23,113,23,112,32896,112,-1,111],
    [112,10,119,24],
    [118,23,73,110,105,116,105,97,108,32,114,97,110,100,111,109,114,97,100,105,117,115,32,61,32,113,24,11,64,169,170,142],
    [112,0,112,0,112,65535,100],
    [112,1,119,25],
    [118,42,67,111,117,110,116,105,110,103,32,109,111,108,101,99,117,108,101,115,32,119,105,116,104,105,110,32,103,114,111,119,105,110,103,32,99,114,121,115,116,97,108,58,169,170,142],
    [118,2,49,32,169,142],
    [112,1,119,26],
    [112,0,173],
    [80],
    [112,360,7,4,83],
    [112,100,91],
    [113,17,113,18,99,112,32896,33,129,58],
    [131,16],
    [112,0,119,27],
    [113,17,113,18,131,4],
    [114,15,1,16,129,71],
    [113,17,113,18,112,16777215,100],
    [113,27,112,5,31,112,0,32,129,67],
    [112,-1,146],
    [112,0,112,0,35,129,66],
    [112,0,174],
    [112,0,146],
    [116,27,1,122,4,2,123],
    [113,17,113,18,112,32896,100],
    [131,26],
    [128,59],
    [113,25,112,10,31,112,0,32,129,74],
    [113,25,11,169,170,142],
    [128,75],
    [113,25,11,118,1,32,64,169,142],
    [113,26,113,24,35,129,79],
    [113,26,119,24],
    [118,0,169,170,142],
    [118,15,114,97,110,100,111,109,114,97,100,105,117,115,32,61,32,113,24,11,64,169,170,142],
    [113,26,112,75,37,129,53],
    [118,21,83,105,109,117,108,97,116,105,111,110,32,102,105,110,105,115,104,101,100,32,40,172,112,1000,112,2,14,64,118,9,32,115,101,99,111,110,100,115,41,64,169,170,142],
    [130]
  ]
}
