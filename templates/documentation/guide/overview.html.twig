<section class="tab-pane{%if tab == 'overview' %} active{% endif %}" id="overview">
  <section id="interface-overview">
    <h3>Interface Overview</h3>
    <p>The <i>Turtle System</i> is divided into two sections, the <em>programming section</em> on the left, and the <em>tabs section</em> on the right. The programming section is where you write your Turtle programs. You can have up to eight programs open at one time (if you attempt to open a ninth program, it will replace whatever is in the eighth slot, prompting you first if doing so will overwrite unsaved changes).</p>
    <p>The tabs section on the right contains input and output displays for your programs. The first tab contains the <em>canvas</em> for graphical output, while the second tab contains a box for <em>textual output</em>. The smaller <em>console</em> underneath the canvas shows both textual output and textual input. The second two tabs in the Windows system&mdash;the “Quick Help” tabs&mdash;contain information about how to program in the <i>Turtle System</i>. This information is also available on the <a href="{{ path('documentation_help') }}">Turtle Languages Help</a> page on this site, and consequently these tabs are not included in the online system.</p>
    <p>Above all of the tabs on the right is the <em>program execution bar</em>, containing buttons to RUN, PAUSE, and HALT your program, and real-time displays of the Turtle’s current properties (X and Y coordinates, direction, pen thickness, and pen colour).</p>
  </section>
  <section id="technical-overview">
    <h3>Technical Overview: what happens when I click ‘RUN’</h3>
    <p>Computer programs are typically written in some high-level language (like <i>BASIC</i>, <i>C</i>, <i>Java</i>, <i>JavaScript</i>, <i>Pascal</i>, or <i>Python</i>), which is relatively easy for human beings to read and understand. They are then “compiled” (translated) into machine code. Machine code is what the computer actually executes, and it is generally much harder for human beings to read and understand.</p>
    <p>The <i>Turtle System</i> implements a virtual <i>Turtle Machine</i>, which is a software representation of a hypothetical computer, designed to execute its own special machine code. When you write a program and click ‘RUN’, the first thing that happens is that the <i>Turtle System</i> attempts to compile your program into this machine code. If it succeeds, it will then send this code to the <i>Turtle Machine</i> to be executed, and you will see the results of your program on the canvas (and/or in the textual output). If it fails, because of errors in your code, it will throw up an appropriate error message, showing you the line number in which the error was encountered, and the most likely cause of the problem.</p>
    <p>For users who are interested in learning more about machine code, and in how computers work “under the bonnet”, the <i>Turtle System</i> provides a number of advanced features. <span data-mode="basic,normal,expert">To learn about these, please switch to the Machine Guide. For those who simply want to learn how to program, the present guide (together with the <a href="{{ path('documentation_help') }}">Turtle Languages Help</a>) is all you will need. To better understand the <i>Turtle System</i>, however, it is helpful to be aware of these two processes beneath the surface: first the program is compiled into machine code, and then this machine code is executed by the <i>Turtle Machine</i>.</span><span data-mode="expert">Details of these features are available throughout this guide (see especially under <a href="#the-compile-menu">The Compile Menu</a> and <a href="#the-run-menu">The Run Menu</a>).</p>
  </section>
  <section id="teaching-overview">
    <h3>Teaching Overview</h3>
    <p>...</p>
  </section>
</section>
