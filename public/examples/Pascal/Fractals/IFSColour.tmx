{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"IFS mappings on coloured background",
  "author":"Peter Millican",
  "date":"23/07/2020",
  "time":"12:00:03",
  "code":"PROGRAM IFS_Colour;\nCONST maxmappings = 4;\nVAR xleft, xright, ytop, ybottom: integer;\n    scaledown, mappings: integer;\n    gridscale, gridthick: integer;\n    xl, xr, yt, yb, gt: integer;\n    coeffdiv: integer;\n    mapxx, mapxy, mapxc: array[1..maxmappings] of integer;\n    mapyx, mapyy, mapyc: array[1..maxmappings] of integer;\n    count: integer;\n\n  Procedure setsierpinski;\n  Begin\n    xleft := 0;\n    xright := 999;\n    ytop := 0;\n    ybottom := 999;\n    scaledown := 2;\n    mappings := 3;\n    gridscale := 5;\n    gridthick := 64;\n    coeffdiv := 100;\n    mapxx[1] := 50;\n    mapyx[1] := 0;\n    mapxy[1] := 0;\n    mapyy[1] := 50;\n    mapxc[1] := 250;\n    mapyc[1] := 0;\n    mapxx[2] := 50;\n    mapyx[2] := 0;\n    mapxy[2] := 0;\n    mapyy[2] := 50;\n    mapxc[2] := 0;\n    mapyc[2] := 500;\n    mapxx[3] := 50;\n    mapyx[3] := 0;\n    mapxy[3] := 0;\n    mapyy[3] := 50;\n    mapxc[3] := 500;\n    mapyc[3] := 500\n  End;\n\n  Procedure setbarnsley;\n  Begin\n    xleft := -236;\n    xright := 263;\n    ytop := 1;\n    ybottom := 1000;\n    scaledown := 2;\n    mappings := 4;\n    gridscale := 5;\n    gridthick := 32;\n    coeffdiv := 100;\n    mapxx[1] := 0;\n    mapyx[1] := 0;\n    mapxy[1] := 0;\n    mapyy[1] := 16;\n    mapxc[1] := 0;\n    mapyc[1] := 0;\n    mapxx[2] := 85;\n    mapyx[2] := -4;\n    mapxy[2] := 4;\n    mapyy[2] := 85;\n    mapxc[2] := 0;\n    mapyc[2] := 160;\n    mapxx[3] := 20;\n    mapyx[3] := 23;\n    mapxy[3] := -26;\n    mapyy[3] := 22;\n    mapxc[3] := 0;\n    mapyc[3] := 160;\n    mapxx[4] := -15;\n    mapyx[4] := 26;\n    mapxy[4] := 28;\n    mapyy[4] := 24;\n    mapxc[4] := 0;\n    mapyc[4] := 44\n  End;\n\n  Procedure setdragon;\n  Begin\n    xleft := 0;\n    xright := 999;\n    ytop := 0;\n    ybottom := 999;\n    scaledown := 4;\n    mappings := 3;\n    gridscale := 5;\n    gridthick := 64;\n    coeffdiv := 1000;\n    mapxx[1] := 0;\n    mapyx[1] := -577;\n    mapxy[1] := 577;\n    mapyy[1] := 0;\n    mapxc[1] := 95;\n    mapyc[1] := 589;\n    mapxx[2] := 0;\n    mapyx[2] := -577;\n    mapxy[2] := 577;\n    mapyy[2] := 0;\n    mapxc[2] := 441;\n    mapyc[2] := 789;\n    mapxx[3] := 0;\n    mapyx[3] := -577;\n    mapxy[3] := 577;\n    mapyy[3] := 0;\n    mapxc[3] := 95;\n    mapyc[3] := 989\n  End;\n\n  Procedure startprompt;\n  Begin\n    output(true, cream, true);\n    keyecho(false);\n    writeln('ITERATED FUNCTIONS ON COLOURED BACKGROUND');\n    writeln('');\n    write('Select Sierpinski, Barnsley fern, or Dragon curve? (S/B/D) ');\n    keyecho(false);\n    repeat\n    until (abs(?key) = \\s) or (abs(?key) = \\b) or (abs(?key) = \\d);\n    writeln(chr(abs(?key)));\n    if abs(?key) = \\s then\n      begin\n        writeln('Sierpinski mappings will be used');\n        setsierpinski\n      end\n    else\n    if abs(?key) = \\b then\n      begin\n        writeln('Barnsley fern mappings will be used');\n        setbarnsley\n      end\n    else\n      begin\n        writeln('Dragon curve mappings will be used');\n        setdragon\n      end;\n    output(false, white, false)\n  End;\n\n  Procedure setscale;\n  Var i: integer;\n  Begin\n    xl := xleft / scaledown;\n    xr := xright / scaledown;\n    yt := ytop / scaledown;\n    yb := ybottom / scaledown;\n    for i := 1 to mappings do\n      begin\n        mapxc[i] := mapxc[i] / scaledown;\n        mapyc[i] := mapyc[i] / scaledown\n      end;\n    gt := gridthick / scaledown\n  End;\n\n  Procedure background;\n  Var x, y: integer;\n      cx, cy, r, g, b: integer;\n  Begin\n    thickness(gt);\n    colour(darkgrey);\n    for x := 1 to gridscale - 1 do\n      begin\n        setxy(xl + divmult(xr - xl, gridscale, x), yt);\n        drawxy(0, yb - yt)\n      end;\n    for y := 1 to gridscale - 1 do\n      begin\n        setxy(xl + gt / 2, yt + divmult(yb - yt, gridscale, y));\n        drawxy(xr - xl - gt, 0)\n      end;\n    colour(black);\n    setxy(xl, yt);\n    drawxy(xr - xl, 0);\n    drawxy(0, yb - yt);\n    drawxy(xl - xr, 0);\n    drawxy(0, yt - yb);\n    for x := 0 to gridscale - 1 do\n      for y := 0 to gridscale - 1 do\n        begin\n          cx := xl + divmult(xr - xl, gridscale, x) + gt;\n          cy := yt + divmult(yb - yt, gridscale, y) + gt;\n          r := divmult(255, gridscale - 1, x);\n          g := divmult(255, gridscale - 1, y);\n          b := divmult(255, 2 * gridscale - 2, 2 * gridscale - 2 - x - y);\n          recolour(cx, cy, (r * #10000) + (g * #100) + (b * #1))\n        end\n  End;\n\n  Procedure map(a, x, y: integer; var newx, newy: integer);\n  Begin\n    newx := divmult(x, coeffdiv, mapxx[a]) + divmult(y, coeffdiv, mapxy[a]) + mapxc[a];\n    newy := divmult(x, coeffdiv, mapyx[a]) + divmult(y, coeffdiv, mapyy[a]) + mapyc[a]\n  End;\n\n  Procedure domap(mapnum: integer);\n  Var x, y, newx, newy: integer;\n  Begin\n    noupdate;\n    for y := yt to yb do\n      for x := xl to xr do\n        begin\n          map(mapnum, x, y, newx, newy);\n          pixset(newx, newy, pixcol(x, y))\n        end;\n    update\n  End;\n\nBEGIN\n  startprompt;\n  setscale;\n  canvas(xl, yt, xr - xl + 1, yb - yt + 1);\n  resolution(xr - xl + 1, yb - yt + 1);\n  background;\n  for count := 1 to mappings do\n    domap(count)\nEND.",
  "usage":[
    {
      "category": "Turtle: relative movement",
      "expressions":[
        {"name":"drawxy", "level":2, "count":6, "lines":"165 170 174 175 176 177"}
      ],
      "total":6
    },
    {
      "category": "Turtle: absolute movement",
      "expressions":[
        {"name":"setxy", "level":1, "count":3, "lines":"164 169 173"}
      ],
      "total":3
    },
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"colour", "level":1, "count":2, "lines":"161 172"},
        {"name":"thickness", "level":1, "count":1, "lines":"160"},
        {"name":"output", "level":2, "count":2, "lines":"113 138"}
      ],
      "total":5
    },
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"noupdate", "level":1, "count":1, "lines":"199"},
        {"name":"update", "level":1, "count":1, "lines":"206"},
        {"name":"canvas", "level":2, "count":1, "lines":"212"},
        {"name":"resolution", "level":2, "count":1, "lines":"213"},
        {"name":"pixcol", "level":3, "count":1, "lines":"204"},
        {"name":"pixset", "level":3, "count":1, "lines":"204"},
        {"name":"recolour", "level":3, "count":1, "lines":"186"}
      ],
      "total":7
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"abs", "level":1, "count":6, "lines":"120 120 120 121 122 128"},
        {"name":"divmult", "level":3, "count":11, "lines":"164 169 181 182 183 184 185 192 192 193 193"}
      ],
      "total":17
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"write", "level":1, "count":1, "lines":"117"},
        {"name":"writeln", "level":1, "count":6, "lines":"115 116 121 124 130 135"}
      ],
      "total":7
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"chr", "level":3, "count":1, "lines":"121"}
      ],
      "total":1
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"keyecho", "level":2, "count":2, "lines":"114 118"}
      ],
      "total":2
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":2, "lines":"122 128"},
        {"name":"else", "level":1, "count":2, "lines":"127 133"},
        {"name":"for", "level":1, "count":8, "lines":"148 162 167 178 179 200 201 215"},
        {"name":"repeat", "level":2, "count":1, "lines":"119"},
        {"name":"procedure", "level":2, "count":8, "lines":"12 43 80 111 141 156 190 196"}
      ],
      "total":21
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"setsierpinski", "level":0, "count":1, "lines":"125"},
        {"name":"setbarnsley", "level":0, "count":1, "lines":"131"},
        {"name":"setdragon", "level":0, "count":1, "lines":"136"},
        {"name":"map", "level":0, "count":1, "lines":"203"},
        {"name":"startprompt", "level":0, "count":1, "lines":"210"},
        {"name":"setscale", "level":0, "count":1, "lines":"211"},
        {"name":"background", "level":0, "count":1, "lines":"214"},
        {"name":"domap", "level":0, "count":1, "lines":"216"}
      ],
      "total":8
    }
  ],
  "pcode":[
    [112,20,1,1,112,0,123,112,6,2,123,4,112,57,124,112,77,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [116,42,119,41],
    [112,4,119,42],
    [116,48,119,47],
    [112,4,119,48],
    [116,54,119,53],
    [112,4,119,54],
    [116,60,119,59],
    [112,4,119,60],
    [116,66,119,65],
    [112,4,119,66],
    [116,72,119,71],
    [112,4,119,72],
    [128,205],
    [133,1],
    [112,0,119,27],
    [112,999,119,28],
    [112,0,119,29],
    [112,999,119,30],
    [112,2,119,31],
    [112,3,119,32],
    [112,5,119,33],
    [112,64,119,34],
    [112,100,119,40],
    [113,41,112,1,112,1,27,2,127,26,4,112,50,2,123],
    [113,59,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,47,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,65,112,1,112,1,27,2,127,26,4,112,50,2,123],
    [113,53,112,1,112,1,27,2,127,26,4,112,250,2,123],
    [113,71,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,41,112,2,112,1,27,2,127,26,4,112,50,2,123],
    [113,59,112,2,112,1,27,2,127,26,4,112,0,2,123],
    [113,47,112,2,112,1,27,2,127,26,4,112,0,2,123],
    [113,65,112,2,112,1,27,2,127,26,4,112,50,2,123],
    [113,53,112,2,112,1,27,2,127,26,4,112,0,2,123],
    [113,71,112,2,112,1,27,2,127,26,4,112,500,2,123],
    [113,41,112,3,112,1,27,2,127,26,4,112,50,2,123],
    [113,59,112,3,112,1,27,2,127,26,4,112,0,2,123],
    [113,47,112,3,112,1,27,2,127,26,4,112,0,2,123],
    [113,65,112,3,112,1,27,2,127,26,4,112,50,2,123],
    [113,53,112,3,112,1,27,2,127,26,4,112,500,2,123],
    [113,71,112,3,112,1,27,2,127,26,4,112,500,2,123],
    [134,132],
    [133,2],
    [112,236,23,119,27],
    [112,263,119,28],
    [112,1,119,29],
    [112,1000,119,30],
    [112,2,119,31],
    [112,4,119,32],
    [112,5,119,33],
    [112,32,119,34],
    [112,100,119,40],
    [113,41,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,59,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,47,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,65,112,1,112,1,27,2,127,26,4,112,16,2,123],
    [113,53,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,71,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,41,112,2,112,1,27,2,127,26,4,112,85,2,123],
    [113,59,112,2,112,1,27,2,127,26,4,112,4,23,2,123],
    [113,47,112,2,112,1,27,2,127,26,4,112,4,2,123],
    [113,65,112,2,112,1,27,2,127,26,4,112,85,2,123],
    [113,53,112,2,112,1,27,2,127,26,4,112,0,2,123],
    [113,71,112,2,112,1,27,2,127,26,4,112,160,2,123],
    [113,41,112,3,112,1,27,2,127,26,4,112,20,2,123],
    [113,59,112,3,112,1,27,2,127,26,4,112,23,2,123],
    [113,47,112,3,112,1,27,2,127,26,4,112,26,23,2,123],
    [113,65,112,3,112,1,27,2,127,26,4,112,22,2,123],
    [113,53,112,3,112,1,27,2,127,26,4,112,0,2,123],
    [113,71,112,3,112,1,27,2,127,26,4,112,160,2,123],
    [113,41,112,4,112,1,27,2,127,26,4,112,15,23,2,123],
    [113,59,112,4,112,1,27,2,127,26,4,112,26,2,123],
    [113,47,112,4,112,1,27,2,127,26,4,112,28,2,123],
    [113,65,112,4,112,1,27,2,127,26,4,112,24,2,123],
    [113,53,112,4,112,1,27,2,127,26,4,112,0,2,123],
    [113,71,112,4,112,1,27,2,127,26,4,112,44,2,123],
    [134,132],
    [133,3],
    [112,0,119,27],
    [112,999,119,28],
    [112,0,119,29],
    [112,999,119,30],
    [112,4,119,31],
    [112,3,119,32],
    [112,5,119,33],
    [112,64,119,34],
    [112,1000,119,40],
    [113,41,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,59,112,1,112,1,27,2,127,26,4,112,577,23,2,123],
    [113,47,112,1,112,1,27,2,127,26,4,112,577,2,123],
    [113,65,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,53,112,1,112,1,27,2,127,26,4,112,95,2,123],
    [113,71,112,1,112,1,27,2,127,26,4,112,589,2,123],
    [113,41,112,2,112,1,27,2,127,26,4,112,0,2,123],
    [113,59,112,2,112,1,27,2,127,26,4,112,577,23,2,123],
    [113,47,112,2,112,1,27,2,127,26,4,112,577,2,123],
    [113,65,112,2,112,1,27,2,127,26,4,112,0,2,123],
    [113,53,112,2,112,1,27,2,127,26,4,112,441,2,123],
    [113,71,112,2,112,1,27,2,127,26,4,112,789,2,123],
    [113,41,112,3,112,1,27,2,127,26,4,112,0,2,123],
    [113,59,112,3,112,1,27,2,127,26,4,112,577,23,2,123],
    [113,47,112,3,112,1,27,2,127,26,4,112,577,2,123],
    [113,65,112,3,112,1,27,2,127,26,4,112,0,2,123],
    [113,53,112,3,112,1,27,2,127,26,4,112,95,2,123],
    [113,71,112,3,112,1,27,2,127,26,4,112,989,2,123],
    [134,132],
    [133,4],
    [112,-1,112,16777147,112,-1,166],
    [112,0,165],
    [118,41,73,84,69,82,65,84,69,68,32,70,85,78,67,84,73,79,78,83,32,79,78,32,67,79,76,79,85,82,69,68,32,66,65,67,75,71,82,79,85,78,68,169,170,142],
    [118,0,169,170,142],
    [118,59,83,101,108,101,99,116,32,83,105,101,114,112,105,110,115,107,105,44,32,66,97,114,110,115,108,101,121,32,102,101,114,110,44,32,111,114,32,68,114,97,103,111,110,32,99,117,114,118,101,63,32,40,83,47,66,47,68,41,32,169,142],
    [112,0,165],
    [112,-9,160,24,112,83,32,112,-9,160,24,112,66,32,18,112,-9,160,24,112,68,32,18,129,116],
    [112,-9,160,24,9,169,170,142],
    [112,-9,160,24,112,83,32,129,122],
    [118,32,83,105,101,114,112,105,110,115,107,105,32,109,97,112,112,105,110,103,115,32,119,105,108,108,32,98,101,32,117,115,101,100,169,170,142],
    [131,16],
    [128,128],
    [112,-9,160,24,112,66,32,129,126],
    [118,35,66,97,114,110,115,108,101,121,32,102,101,114,110,32,109,97,112,112,105,110,103,115,32,119,105,108,108,32,98,101,32,117,115,101,100,169,170,142],
    [131,45],
    [128,128],
    [118,34,68,114,97,103,111,110,32,99,117,114,118,101,32,109,97,112,112,105,110,103,115,32,119,105,108,108,32,98,101,32,117,115,101,100,169,170,142],
    [131,80],
    [112,0,112,16777215,112,0,166],
    [134,132],
    [133,5],
    [139,16,1],
    [117,16,1,112,1,124],
    [113,27,113,31,29,119,35],
    [113,28,113,31,29,119,36],
    [113,29,113,31,29,119,37],
    [113,30,113,31,29,119,38],
    [112,1],
    [120,16,1,113,32],
    [114,16,1,37,129,143],
    [113,53,114,16,1,112,1,27,2,127,26,4,113,53,114,16,1,112,1,27,2,127,26,4,122,113,31,29,2,123],
    [113,71,114,16,1,112,1,27,2,127,26,4,113,71,114,16,1,112,1,27,2,127,26,4,122,113,31,29,2,123],
    [114,16,1,4,128,138],
    [113,34,113,31,29,119,39],
    [140,16,134,132],
    [133,6],
    [139,17,7],
    [117,17,1,112,7,124],
    [113,39,85],
    [112,4210752,87],
    [112,1],
    [120,17,1,113,33,112,1,27],
    [114,17,1,37,129,156],
    [113,35,113,36,113,35,27,113,33,114,17,1,48,26,113,37,88],
    [112,0,113,38,113,37,27,90],
    [114,17,1,4,128,151],
    [112,1],
    [120,17,2,113,33,112,1,27],
    [114,17,2,37,129,162],
    [113,35,113,39,112,2,29,26,113,37,113,38,113,37,27,113,33,114,17,2,48,26,88],
    [113,36,113,35,27,113,39,27,112,0,90],
    [114,17,2,4,128,157],
    [112,0,87],
    [113,35,113,37,88],
    [113,36,113,35,27,112,0,90],
    [112,0,113,38,113,37,27,90],
    [113,35,113,36,27,112,0,90],
    [112,0,113,37,113,38,27,90],
    [112,0],
    [120,17,1,113,33,112,1,27],
    [114,17,1,37,129,182],
    [112,0],
    [120,17,2,113,33,112,1,27],
    [114,17,2,37,129,181],
    [113,35,113,36,113,35,27,113,33,114,17,1,48,26,113,39,26,120,17,3],
    [113,37,113,38,113,37,27,113,33,114,17,2,48,26,113,39,26,120,17,4],
    [112,255,113,33,112,1,27,114,17,1,48,120,17,5],
    [112,255,113,33,112,1,27,114,17,2,48,120,17,6],
    [112,255,112,2,113,33,28,112,2,27,112,2,113,33,28,112,2,27,114,17,1,27,114,17,2,27,48,120,17,7],
    [114,17,3,114,17,4,114,17,5,112,65536,28,114,17,6,112,256,28,26,114,17,7,112,1,28,26,97],
    [114,17,2,4,128,172],
    [114,17,1,4,128,169],
    [140,17,134,132],
    [133,7],
    [139,18,5],
    [117,18,1,112,5,124,120,18,5,120,18,4,120,18,3,120,18,2,120,18,1],
    [114,18,2,113,40,113,41,114,18,1,112,1,27,2,127,26,4,122,48,114,18,3,113,40,113,47,114,18,1,112,1,27,2,127,26,4,122,48,26,113,53,114,18,1,112,1,27,2,127,26,4,122,26,121,18,4],
    [114,18,2,113,40,113,59,114,18,1,112,1,27,2,127,26,4,122,48,114,18,3,113,40,113,65,114,18,1,112,1,27,2,127,26,4,122,48,26,113,71,114,18,1,112,1,27,2,127,26,4,122,26,121,18,5],
    [140,18,134,132],
    [133,8],
    [139,19,5],
    [117,19,1,112,5,124,120,19,1],
    [112,0,146],
    [113,37],
    [120,19,3,113,38],
    [114,19,3,37,129,203],
    [113,35],
    [120,19,2,113,36],
    [114,19,2,37,129,202],
    [114,19,1,114,19,2,114,19,3,117,19,4,117,19,5,131,183],
    [114,19,4,114,19,5,114,19,2,114,19,3,99,100],
    [114,19,2,4,128,197],
    [114,19,3,4,128,194],
    [112,-1,146],
    [140,19,134,132],
    [131,109],
    [131,130],
    [113,35,113,37,113,36,113,35,27,112,1,26,113,38,113,37,27,112,1,26,144],
    [113,36,113,35,27,112,1,26,113,38,113,37,27,112,1,26,145],
    [131,145],
    [112,1],
    [119,77,113,32],
    [113,77,37,129,215],
    [113,77,131,189],
    [113,77,4,128,211],
    [130]
  ]
}
