{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Mandelbrot multi-colour",
  "author":"Peter Millican",
  "date":"28/07/2020",
  "time":"13:25:09",
  "code":"PROGRAM MandelbrotDemo;\nCONST maxcol=40;\nVAR xcentre,ycentre: integer;\n    xstart,xfinish,ystart,yfinish: integer;\n    a,b,x,y: integer;\n    iterations,temp: integer;\n    scale,pixels: integer;\n\n Procedure startprompt;\n Begin\n  output(true,cream,true);\n  keyecho(false);\n  writeln('MANDELBROT SET DISPLAY PROGRAM');\n  writeln('');\n  write('Select Whole set, or Zoom on mini \"lake\" at -0.1592,-1.0330 (W/Z)');\n  repeat\n  until (abs(?key)=\\w) or (abs(?key)=\\z);\n  writeln(chr(abs(?key)));\n  if abs(?key)=\\w then\n   begin\n    xcentre:=-500000;\n    ycentre:=0\n   end\n  else\n   begin\n    xcentre:=-159200;\n    ycentre:=-1033000\n   end;\n  writeln('');\n  if ycentre=0 then\n   write('Select Fast/Medium/Slow, giving resolution 300/750/1500: (F/M/S) ')\n  else\n   write('Select Fast/Medium/Slow, giving resolution 300/600/1200: (F/M/S) ');\n  repeat\n  until (abs(?key)=\\f) or (abs(?key)=\\m) or (abs(?key)=\\s);\n  writeln(chr(abs(?key)));\n  if ycentre=0 then\n   begin\n    if abs(?key)=\\f then\n     scale:=100\n    else\n    if abs(?key)=\\m then\n     scale:=250\n    else\n     scale:=500;\n    pixels:=scale*3\n   end\n  else\n   begin\n    if abs(?key)=\\f then\n     scale:=10000\n    else\n    if abs(?key)=\\m then\n     scale:=20000\n    else\n     scale:=40000;\n    pixels:=scale/100*3\n   end;\n  output(false,white,false)\n End;\n\nBEGIN\n startprompt;\n xstart:=divmult(xcentre,1000000,scale)-pixels/2;\n ystart:=divmult(ycentre,1000000,scale)-pixels/2;\n xfinish:=xstart+pixels-1;\n yfinish:=ystart+pixels-1;\n writeln('Mandelbrot will be plotted over the following real range:');\n write(qstr(xstart,scale,4)+' < x < '+qstr(xfinish,scale,4)+'    ');\n writeln(qstr(ystart,scale,4)+' < y < '+qstr(yfinish,scale,4));\n writeln('Scaling factor: '+str(scale)+'    Image resolution: '+str(pixels)+'x'+str(pixels));\n canvas(xstart,ystart,pixels,pixels);\n resolution(pixels,pixels);\n timeset(0);\n for a:=xstart to xfinish do\n  begin\n   noupdate;\n   for b:=ystart to yfinish do\n    begin\n     x:=a;\n     y:=b;\n     iterations:=0;\n     while (hypot(x,y,1)<2*scale) and (iterations<=maxcol) do\n      begin\n       temp:=divmult(x+y,scale,x-y);\n       y:=divmult(2*x,scale,y)+b;\n       x:=temp+a;\n       inc(iterations)\n      end;\n     if iterations>maxcol then\n      pixset(a,b,black)\n     else\n      pixset(a,b,rgb(iterations+1))\n    end;\n   update\n  end;\n writeln('Time taken: '+qstr(time,1000,1)+' seconds.')\nEND.",
  "usage":[
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"output", "level":2, "count":2, "lines":"11 59"},
        {"name":"rgb", "level":3, "count":1, "lines":"93"}
      ],
      "total":3
    },
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"noupdate", "level":1, "count":1, "lines":"77"},
        {"name":"update", "level":1, "count":1, "lines":"95"},
        {"name":"canvas", "level":2, "count":1, "lines":"72"},
        {"name":"resolution", "level":2, "count":1, "lines":"73"},
        {"name":"pixset", "level":3, "count":2, "lines":"91 93"}
      ],
      "total":6
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"abs", "level":1, "count":12, "lines":"17 17 18 19 35 35 35 36 39 42 50 53"},
        {"name":"inc", "level":1, "count":1, "lines":"88"},
        {"name":"hypot", "level":2, "count":1, "lines":"83"},
        {"name":"divmult", "level":3, "count":4, "lines":"64 65 85 86"}
      ],
      "total":18
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"write", "level":1, "count":4, "lines":"15 31 33 69"},
        {"name":"writeln", "level":1, "count":9, "lines":"13 14 18 29 36 68 70 71 97"}
      ],
      "total":13
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"str", "level":1, "count":3, "lines":"71 71 71"},
        {"name":"qstr", "level":2, "count":5, "lines":"69 69 70 70 97"},
        {"name":"chr", "level":3, "count":2, "lines":"18 36"}
      ],
      "total":10
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"keyecho", "level":2, "count":1, "lines":"12"},
        {"name":"time", "level":2, "count":1, "lines":"97"},
        {"name":"timeset", "level":2, "count":1, "lines":"74"}
      ],
      "total":3
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":8, "lines":"19 30 37 39 42 50 53 90"},
        {"name":"else", "level":1, "count":8, "lines":"24 32 41 44 48 52 55 92"},
        {"name":"for", "level":1, "count":2, "lines":"75 78"},
        {"name":"repeat", "level":2, "count":2, "lines":"16 34"},
        {"name":"while", "level":2, "count":1, "lines":"83"},
        {"name":"procedure", "level":2, "count":1, "lines":"9"}
      ],
      "total":22
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"startprompt", "level":0, "count":1, "lines":"63"}
      ],
      "total":1
    }
  ],
  "pcode":[
    [112,13,1,1,112,0,123,112,6,2,123,4,112,20,124,112,33,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [128,45],
    [133,1],
    [112,-1,112,16777147,112,-1,166],
    [112,0,165],
    [118,30,77,65,78,68,69,76,66,82,79,84,32,83,69,84,32,68,73,83,80,76,65,89,32,80,82,79,71,82,65,77,169,170,142],
    [118,0,169,170,142],
    [118,65,83,101,108,101,99,116,32,87,104,111,108,101,32,115,101,116,44,32,111,114,32,90,111,111,109,32,111,110,32,109,105,110,105,32,34,108,97,107,101,34,32,97,116,32,45,48,46,49,53,57,50,44,45,49,46,48,51,51,48,32,40,87,47,90,41,169,142],
    [112,-9,160,24,112,87,32,112,-9,160,24,112,90,32,18,129,10],
    [112,-9,160,24,9,169,170,142],
    [112,-9,160,24,112,87,32,129,16],
    [112,500000,23,119,20],
    [112,0,119,21],
    [128,18],
    [112,159200,23,119,20],
    [112,1033000,23,119,21],
    [118,0,169,170,142],
    [113,21,112,0,32,129,22],
    [118,65,83,101,108,101,99,116,32,70,97,115,116,47,77,101,100,105,117,109,47,83,108,111,119,44,32,103,105,118,105,110,103,32,114,101,115,111,108,117,116,105,111,110,32,51,48,48,47,55,53,48,47,49,53,48,48,58,32,40,70,47,77,47,83,41,32,169],
    [128,23],
    [118,65,83,101,108,101,99,116,32,70,97,115,116,47,77,101,100,105,117,109,47,83,108,111,119,44,32,103,105,118,105,110,103,32,114,101,115,111,108,117,116,105,111,110,32,51,48,48,47,54,48,48,47,49,50,48,48,58,32,40,70,47,77,47,83,41,32,169,142],
    [112,-9,160,24,112,70,32,112,-9,160,24,112,77,32,18,112,-9,160,24,112,83,32,18,129,23],
    [112,-9,160,24,9,169,170,142],
    [113,21,112,0,32,129,35],
    [112,-9,160,24,112,70,32,129,29],
    [112,100,119,32],
    [128,33],
    [112,-9,160,24,112,77,32,129,32],
    [112,250,119,32],
    [128,33],
    [112,500,119,32],
    [113,32,112,3,28,119,33],
    [128,43],
    [112,-9,160,24,112,70,32,129,38],
    [112,10000,119,32],
    [128,42],
    [112,-9,160,24,112,77,32,129,41],
    [112,20000,119,32],
    [128,42],
    [112,40000,119,32],
    [113,32,112,100,29,112,3,28,119,33],
    [112,0,112,16777215,112,0,166],
    [134,132],
    [131,4],
    [113,20,112,1000000,113,32,48,113,33,112,2,29,27,119,22],
    [113,21,112,1000000,113,32,48,113,33,112,2,29,27,119,24],
    [113,22,113,33,26,112,1,27,119,23],
    [113,24,113,33,26,112,1,27,119,25],
    [118,57,77,97,110,100,101,108,98,114,111,116,32,119,105,108,108,32,98,101,32,112,108,111,116,116,101,100,32,111,118,101,114,32,116,104,101,32,102,111,108,108,111,119,105,110,103,32,114,101,97,108,32,114,97,110,103,101,58,169,170,142],
    [113,22,113,32,112,4,14,118,7,32,60,32,120,32,60,32,64,113,23,113,32,112,4,14,64,118,4,32,32,32,32,64,169,142],
    [113,24,113,32,112,4,14,118,7,32,60,32,121,32,60,32,64,113,25,113,32,112,4,14,64,169,170,142],
    [118,16,83,99,97,108,105,110,103,32,102,97,99,116,111,114,58,32,113,32,11,64,118,22,32,32,32,32,73,109,97,103,101,32,114,101,115,111,108,117,116,105,111,110,58,32,64,113,33,11,64,112,120,9,64,113,33,11,64,169,170,142],
    [113,22,113,24,113,33,113,33,144],
    [113,33,113,33,145],
    [112,0,173],
    [113,22],
    [119,26,113,23],
    [113,26,37,129,80],
    [112,0,146],
    [113,24],
    [119,27,113,25],
    [113,27,37,129,78],
    [113,26,119,28],
    [113,27,119,29],
    [112,0,119,30],
    [113,28,113,29,112,1,50,112,2,113,32,28,34,113,30,112,40,36,17,129,73],
    [113,28,113,29,26,113,32,113,28,113,29,27,48,119,31],
    [112,2,113,28,28,113,32,113,29,48,113,27,26,119,29],
    [113,31,113,26,26,119,28],
    [116,30,1,122,4,2,123],
    [128,67],
    [113,30,112,40,35,129,76],
    [113,26,113,27,112,0,100],
    [128,77],
    [113,26,113,27,113,30,112,1,26,101,100],
    [113,27,4,128,62],
    [112,-1,146],
    [113,26,4,128,58],
    [118,12,84,105,109,101,32,116,97,107,101,110,58,32,172,112,1000,112,1,14,64,118,9,32,115,101,99,111,110,100,115,46,64,169,170,142],
    [130]
  ]
}
