{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Turing machine simulator",
  "author":"Peter Millican",
  "date":"23/07/2020",
  "time":"12:00:20",
  "code":"PROGRAM TuringMachines;\nCONST margin = 35;\n      tapelabel = 25;\n      tapetop = 100;\n      cycleindent = 200;\n      cyclelabel = 200;\n      tablelabel = 350;\n      tabletop = 425;\n      rowheight = 48;\n      headspace = 6;\n      fontsize = 23;\n      menusize = 36;\n      fonttype = 16;\n      menutype = 4;\n      leftend = -1000;\n      rightend = 1000;\n      showcells = 20;\n      showleftmin = 1;\n      showleft = 4;\n      showright = 2;\n      maxstates = 30;\n      maxbehaviour = 100;\n      maxtriggers = 5;\nVAR tape: array[leftend..rightend] of char;\n    numstates: integer;\n    state: integer;\n    machinetitle: string[64];\n    pausetime: integer;\n    statecodes: string[maxstates];\n    behaviour: array[1..maxstates] of string[maxbehaviour];\n    triggerstring: array[1..maxstates] of string[maxtriggers];\n    transitionstring: array[1..maxstates] of string[maxtriggers];\n    cycles: integer;\n    headpos: integer;\n    leftmost, rightmost: integer;\n    leftshown: integer;\n    lmargin, cellwidth, cmargin: integer;\n\n  Procedure initialise;\n  Var i: integer;\n  Begin\n    statecodes := '';\n    for i := 1 to maxstates do\n      begin\n        behaviour[i] := '';\n        triggerstring[i] := '';\n        transitionstring[i] := ''\n      end;\n    for i := leftend to rightend do\n      tape[i] := ' ';\n    headpos := 0;\n    leftmost := 0;\n    rightmost := 0;\n    leftshown := -showleftmin;\n    cellwidth := 998 / showcells;\n    cmargin := cellwidth / 4;\n    lmargin := (1000 - showcells * cellwidth) / 2\n  End;\n\n  Procedure definemachine(choice: integer);\n  Begin\n    pausetime := 200;\n    if choice = 1 then\n      begin\n        machinetitle := 'Petzold p. 81, 0 1 0 1 ...  4 states';\n        numstates := 4;\n        behaviour[1] := 'b; cP0,R';\n        behaviour[2] := 'c; eR';\n        behaviour[3] := 'e; fP1,R';\n        behaviour[4] := 'f; bR'\n      end\n    else\n    if choice = 2 then\n      begin\n        machinetitle := 'Petzold p. 84, 0 1 0 1 ...  1 state';\n        numstates := 1;\n        behaviour[1] := 'b; bP0;0bR,R,P1;1bR,R,P0;'\n      end\n    else\n    if choice = 3 then\n      begin\n        machinetitle := 'Petzold p. 87, transcendental';\n        numstates := 5;\n        behaviour[1] := 'b;*oP@,R,P@,R,P0,R,R,P0,L,L';\n        behaviour[2] := 'o;1oR,Px,L,L,L;0q';\n        behaviour[3] := 'q; pP1,L;*qR,R';\n        behaviour[4] := 'p;xqP ,R;@fR; pL,L';\n        behaviour[5] := 'f; oP0,L,L;*fR,R'\n      end\n    else\n    if choice = 4 then\n      begin\n        machinetitle := 'Petzold p. 99, binary counting';\n        numstates := 3;\n        behaviour[1] := 'b; iP0';\n        behaviour[2] := 'i;0rP1;1iP0,L; rP1';\n        behaviour[3] := 'r; iL;*rR'\n      end\n    else\n    if choice = 5 then\n      begin\n        machinetitle := 'Petzold pp. 102-8, root of 2';\n        numstates := 27;\n        behaviour[1] := 'b; nP@,R,P1';\n        behaviour[2] := 'n;@mR;*nL';\n        behaviour[3] := 'm;0mR,Px,R;1mR,Px,R; xR,Pz,R,R,Pr';\n        behaviour[4] := 'x;xrP ;@sN;*xL,L';\n        behaviour[5] := 'r;rRR,R;*rR,R';\n        behaviour[6] := 'R;rRR,R; xPr,R,R,Pr';\n        behaviour[7] := 's;@fR,R;*sL,L';\n        behaviour[8] := 'f;xFL;yFL;zDL; fR,R';\n        behaviour[9] := 'F;00R;1dR,R,R';\n        behaviour[10] := 'd;xDL;yDL; dR,R';\n        behaviour[11] := 'D;00R;11R; 1R';\n        behaviour[12] := '0;raPs;uaPv;*0R,R';\n        behaviour[13] := '1;raPv;ucPs,R,R;*1R,R';\n        behaviour[14] := 'c;raPu; zPu;ucPr,R,R';\n        behaviour[15] := 'a;@eR,R;*aL,L';\n        behaviour[16] := 'e;xyP ,L,L;zyPy,L,L;*eR,R';\n        behaviour[17] := 'y;@ER,R;ysPz; sPx';\n        behaviour[18] := 'E;yYP ,L,L;*ER,R';\n        behaviour[19] := 'Y;@oR;*XPy,R';\n        behaviour[20] := 'X; uR,Px;*XR,R';\n        behaviour[21] := 'u;sUPt,R,R;vUPw,R,R;*uR,R';\n        behaviour[22] := 'U;sUPr,R,R;vUPu,R,R;*sN';\n        behaviour[23] := 'z;@pR;*zL';\n        behaviour[24] := 'p;0pR,P ,R;1pR,P ,R; CP0,R,R,R';\n        behaviour[25] := 'o;@PR;*oL';\n        behaviour[26] := 'P;0PR,P ,R;1PR,P ,R; CP1,R,R,R';\n        behaviour[27] := 'C; nN;*CP ,R,R'\n      end\n  End;\n\n  Function statestr(i: integer): string;\n  Begin\n    result := str(i) + ' (''' + statecodes[i] + ''')'\n  End;\n\n  Function analysemachine: boolean;\n  Var i, j, posn: integer;\n      s: string;\n  Begin\n    result := true;\n    i := 1;\n    while i <= numstates do\n      begin\n        if behaviour[i] = '' then\n          begin\n            for j := i + 1 to numstates do\n              behaviour[j - 1] := behaviour[j];\n            dec(numstates)\n          end\n        else\n          begin\n            s := behaviour[i];\n            statecodes := statecodes + s[1];\n            posn := pos(';', s);\n            while posn > 0 do\n              begin\n                s := delete(s, 1, posn);\n                if length(s) > 1 then\n                  begin\n                    if pos(s[1], triggerstring[i]) > 0 then\n                      begin\n                        writeln('State ' + statestr(i) + ' has multiple actions for character \"'\n     + s[1] + '\"');\n                        result := false\n                      end;\n                    triggerstring[i] := triggerstring[i] + s[1];\n                    transitionstring[i] := transitionstring[i] + s[2]\n                  end;\n                posn := pos(';', s)\n              end;\n            inc(i)\n          end\n      end;\n    for i := 1 to numstates - 1 do\n      for j := i + 1 to numstates do\n        if statecodes[i] = statecodes[j] then\n          begin\n            writeln('States ' + str(i) + ' and ' + str(j) + ' both have code \"' + statecodes[i]\n     + '\".');\n            result := false\n          end;\n    if result then\n      for i := 1 to numstates do\n        for j := 1 to length(transitionstring[i]) do\n          begin\n            posn := pos(transitionstring[i, j], statecodes);\n            if posn = 0 then\n              begin\n                writeln('Transition state code \"' + transitionstring[i, j] +\n     '\" is not recognised.');\n                result := false\n              end\n            else\n              transitionstring[i, j] := chr(posn)\n          end\n  End;\n\n  Function getactstring(state: integer; c: char): string;\n  Var posn: integer;\n  Begin\n    posn := pos(';' + c, behaviour[state]);\n    if posn = 0 then\n      posn := pos(';*', behaviour[state]);\n    if posn = 0 then\n      begin\n        writeln('Inconsistent data or analysis for \"' + c + '\" in state ' + statestr(state));\n        result := 'HALT'\n      end\n    else\n      begin\n        result := copy(behaviour[state], posn + 3, maxint);\n        posn := pos(';', result);\n        if posn > 0 then\n          result := copy(result, 1, posn - 1)\n      end\n  End;\n\n  Procedure menu;\n  Var keyok: boolean;\n      choice: integer;\n  Begin\n    blank(white);\n    colour(brown);\n    setxy(margin, 50);\n    print('TURING MACHINE SIMULATOR', menutype or 16, 42);\n    colour(darkred);\n    setxy(margin + 30, 175);\n    print('(Examples are taken from Charles Petzold''s', menutype, 30);\n    setxy(margin + 30, 225);\n    print('excellent book, \"The Annotated Turing\")', menutype, 30);\n    colour(black);\n    setxy(margin, 350);\n    print('Choose from the following:', menutype or 16, menusize);\n    setxy(margin, 450);\n    print('  1.  Petzold p.81 (0 1 0 1 ...  4 states)', menutype, menusize);\n    setxy(margin, 550);\n    print('  2.  Petzold p.84 (0 1 0 1 ...  1 state)', menutype, menusize);\n    setxy(margin, 650);\n    print('  3.  Petzold p.87 (transcendental)', menutype, menusize);\n    setxy(margin, 750);\n    print('  4.  Petzold p.99 (binary counting)', menutype, menusize);\n    setxy(margin, 850);\n    print('  5.  Petzold pp. 102-8, root of 2', menutype, menusize);\n    repeat\n      choice := abs(?key) - 48\n    until (choice > 0) and (choice < 6);\n    definemachine(choice);\n    blank(white)\n  End;\n\n  Procedure dolabels;\n  Begin\n    colour(red);\n    setxy(margin, tapelabel);\n    print('TAPE:', fonttype, fontsize);\n    setxy(margin, cyclelabel);\n    print('CYCLES:', fonttype, fontsize);\n    setxy(margin, tablelabel);\n    print('MACHINE TABLE (' + machinetitle + '):', fonttype, fontsize);\n    colour(lightgrey);\n    setxy(400, cyclelabel);\n    print('(press ESCAPE to return to menu)', fonttype, fontsize)\n  End;\n\n  Procedure drawtable;\n  Var i, j: integer;\n\n    procedure heading(s: string; width: integer);\n    begin\n      colour(black);\n      box(width, rowheight + headspace * 2, brown, true);\n      colour(white);\n      movexy(0, headspace + 4);\n      print(s, fonttype or 32, fontsize);\n      movexy(width, -headspace - 4)\n    end;\n\n    procedure entry(s: string; width: integer);\n    begin\n      box(width, rowheight, white, true);\n      movexy(0, 4);\n      print(s, fonttype, fontsize);\n      movexy(width, -4)\n    end;\n\n  Begin\n    setxy(margin, tabletop);\n    heading(' m-config. ', 150);\n    heading(' symbol ', 130);\n    heading('              operations ', 420);\n    heading(' final m-config. ', 230);\n    colour(black);\n    movexy(0, headspace * 2);\n    for i := 1 to numstates do\n      for j := 1 to length(triggerstring[i]) do\n        begin\n          setxy(margin, turty + rowheight);\n          if j = 1 then\n            entry('   ' + statestr(i), 150)\n          else\n            entry('', 150);\n          if triggerstring[i, j] = ' ' then\n            entry('   None', 130)\n          else\n          if triggerstring[i, j] = '*' then\n            entry('    Any', 130)\n          else\n            entry('      ' + triggerstring[i, j], 130);\n          entry(' ' + getactstring(i, triggerstring[i, j]), 420);\n          entry('        ' + statestr(ord(transitionstring[i, j])), 230)\n        end\n  End;\n\n  Procedure drawtape;\n  Var i: integer;\n  Begin\n    noupdate;\n    setxy(0, tapetop - 5);\n    box(1000, 2 * cellwidth + 10, white, false);\n    if headpos < leftshown + showleft then\n      begin\n        leftshown := headpos - showleft;\n        if leftshown < leftmost - showleftmin then\n          leftshown := leftmost - showleftmin\n      end\n    else\n    if headpos >= leftshown + showcells - showright then\n      leftshown := headpos - showcells + showright + 1;\n    setxy(lmargin - cellwidth, tapetop);\n    for i := leftshown - 1 to leftshown + showcells do\n      begin\n        box(cellwidth, cellwidth, cream, true);\n        movexy(cmargin, 0);\n        print(tape[i], 1, cellwidth / 2);\n        if i mod 5 = 0 then\n          begin\n            movexy(-cmargin + 2, -12);\n            print('.', 1, 12);\n            movexy(cmargin - 2, 12)\n          end;\n        movexy(cellwidth - cmargin, 0)\n      end;\n    setxy(lmargin + cellwidth * (headpos - leftshown), tapetop);\n    thickness(10);\n    box(cellwidth, cellwidth, cyan, true);\n    thickness(2);\n    movexy(cmargin, 0);\n    print(tape[headpos], 1, cellwidth / 2);\n    movexy(0, cellwidth + 8);\n    colour(brown);\n    print(str(state), fonttype, cellwidth / 2);\n    setxy(cycleindent, cyclelabel);\n    box(200, 100, white, false);\n    print(str(cycles), fonttype, cellwidth / 2);\n    colour(black);\n    update\n  End;\n\n  Procedure dostep;\n  Var thischar: char;\n      posn: integer;\n      actstring: string;\n\n    procedure process(var s: string);\n    var posn: integer;\n    begin\n      if s[1] = 'L' then\n        begin\n          dec(headpos);\n          if headpos < leftmost then\n            leftmost := headpos\n        end\n      else\n      if s[1] = 'R' then\n        begin\n          inc(headpos);\n          if headpos > rightmost then\n            rightmost := headpos\n        end\n      else\n      if s[1] = 'P' then\n        begin\n          if length(s) > 1 then\n            begin\n              tape[headpos] := s[2];\n              if (s[2] = '0') or (s[2] = '1') then\n                writeln('Cycle = ' + str(cycles) + '; Position = ' + str(headpos) + '; State = '\n     + statestr(state) + '; Printed = \"' + s[2] + '\"')\n            end\n          else\n            writeln('Null Print instruction for \"' + thischar + '\" in state ' + statestr(state))\n        end;\n      posn := pos(',', s);\n      if posn = 0 then\n        s := ''\n      else\n        s := delete(s, 1, posn)\n    end;\n\n  Begin\n    inc(cycles);\n    thischar := tape[headpos];\n    if pausetime = 200 then\n      writeln('Cycle = ' + str(cycles) + '; Position = ' + str(headpos) + '; State = ' +\n     statestr(state) + '; Symbol = \"' + thischar + '\"');\n    posn := pos(thischar, triggerstring[state]);\n    if posn = 0 then\n      posn := pos('*', triggerstring[state]);\n    if posn = 0 then\n      begin\n        writeln('Action for \"' + thischar + '\" is not defined for state ' + statestr(state));\n        state := 0\n      end\n    else\n      begin\n        actstring := getactstring(state, thischar);\n        if pausetime = 200 then\n          writeln('Processing \"' + actstring + '\"');\n        if actstring = 'HALT' then\n          state := 0\n        else\n          begin\n            while actstring <> '' do\n              process(actstring);\n            state := ord(transitionstring[state, posn])\n          end\n      end\n  End;\n\n  Procedure showspeed;\n  Begin\n    setxy(870, tapelabel);\n    colour(brown);\n    box(95, 32, cream, true);\n    if pausetime = 200 then\n      print('SLOW', fonttype, fontsize)\n    else\n      print(' FAST', fonttype, fontsize)\n  End;\n\nBEGIN\n  repeat\n    initialise;\n    menu;\n    if analysemachine then\n      begin\n        cycles := 0;\n        dolabels;\n        drawtable;\n        drawtape;\n        showspeed;\n        state := 1;\n        repeat\n          dostep;\n          drawtape;\n          pause(pausetime);\n          if (?click > 0) and (?clickx > 870) and (?clicky < 100) then\n            begin\n              pausetime := 200 - pausetime;\n              showspeed;\n              update;\n              pause(500)\n            end\n        until abs(?key) = \\escape\n      end\n  until state = 0\nEND.",
  "usage":[
    {
      "category": "Turtle: relative movement",
      "expressions":[
        {"name":"movexy", "level":2, "count":11, "lines":"276 278 284 286 296 336 340 342 344 350 352"}
      ],
      "total":11
    },
    {
      "category": "Turtle: absolute movement",
      "expressions":[
        {"name":"setxy", "level":1, "count":20, "lines":"227 230 232 235 237 239 241 243 245 257 259 261 264 290 300 321 332 346 355 435"}
      ],
      "total":20
    },
    {
      "category": "Turtle: drawing shapes",
      "expressions":[
        {"name":"box", "level":2, "count":7, "lines":"274 283 322 335 348 356 437"}
      ],
      "total":7
    },
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"colour", "level":1, "count":11, "lines":"226 229 234 256 263 273 275 295 353 358 436"},
        {"name":"thickness", "level":1, "count":2, "lines":"347 349"}
      ],
      "total":13
    },
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"blank", "level":1, "count":2, "lines":"225 251"},
        {"name":"noupdate", "level":1, "count":1, "lines":"320"},
        {"name":"update", "level":1, "count":2, "lines":"359 464"}
      ],
      "total":5
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"abs", "level":1, "count":2, "lines":"248 467"},
        {"name":"dec", "level":1, "count":2, "lines":"151 372"},
        {"name":"inc", "level":1, "count":3, "lines":"174 379 404"},
        {"name":"maxint", "level":3, "count":1, "lines":"214"}
      ],
      "total":8
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"print", "level":1, "count":22, "lines":"228 231 233 236 238 240 242 244 246 258 260 262 265 277 285 337 341 351 354 357 439 441"},
        {"name":"writeln", "level":1, "count":9, "lines":"165 181 192 209 390 394 407 414 421"},
        {"name":"length", "level":2, "count":4, "lines":"161 187 298 386"},
        {"name":"copy", "level":3, "count":2, "lines":"214 217"},
        {"name":"delete", "level":3, "count":2, "lines":"160 400"},
        {"name":"pos", "level":3, "count":10, "lines":"157 163 172 189 204 206 215 396 409 411"}
      ],
      "total":49
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"str", "level":1, "count":9, "lines":"136 181 181 354 357 390 390 407 407"},
        {"name":"chr", "level":3, "count":1, "lines":"197"},
        {"name":"ord", "level":3, "count":2, "lines":"313 428"}
      ],
      "total":12
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"pause", "level":1, "count":2, "lines":"459 465"}
      ],
      "total":2
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":37, "lines":"63 73 80 91 100 147 161 163 179 185 190 205 207 216 301 305 308 323 326 330 338 370 373 377 380 384 386 389 397 406 410 412 420 422 438 448 460"},
        {"name":"else", "level":1, "count":18, "lines":"72 79 90 99 153 196 212 303 307 310 329 376 383 393 399 417 424 440"},
        {"name":"for", "level":1, "count":10, "lines":"43 49 149 177 178 186 187 297 298 333"},
        {"name":"repeat", "level":2, "count":3, "lines":"247 445 456"},
        {"name":"while", "level":2, "count":3, "lines":"145 158 426"},
        {"name":"procedure", "level":2, "count":11, "lines":"39 60 221 254 268 271 281 317 362 367 433"},
        {"name":"function", "level":3, "count":3, "lines":"134 139 201"}
      ],
      "total":85
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"statestr", "level":0, "count":8, "lines":"165 209 302 313 391 394 408 414"},
        {"name":"definemachine", "level":0, "count":1, "lines":"250"},
        {"name":"heading", "level":0, "count":4, "lines":"291 292 293 294"},
        {"name":"entry", "level":0, "count":7, "lines":"302 304 306 309 311 312 313"},
        {"name":"getactstring", "level":0, "count":2, "lines":"312 419"},
        {"name":"process", "level":0, "count":1, "lines":"427"},
        {"name":"initialise", "level":0, "count":1, "lines":"446"},
        {"name":"menu", "level":0, "count":1, "lines":"447"},
        {"name":"analysemachine", "level":0, "count":1, "lines":"448"},
        {"name":"dolabels", "level":0, "count":1, "lines":"451"},
        {"name":"drawtable", "level":0, "count":1, "lines":"452"},
        {"name":"drawtape", "level":0, "count":2, "lines":"453 458"},
        {"name":"showspeed", "level":0, "count":2, "lines":"454 463"},
        {"name":"dostep", "level":0, "count":1, "lines":"457"}
      ],
      "total":33
    }
  ],
  "pcode":[
    [112,27,1,1,112,0,123,112,6,2,123,4,112,5696,124,112,5723,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [116,35,119,34],
    [112,2001,119,35],
    [116,2041,119,2039],
    [112,65,119,2040],
    [116,2109,119,2107],
    [112,31,119,2108],
    [116,2141,119,2140],
    [112,30,119,2141,116,2173,119,2142],
    [112,101,119,2172,116,2275,119,2143],
    [112,101,119,2274,116,2377,119,2144],
    [112,101,119,2376,116,2479,119,2145],
    [112,101,119,2478,116,2581,119,2146],
    [112,101,119,2580,116,2683,119,2147],
    [112,101,119,2682,116,2785,119,2148],
    [112,101,119,2784,116,2887,119,2149],
    [112,101,119,2886,116,2989,119,2150],
    [112,101,119,2988,116,3091,119,2151],
    [112,101,119,3090,116,3193,119,2152],
    [112,101,119,3192,116,3295,119,2153],
    [112,101,119,3294,116,3397,119,2154],
    [112,101,119,3396,116,3499,119,2155],
    [112,101,119,3498,116,3601,119,2156],
    [112,101,119,3600,116,3703,119,2157],
    [112,101,119,3702,116,3805,119,2158],
    [112,101,119,3804,116,3907,119,2159],
    [112,101,119,3906,116,4009,119,2160],
    [112,101,119,4008,116,4111,119,2161],
    [112,101,119,4110,116,4213,119,2162],
    [112,101,119,4212,116,4315,119,2163],
    [112,101,119,4314,116,4417,119,2164],
    [112,101,119,4416,116,4519,119,2165],
    [112,101,119,4518,116,4621,119,2166],
    [112,101,119,4620,116,4723,119,2167],
    [112,101,119,4722,116,4825,119,2168],
    [112,101,119,4824,116,4927,119,2169],
    [112,101,119,4926,116,5029,119,2170],
    [112,101,119,5028,116,5131,119,2171],
    [112,101,119,5130],
    [116,5233,119,5232],
    [112,30,119,5233,116,5265,119,5234],
    [112,6,119,5264,116,5272,119,5235],
    [112,6,119,5271,116,5279,119,5236],
    [112,6,119,5278,116,5286,119,5237],
    [112,6,119,5285,116,5293,119,5238],
    [112,6,119,5292,116,5300,119,5239],
    [112,6,119,5299,116,5307,119,5240],
    [112,6,119,5306,116,5314,119,5241],
    [112,6,119,5313,116,5321,119,5242],
    [112,6,119,5320,116,5328,119,5243],
    [112,6,119,5327,116,5335,119,5244],
    [112,6,119,5334,116,5342,119,5245],
    [112,6,119,5341,116,5349,119,5246],
    [112,6,119,5348,116,5356,119,5247],
    [112,6,119,5355,116,5363,119,5248],
    [112,6,119,5362,116,5370,119,5249],
    [112,6,119,5369,116,5377,119,5250],
    [112,6,119,5376,116,5384,119,5251],
    [112,6,119,5383,116,5391,119,5252],
    [112,6,119,5390,116,5398,119,5253],
    [112,6,119,5397,116,5405,119,5254],
    [112,6,119,5404,116,5412,119,5255],
    [112,6,119,5411,116,5419,119,5256],
    [112,6,119,5418,116,5426,119,5257],
    [112,6,119,5425,116,5433,119,5258],
    [112,6,119,5432,116,5440,119,5259],
    [112,6,119,5439,116,5447,119,5260],
    [112,6,119,5446,116,5454,119,5261],
    [112,6,119,5453,116,5461,119,5262],
    [112,6,119,5460,116,5468,119,5263],
    [112,6,119,5467],
    [116,5475,119,5474],
    [112,30,119,5475,116,5507,119,5476],
    [112,6,119,5506,116,5514,119,5477],
    [112,6,119,5513,116,5521,119,5478],
    [112,6,119,5520,116,5528,119,5479],
    [112,6,119,5527,116,5535,119,5480],
    [112,6,119,5534,116,5542,119,5481],
    [112,6,119,5541,116,5549,119,5482],
    [112,6,119,5548,116,5556,119,5483],
    [112,6,119,5555,116,5563,119,5484],
    [112,6,119,5562,116,5570,119,5485],
    [112,6,119,5569,116,5577,119,5486],
    [112,6,119,5576,116,5584,119,5487],
    [112,6,119,5583,116,5591,119,5488],
    [112,6,119,5590,116,5598,119,5489],
    [112,6,119,5597,116,5605,119,5490],
    [112,6,119,5604,116,5612,119,5491],
    [112,6,119,5611,116,5619,119,5492],
    [112,6,119,5618,116,5626,119,5493],
    [112,6,119,5625,116,5633,119,5494],
    [112,6,119,5632,116,5640,119,5495],
    [112,6,119,5639,116,5647,119,5496],
    [112,6,119,5646,116,5654,119,5497],
    [112,6,119,5653,116,5661,119,5498],
    [112,6,119,5660,116,5668,119,5499],
    [112,6,119,5667,116,5675,119,5500],
    [112,6,119,5674,116,5682,119,5501],
    [112,6,119,5681,116,5689,119,5502],
    [112,6,119,5688,116,5696,119,5503],
    [112,6,119,5695,116,5703,119,5504],
    [112,6,119,5702,116,5710,119,5505],
    [112,6,119,5709],
    [128,476],
    [133,1],
    [139,12,1],
    [117,12,1,112,1,124],
    [113,2107,118,0,2,126,142],
    [112,1],
    [120,12,1,112,30],
    [114,12,1,37,129,117],
    [113,2140,114,12,1,112,1,27,2,127,26,4,122,118,0,2,126,142],
    [113,5232,114,12,1,112,1,27,2,127,26,4,122,118,0,2,126,142],
    [113,5474,114,12,1,112,1,27,2,127,26,4,122,118,0,2,126,142],
    [114,12,1,4,128,111],
    [112,-1000],
    [120,12,1,112,1000],
    [114,12,1,37,129,122],
    [113,34,114,12,1,112,-1000,27,2,127,26,4,112,32,2,123],
    [114,12,1,4,128,118],
    [112,0,119,5717],
    [112,0,119,5718],
    [112,0,119,5719],
    [112,1,23,119,5720],
    [112,998,112,20,29,119,5722],
    [113,5722,112,4,29,119,5723],
    [112,1000,112,20,113,5722,28,27,112,2,29,119,5721],
    [140,12,134,132],
    [133,2],
    [139,13,1],
    [117,13,1,112,1,124,120,13,1],
    [112,200,119,2106],
    [114,13,1,112,1,32,129,142],
    [113,2039,118,36,80,101,116,122,111,108,100,32,112,46,32,56,49,44,32,48,32,49,32,48,32,49,32,46,46,46,32,32,52,32,115,116,97,116,101,115,2,126,142],
    [112,4,119,2037],
    [113,2140,112,1,112,1,27,2,127,26,4,122,118,8,98,59,32,99,80,48,44,82,2,126,142],
    [113,2140,112,2,112,1,27,2,127,26,4,122,118,5,99,59,32,101,82,2,126,142],
    [113,2140,112,3,112,1,27,2,127,26,4,122,118,8,101,59,32,102,80,49,44,82,2,126,142],
    [113,2140,112,4,112,1,27,2,127,26,4,122,118,5,102,59,32,98,82,2,126,142],
    [128,193],
    [114,13,1,112,2,32,129,147],
    [113,2039,118,35,80,101,116,122,111,108,100,32,112,46,32,56,52,44,32,48,32,49,32,48,32,49,32,46,46,46,32,32,49,32,115,116,97,116,101,2,126,142],
    [112,1,119,2037],
    [113,2140,112,1,112,1,27,2,127,26,4,122,118,25,98,59,32,98,80,48,59,48,98,82,44,82,44,80,49,59,49,98,82,44,82,44,80,48,59,2,126,142],
    [128,193],
    [114,13,1,112,3,32,129,156],
    [113,2039,118,29,80,101,116,122,111,108,100,32,112,46,32,56,55,44,32,116,114,97,110,115,99,101,110,100,101,110,116,97,108,2,126,142],
    [112,5,119,2037],
    [113,2140,112,1,112,1,27,2,127,26,4,122,118,27,98,59,42,111,80,64,44,82,44,80,64,44,82,44,80,48,44,82,44,82,44,80,48,44,76,44,76,2,126,142],
    [113,2140,112,2,112,1,27,2,127,26,4,122,118,17,111,59,49,111,82,44,80,120,44,76,44,76,44,76,59,48,113,2,126,142],
    [113,2140,112,3,112,1,27,2,127,26,4,122,118,14,113,59,32,112,80,49,44,76,59,42,113,82,44,82,2,126,142],
    [113,2140,112,4,112,1,27,2,127,26,4,122,118,18,112,59,120,113,80,32,44,82,59,64,102,82,59,32,112,76,44,76,2,126,142],
    [113,2140,112,5,112,1,27,2,127,26,4,122,118,16,102,59,32,111,80,48,44,76,44,76,59,42,102,82,44,82,2,126,142],
    [128,193],
    [114,13,1,112,4,32,129,163],
    [113,2039,118,30,80,101,116,122,111,108,100,32,112,46,32,57,57,44,32,98,105,110,97,114,121,32,99,111,117,110,116,105,110,103,2,126,142],
    [112,3,119,2037],
    [113,2140,112,1,112,1,27,2,127,26,4,122,118,6,98,59,32,105,80,48,2,126,142],
    [113,2140,112,2,112,1,27,2,127,26,4,122,118,18,105,59,48,114,80,49,59,49,105,80,48,44,76,59,32,114,80,49,2,126,142],
    [113,2140,112,3,112,1,27,2,127,26,4,122,118,9,114,59,32,105,76,59,42,114,82,2,126,142],
    [128,193],
    [114,13,1,112,5,32,129,193],
    [113,2039,118,28,80,101,116,122,111,108,100,32,112,112,46,32,49,48,50,45,56,44,32,114,111,111,116,32,111,102,32,50,2,126,142],
    [112,27,119,2037],
    [113,2140,112,1,112,1,27,2,127,26,4,122,118,11,98,59,32,110,80,64,44,82,44,80,49,2,126,142],
    [113,2140,112,2,112,1,27,2,127,26,4,122,118,9,110,59,64,109,82,59,42,110,76,2,126,142],
    [113,2140,112,3,112,1,27,2,127,26,4,122,118,33,109,59,48,109,82,44,80,120,44,82,59,49,109,82,44,80,120,44,82,59,32,120,82,44,80,122,44,82,44,82,44,80,114,2,126,142],
    [113,2140,112,4,112,1,27,2,127,26,4,122,118,16,120,59,120,114,80,32,59,64,115,78,59,42,120,76,44,76,2,126,142],
    [113,2140,112,5,112,1,27,2,127,26,4,122,118,13,114,59,114,82,82,44,82,59,42,114,82,44,82,2,126,142],
    [113,2140,112,6,112,1,27,2,127,26,4,122,118,19,82,59,114,82,82,44,82,59,32,120,80,114,44,82,44,82,44,80,114,2,126,142],
    [113,2140,112,7,112,1,27,2,127,26,4,122,118,13,115,59,64,102,82,44,82,59,42,115,76,44,76,2,126,142],
    [113,2140,112,8,112,1,27,2,127,26,4,122,118,19,102,59,120,70,76,59,121,70,76,59,122,68,76,59,32,102,82,44,82,2,126,142],
    [113,2140,112,9,112,1,27,2,127,26,4,122,118,13,70,59,48,48,82,59,49,100,82,44,82,44,82,2,126,142],
    [113,2140,112,10,112,1,27,2,127,26,4,122,118,15,100,59,120,68,76,59,121,68,76,59,32,100,82,44,82,2,126,142],
    [113,2140,112,11,112,1,27,2,127,26,4,122,118,13,68,59,48,48,82,59,49,49,82,59,32,49,82,2,126,142],
    [113,2140,112,12,112,1,27,2,127,26,4,122,118,17,48,59,114,97,80,115,59,117,97,80,118,59,42,48,82,44,82,2,126,142],
    [113,2140,112,13,112,1,27,2,127,26,4,122,118,21,49,59,114,97,80,118,59,117,99,80,115,44,82,44,82,59,42,49,82,44,82,2,126,142],
    [113,2140,112,14,112,1,27,2,127,26,4,122,118,20,99,59,114,97,80,117,59,32,122,80,117,59,117,99,80,114,44,82,44,82,2,126,142],
    [113,2140,112,15,112,1,27,2,127,26,4,122,118,13,97,59,64,101,82,44,82,59,42,97,76,44,76,2,126,142],
    [113,2140,112,16,112,1,27,2,127,26,4,122,118,25,101,59,120,121,80,32,44,76,44,76,59,122,121,80,121,44,76,44,76,59,42,101,82,44,82,2,126,142],
    [113,2140,112,17,112,1,27,2,127,26,4,122,118,17,121,59,64,69,82,44,82,59,121,115,80,122,59,32,115,80,120,2,126,142],
    [113,2140,112,18,112,1,27,2,127,26,4,122,118,16,69,59,121,89,80,32,44,76,44,76,59,42,69,82,44,82,2,126,142],
    [113,2140,112,19,112,1,27,2,127,26,4,122,118,12,89,59,64,111,82,59,42,88,80,121,44,82,2,126,142],
    [113,2140,112,20,112,1,27,2,127,26,4,122,118,14,88,59,32,117,82,44,80,120,59,42,88,82,44,82,2,126,142],
    [113,2140,112,21,112,1,27,2,127,26,4,122,118,25,117,59,115,85,80,116,44,82,44,82,59,118,85,80,119,44,82,44,82,59,42,117,82,44,82,2,126,142],
    [113,2140,112,22,112,1,27,2,127,26,4,122,118,23,85,59,115,85,80,114,44,82,44,82,59,118,85,80,117,44,82,44,82,59,42,115,78,2,126,142],
    [113,2140,112,23,112,1,27,2,127,26,4,122,118,9,122,59,64,112,82,59,42,122,76,2,126,142],
    [113,2140,112,24,112,1,27,2,127,26,4,122,118,30,112,59,48,112,82,44,80,32,44,82,59,49,112,82,44,80,32,44,82,59,32,67,80,48,44,82,44,82,44,82,2,126,142],
    [113,2140,112,25,112,1,27,2,127,26,4,122,118,9,111,59,64,80,82,59,42,111,76,2,126,142],
    [113,2140,112,26,112,1,27,2,127,26,4,122,118,30,80,59,48,80,82,44,80,32,44,82,59,49,80,82,44,80,32,44,82,59,32,67,80,49,44,82,44,82,44,82,2,126,142],
    [113,2140,112,27,112,1,27,2,127,26,4,122,118,14,67,59,32,110,78,59,42,67,80,32,44,82,44,82,2,126,142],
    [140,13,134,132],
    [133,3],
    [139,14,36],
    [117,14,1,112,36,124,117,14,3,120,14,1,112,33,120,14,2,120,14,36],
    [114,14,1,114,14,36,11,118,3,32,40,39,64,113,2107,114,14,36,112,1,27,2,127,26,4,122,9,64,118,2,39,41,64,2,126,142],
    [113,14,119,26,140,14,134,132],
    [133,4],
    [139,15,39],
    [117,15,1,112,39,124],
    [117,15,7,120,15,5,112,33,120,15,6],
    [112,-1,120,15,1],
    [112,1,120,15,2],
    [114,15,2,113,2037,36,129,230],
    [113,2140,114,15,2,112,1,27,2,127,26,4,122,118,0,40,142,129,214],
    [114,15,2,112,1,26],
    [120,15,3,113,2037],
    [114,15,3,37,129,212],
    [113,2140,114,15,3,112,1,27,112,1,27,2,127,26,4,122,113,2140,114,15,3,112,1,27,2,127,26,4,122,2,126],
    [114,15,3,4,128,208],
    [116,2037,1,122,5,2,123],
    [128,229],
    [114,15,5,113,2140,114,15,2,112,1,27,2,127,26,4,122,2,126],
    [113,2107,113,2107,114,15,5,112,1,112,1,27,2,127,26,4,122,9,64,2,126,142],
    [112,59,9,114,15,5,70,120,15,4,142],
    [114,15,4,112,0,35,129,228],
    [114,15,5,114,15,5,112,1,114,15,4,68,2,126,142],
    [114,15,5,65,112,1,35,129,226],
    [114,15,5,112,1,112,1,27,2,127,26,4,122,9,113,5232,114,15,2,112,1,27,2,127,26,4,122,70,112,0,35,142,129,224],
    [118,6,83,116,97,116,101,32,114,15,2,131,194],
    [114,26,1,8,64,118,37,32,104,97,115,32,109,117,108,116,105,112,108,101,32,97,99,116,105,111,110,115,32,102,111,114,32,99,104,97,114,97,99,116,101,114,32,34,64,114,15,5,112,1,112,1,27,2,127,26,4,122,9,64,112,34,9,64,169,170,142],
    [112,0,120,15,1],
    [113,5232,114,15,2,112,1,27,2,127,26,4,122,113,5232,114,15,2,112,1,27,2,127,26,4,122,114,15,5,112,1,112,1,27,2,127,26,4,122,9,64,2,126,142],
    [113,5474,114,15,2,112,1,27,2,127,26,4,122,113,5474,114,15,2,112,1,27,2,127,26,4,122,114,15,5,112,2,112,1,27,2,127,26,4,122,9,64,2,126,142],
    [112,59,9,114,15,5,70,120,15,4,142],
    [128,217],
    [117,15,2,1,122,4,2,123],
    [128,205],
    [112,1],
    [120,15,2,113,2037,112,1,27],
    [114,15,2,37,129,241],
    [114,15,2,112,1,26],
    [120,15,3,113,2037],
    [114,15,3,37,129,240],
    [113,2107,114,15,2,112,1,27,2,127,26,4,122,113,2107,114,15,3,112,1,27,2,127,26,4,122,32,129,239],
    [118,7,83,116,97,116,101,115,32,114,15,2,11,64,118,5,32,97,110,100,32,64,114,15,3,11,64,118,17,32,98,111,116,104,32,104,97,118,101,32,99,111,100,101,32,34,64,113,2107,114,15,2,112,1,27,2,127,26,4,122,9,64,118,2,34,46,64,169,170,142],
    [112,0,120,15,1],
    [114,15,3,4,128,234],
    [114,15,2,4,128,231],
    [114,15,1,129,256],
    [112,1],
    [120,15,2,113,2037],
    [114,15,2,37,129,256],
    [112,1],
    [120,15,3,113,5474,114,15,2,112,1,27,2,127,26,4,122,65],
    [114,15,3,37,129,255],
    [113,5474,114,15,2,112,1,27,2,127,26,4,122,114,15,3,112,1,27,2,127,26,4,122,9,113,2107,70,120,15,4,142],
    [114,15,4,112,0,32,129,253],
    [118,23,84,114,97,110,115,105,116,105,111,110,32,115,116,97,116,101,32,99,111,100,101,32,34,113,5474,114,15,2,112,1,27,2,127,26,4,122,114,15,3,112,1,27,2,127,26,4,122,9,64,118,20,34,32,105,115,32,110,111,116,32,114,101,99,111,103,110,105,115,101,100,46,64,169,170,142],
    [112,0,120,15,1],
    [128,254],
    [113,5474,114,15,2,112,1,27,2,127,26,4,122,114,15,3,112,1,27,2,127,26,4,114,15,4,2,123],
    [114,15,3,4,128,246],
    [114,15,2,4,128,243],
    [113,15,119,26,140,15,134,132],
    [133,5],
    [139,16,38],
    [117,16,1,112,38,124,117,16,3,120,16,1,112,33,120,16,2,120,16,37,120,16,36],
    [112,59,9,114,16,37,9,64,113,2140,114,16,36,112,1,27,2,127,26,4,122,70,120,16,38,142],
    [114,16,38,112,0,32,129,263],
    [118,2,59,42,113,2140,114,16,36,112,1,27,2,127,26,4,122,70,120,16,38,142],
    [114,16,38,112,0,32,129,268],
    [118,35,73,110,99,111,110,115,105,115,116,101,110,116,32,100,97,116,97,32,111,114,32,97,110,97,108,121,115,105,115,32,102,111,114,32,34,114,16,37,9,64,118,11,34,32,105,110,32,115,116,97,116,101,32,64,114,16,36,131,194],
    [114,26,1,8,64,169,170,142],
    [114,16,1,118,4,72,65,76,84,2,126,142],
    [128,272],
    [114,16,1,113,2140,114,16,36,112,1,27,2,127,26,4,122,114,16,38,112,3,26,6,67,2,126,142],
    [112,59,9,114,16,1,70,120,16,38,142],
    [114,16,38,112,0,35,129,272],
    [114,16,1,114,16,1,112,1,114,16,38,112,1,27,67,2,126,142],
    [113,16,119,26,140,16,134,132],
    [133,6],
    [139,17,2],
    [117,17,1,112,2,124],
    [112,16777215,96],
    [112,9849600,87],
    [112,35,112,50,88],
    [118,24,84,85,82,73,78,71,32,77,65,67,72,73,78,69,32,83,73,77,85,76,65,84,79,82,112,4,112,16,18,112,42,168,142],
    [112,11674146,87],
    [112,35,112,30,26,112,175,88],
    [118,42,40,69,120,97,109,112,108,101,115,32,97,114,101,32,116,97,107,101,110,32,102,114,111,109,32,67,104,97,114,108,101,115,32,80,101,116,122,111,108,100,39,115,112,4,112,30,168,142],
    [112,35,112,30,26,112,225,88],
    [118,39,101,120,99,101,108,108,101,110,116,32,98,111,111,107,44,32,34,84,104,101,32,65,110,110,111,116,97,116,101,100,32,84,117,114,105,110,103,34,41,112,4,112,30,168,142],
    [112,0,87],
    [112,35,112,350,88],
    [118,26,67,104,111,111,115,101,32,102,114,111,109,32,116,104,101,32,102,111,108,108,111,119,105,110,103,58,112,4,112,16,18,112,36,168,142],
    [112,35,112,450,88],
    [118,42,32,32,49,46,32,32,80,101,116,122,111,108,100,32,112,46,56,49,32,40,48,32,49,32,48,32,49,32,46,46,46,32,32,52,32,115,116,97,116,101,115,41,112,4,112,36,168,142],
    [112,35,112,550,88],
    [118,41,32,32,50,46,32,32,80,101,116,122,111,108,100,32,112,46,56,52,32,40,48,32,49,32,48,32,49,32,46,46,46,32,32,49,32,115,116,97,116,101,41,112,4,112,36,168,142],
    [112,35,112,650,88],
    [118,35,32,32,51,46,32,32,80,101,116,122,111,108,100,32,112,46,56,55,32,40,116,114,97,110,115,99,101,110,100,101,110,116,97,108,41,112,4,112,36,168,142],
    [112,35,112,750,88],
    [118,36,32,32,52,46,32,32,80,101,116,122,111,108,100,32,112,46,57,57,32,40,98,105,110,97,114,121,32,99,111,117,110,116,105,110,103,41,112,4,112,36,168,142],
    [112,35,112,850,88],
    [118,34,32,32,53,46,32,32,80,101,116,122,111,108,100,32,112,112,46,32,49,48,50,45,56,44,32,114,111,111,116,32,111,102,32,50,112,4,112,36,168,142],
    [112,-9,160,24,112,48,27,120,17,2],
    [114,17,2,112,0,35,114,17,2,112,6,34,17,129,298],
    [114,17,2,131,130],
    [112,16777215,96],
    [140,17,134,132],
    [133,7],
    [112,16711680,87],
    [112,35,112,25,88],
    [118,5,84,65,80,69,58,112,16,112,23,168,142],
    [112,35,112,200,88],
    [118,7,67,89,67,76,69,83,58,112,16,112,23,168,142],
    [112,35,112,350,88],
    [118,15,77,65,67,72,73,78,69,32,84,65,66,76,69,32,40,113,2039,64,118,2,41,58,64,112,16,112,23,168,142],
    [112,10526880,87],
    [112,400,112,200,88],
    [118,32,40,112,114,101,115,115,32,69,83,67,65,80,69,32,116,111,32,114,101,116,117,114,110,32,116,111,32,109,101,110,117,41,112,16,112,23,168,142],
    [134,132],
    [133,9],
    [139,20,36],
    [117,20,1,112,36,124,120,20,36,117,20,2,1,1,4,120,20,1,112,33,2,123,4,126],
    [112,0,87],
    [114,20,36,112,48,112,6,112,2,28,26,112,9849600,112,-1,111],
    [112,16777215,87],
    [112,0,112,6,112,4,26,89],
    [114,20,1,112,16,112,32,18,112,23,168],
    [114,20,36,112,6,23,112,4,27,89],
    [140,20,134,132],
    [133,10],
    [139,21,36],
    [117,21,1,112,36,124,120,21,36,117,21,2,1,1,4,120,21,1,112,33,2,123,4,126],
    [114,21,36,112,48,112,16777215,112,-1,111],
    [112,0,112,4,89],
    [114,21,1,112,16,112,23,168],
    [114,21,36,112,4,23,89],
    [140,21,134,132],
    [133,8],
    [139,19,2],
    [117,19,1,112,2,124],
    [112,35,112,425,88],
    [118,11,32,109,45,99,111,110,102,105,103,46,32,112,150,142,131,315],
    [118,8,32,115,121,109,98,111,108,32,112,130,142,131,315],
    [118,25,32,32,32,32,32,32,32,32,32,32,32,32,32,32,111,112,101,114,97,116,105,111,110,115,32,112,420,142,131,315],
    [118,17,32,102,105,110,97,108,32,109,45,99,111,110,102,105,103,46,32,112,230,142,131,315],
    [112,0,87],
    [112,0,112,6,112,2,28,89],
    [112,1],
    [120,19,1,113,2037],
    [114,19,1,37,129,368],
    [112,1],
    [120,19,2,113,5232,114,19,1,112,1,27,2,127,26,4,122,65],
    [114,19,2,37,129,367],
    [112,35,113,29,112,48,26,88],
    [114,19,2,112,1,32,129,354],
    [118,3,32,32,32,114,19,1,131,194],
    [114,26,1,8,64,112,150,131,325],
    [128,355],
    [118,0,112,150,142,131,325],
    [113,5232,114,19,1,112,1,27,2,127,26,4,122,114,19,2,112,1,27,2,127,26,4,122,112,32,32,129,358],
    [118,7,32,32,32,78,111,110,101,112,130,131,325],
    [128,362],
    [113,5232,114,19,1,112,1,27,2,127,26,4,122,114,19,2,112,1,27,2,127,26,4,122,112,42,32,142,129,361],
    [118,7,32,32,32,32,65,110,121,112,130,131,325],
    [128,362],
    [118,6,32,32,32,32,32,32,113,5232,114,19,1,112,1,27,2,127,26,4,122,114,19,2,112,1,27,2,127,26,4,122,9,64,112,130,142,131,325],
    [112,32,9,114,19,1,113,5232,114,19,1,112,1,27,2,127,26,4,122,114,19,2,112,1,27,2,127,26,4,122,131,257],
    [114,26,1,8,64,112,420,142,131,325],
    [118,8,32,32,32,32,32,32,32,32,113,5474,114,19,1,112,1,27,2,127,26,4,122,114,19,2,112,1,27,2,127,26,4,122,131,194],
    [114,26,1,8,64,112,230,142,131,325],
    [114,19,2,4,128,347],
    [114,19,1,4,128,344],
    [140,19,134,132],
    [133,11],
    [139,22,1],
    [117,22,1,112,1,124],
    [112,0,146],
    [112,0,112,100,112,5,27,88],
    [112,1000,112,2,113,5722,28,112,10,26,112,16777215,112,0,111],
    [113,5717,113,5720,112,4,26,34,129,380],
    [113,5717,112,4,27,119,5720],
    [113,5720,113,5718,112,1,27,34,129,379],
    [113,5718,112,1,27,119,5720],
    [128,382],
    [113,5717,113,5720,112,20,26,112,2,27,37,129,382],
    [113,5717,112,20,27,112,2,26,112,1,26,119,5720],
    [113,5721,113,5722,27,112,100,88],
    [113,5720,112,1,27],
    [120,22,1,113,5720,112,20,26],
    [114,22,1,37,129,395],
    [113,5722,113,5722,112,16777147,112,-1,111],
    [113,5723,112,0,89],
    [113,34,114,22,1,112,-1000,27,2,127,26,4,122,9,112,1,113,5722,112,2,29,168,142],
    [114,22,1,112,5,31,112,0,32,129,393],
    [113,5723,23,112,2,26,112,12,23,89],
    [112,46,9,112,1,112,12,168,142],
    [113,5723,112,2,27,112,12,89],
    [113,5722,113,5723,27,112,0,89],
    [114,22,1,4,128,384],
    [113,5721,113,5722,113,5717,113,5720,27,28,26,112,100,88],
    [112,10,85],
    [113,5722,113,5722,112,65535,112,-1,111],
    [112,2,85],
    [113,5723,112,0,89],
    [113,34,113,5717,112,-1000,27,2,127,26,4,122,9,112,1,113,5722,112,2,29,168,142],
    [112,0,113,5722,112,8,26,89],
    [112,9849600,87],
    [113,2038,11,112,16,113,5722,112,2,29,168,142],
    [112,200,112,200,88],
    [112,200,112,100,112,16777215,112,0,111],
    [113,5716,11,112,16,113,5722,112,2,29,168,142],
    [112,0,87],
    [112,-1,146],
    [140,22,134,132],
    [133,13],
    [139,24,2],
    [117,24,1,112,2,124,120,24,1],
    [114,24,1,112,1,112,1,27,2,127,26,4,122,112,76,32,129,418],
    [116,5717,1,122,5,2,123],
    [113,5717,113,5718,34,129,417],
    [113,5717,119,5718],
    [128,432],
    [114,24,1,112,1,112,1,27,2,127,26,4,122,112,82,32,129,423],
    [116,5717,1,122,4,2,123],
    [113,5717,113,5719,35,129,422],
    [113,5717,119,5719],
    [128,432],
    [114,24,1,112,1,112,1,27,2,127,26,4,122,112,80,32,129,432],
    [114,24,1,65,112,1,35,129,430],
    [113,34,113,5717,112,-1000,27,2,127,26,4,114,24,1,112,2,112,1,27,2,127,26,4,122,2,123],
    [114,24,1,112,2,112,1,27,2,127,26,4,122,112,48,32,114,24,1,112,2,112,1,27,2,127,26,4,122,112,49,32,18,129,429],
    [118,8,67,121,99,108,101,32,61,32,113,5716,11,64,118,13,59,32,80,111,115,105,116,105,111,110,32,61,32,64,113,5717,11,64,118,10,59,32,83,116,97,116,101,32,61,32,64,113,2038,131,194],
    [114,26,1,8,64,118,13,59,32,80,114,105,110,116,101,100,32,61,32,34,64,114,24,1,112,2,112,1,27,2,127,26,4,122,9,64,112,34,9,64,169,170,142],
    [128,432],
    [118,28,78,117,108,108,32,80,114,105,110,116,32,105,110,115,116,114,117,99,116,105,111,110,32,102,111,114,32,34,114,23,1,9,64,118,11,34,32,105,110,32,115,116,97,116,101,32,64,113,2038,131,194],
    [114,26,1,8,64,169,170,142],
    [112,44,9,114,24,1,70,120,24,2,142],
    [114,24,2,112,0,32,129,436],
    [114,24,1,118,0,2,126,142],
    [128,437],
    [114,24,1,114,24,1,112,1,114,24,2,68,2,126,142],
    [140,24,134,132],
    [133,12],
    [139,23,37],
    [117,23,1,112,37,124],
    [117,23,5,120,23,3,112,33,120,23,4],
    [116,5716,1,122,4,2,123],
    [113,34,113,5717,112,-1000,27,2,127,26,4,122,120,23,1],
    [113,2106,112,200,32,129,447],
    [118,8,67,121,99,108,101,32,61,32,113,5716,11,64,118,13,59,32,80,111,115,105,116,105,111,110,32,61,32,64,113,5717,11,64,118,10,59,32,83,116,97,116,101,32,61,32,64,113,2038,131,194],
    [114,26,1,8,64,118,12,59,32,83,121,109,98,111,108,32,61,32,34,64,114,23,1,9,64,112,34,9,64,169,170,142],
    [114,23,1,9,113,5232,113,2038,112,1,27,2,127,26,4,122,70,120,23,2,142],
    [114,23,2,112,0,32,129,450],
    [112,42,9,113,5232,113,2038,112,1,27,2,127,26,4,122,70,120,23,2,142],
    [114,23,2,112,0,32,129,455],
    [118,12,65,99,116,105,111,110,32,102,111,114,32,34,114,23,1,9,64,118,27,34,32,105,115,32,110,111,116,32,100,101,102,105,110,101,100,32,102,111,114,32,115,116,97,116,101,32,64,113,2038,131,194],
    [114,26,1,8,64,169,170,142],
    [112,0,119,2038],
    [128,466],
    [114,23,3,113,2038,114,23,1,131,257],
    [114,26,1,8,2,126,142],
    [113,2106,112,200,32,129,459],
    [118,12,80,114,111,99,101,115,115,105,110,103,32,34,114,23,3,64,112,34,9,64,169,170,142],
    [114,23,3,118,4,72,65,76,84,40,142,129,462],
    [112,0,119,2038],
    [128,466],
    [114,23,3,118,0,41,142,129,465],
    [114,23,3,131,410],
    [128,462],
    [113,5474,113,2038,112,1,27,2,127,26,4,122,114,23,2,112,1,27,2,127,26,4,122,119,2038],
    [140,23,134,132],
    [133,14],
    [112,870,112,25,88],
    [112,9849600,87],
    [112,95,112,32,112,16777147,112,-1,111],
    [113,2106,112,200,32,129,474],
    [118,4,83,76,79,87,112,16,112,23,168],
    [128,475],
    [118,5,32,70,65,83,84,112,16,112,23,168,142],
    [134,132],
    [131,106],
    [131,273],
    [131,199],
    [114,26,1,129,495],
    [112,0,119,5716],
    [131,303],
    [131,333],
    [131,369],
    [131,467],
    [112,1,119,2038],
    [131,438],
    [131,369],
    [113,2106,174],
    [112,-4,160,112,0,35,112,-5,160,112,870,35,17,112,-6,160,112,100,34,17,129,494],
    [112,200,113,2106,27,119,2106],
    [131,467],
    [112,-1,146],
    [112,500,174],
    [112,-9,160,24,112,27,32,129,486],
    [113,2038,112,0,32,129,476],
    [130]
  ]
}
