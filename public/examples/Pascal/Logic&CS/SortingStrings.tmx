{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Comparison of sorting methods (strings)",
  "author":"Peter Millican",
  "date":"28/07/2020",
  "time":"13:25:12",
  "code":"PROGRAM SortingStrings;\nCONST methods=4;\n      n=100;\n      cols=10;\n      tries=10;\n      checking=true;\nVAR a: array[0..n] of string[3];\n    comps,swaps: integer;\n    caption: array[1..methods] of string;\n    comptotal,swaptotal: array[1..methods] of integer;\n    round,m: integer;\n\n Procedure setup;\n Begin\n  caption[1]:='Bubblesort:';\n  caption[2]:='Selectionsort:';\n  caption[3]:='Insertionsort:';\n  caption[4]:='Quicksort:'\n End;\n\n Procedure init;\n Var i: integer;\n\n  function randword: string;\n  var i: integer;\n  begin\n   result:='';\n   for i:=1 to 3 do\n    result:=result+chr(ord('a')+random(26))\n  end;\n\n Begin\n  for i:=1 to n do\n   a[i]:=randword;\n  for i:=1 to methods do\n   begin\n    comptotal[i]:=0;\n    swaptotal[i]:=0\n   end\n End;\n\n Function lessthan(x,y: string[3]): boolean;\n Begin\n  result:=(x<y);\n  inc(comps)\n End;\n\n Procedure swap(x,y: integer);\n Var t: string[3];\n Begin\n  t:=a[x];\n  a[x]:=a[y];\n  a[y]:=t;\n  inc(swaps)\n End;\n\n Function ordered: boolean;\n Var i: integer;\n Begin\n  result:=true;\n  for i:=2 to n do\n   if a[i-1]>a[i] then\n    result:=false\n End;\n\n Procedure list;\n Var i: integer;\n Begin\n  write('     ');\n  for i:=1 to n do\n   begin\n    write(a[i]+' ');\n    if i mod cols=0 then\n     begin\n      writeln('');\n      write('     ')\n     end\n   end;\n  writeln('')\n End;\n\n Procedure randomise;\n Var i,j: integer;\n Begin\n  for i:=1 to n do\n   begin\n    j:=random(n)+1;\n    swap(i,j)\n   end\n End;\n\n Procedure bubblesort;\n Var i,numswaps: integer;\n Begin\n  repeat\n   numswaps:=0;\n   for i:=1 to n-1 do\n    if lessthan(a[i+1],a[i]) then\n     begin\n      swap(i,i+1);\n      inc(numswaps)\n     end\n  until numswaps=0\n End;\n\n Procedure selectionsort;\n Var i,j: integer;\n     lowsofar: integer;\n Begin\n  for i:=1 to n-1 do\n   begin\n    lowsofar:=i;\n    for j:=i+1 to n do\n     if lessthan(a[j],a[lowsofar]) then\n      lowsofar:=j;\n    if lowsofar<>i then\n     swap(i,lowsofar)\n   end\n End;\n\n Procedure insertionsort;\n Var i,j: integer;\n Begin\n  for i:=2 to n do\n   begin\n    j:=i;\n    while (j>1) and lessthan(a[j],a[j-1]) do\n     begin\n      swap(j-1,j);\n      dec(j)\n     end\n   end\n End;\n\n Procedure quicksort;\n\n  procedure qsort(left,right: integer);\n  var m,i: integer;\n  begin\n   if left<right then\n    begin\n     m:=left;\n     for i:=left+1 to right do\n      if lessthan(a[i],a[left]) then\n       begin\n        inc(m);\n        swap(m,i)\n       end;\n     swap(left,m);\n     qsort(left,m-1);\n     qsort(m+1,right)\n    end\n  end;\n\n Begin\n  qsort(1,n)\n End;\n\n Procedure sort(method: integer);\n Begin\n  comps:=0;\n  swaps:=0;\n  if method=1 then\n   bubblesort\n  else\n  if method=2 then\n   selectionsort\n  else\n  if method=3 then\n   insertionsort\n  else\n  if method=4 then\n   quicksort;\n  write(pad(caption[method],' ',-17)+pad(str(comps),' ',4)+' comparisons');\n  writeln(pad(str(swaps),' ',6)+' swaps');\n  if checking then\n   if not(ordered) then\n    begin\n     writeln('     Sort failed:');\n     list;\n     halt\n    end\n End;\n\nBEGIN\n output(true,white,true);\n setup;\n init;\n writeln(str(methods)+' sorting methods will be compared, each of them being used to');\n writeln('sort randomised arrays of '+str(n)+' items ('+str(tries)+' times), while keeping');\n writeln('track of the numbers of comparisons and swaps required.');\n if checking then\n  writeln('If sorting fails, the program will halt and show the array.');\n writeln('');\n list;\n writeln('');\n for round:=1 to tries do\n  begin\n   for m:=1 to methods do\n    begin\n     randomise;\n     sort(m);\n     comptotal[m]:=comptotal[m]+comps;\n     swaptotal[m]:=swaptotal[m]+swaps\n    end;\n   writeln('')\n  end;\n output(true,cream,true);\n writeln('Averages from sorting '+str(n)+' items, over '+str(tries)+' trials');\n writeln('');\n writeln('               COMPARISONS    SWAPS');\n for m:=1 to methods do\n  begin\n   write(pad(caption[m],' ',-17)+pad(qstr(comptotal[m],tries,1),' ',7));\n   writeln(pad(qstr(swaptotal[m],tries,1),' ',11))\n  end;\n writeln('');\n list\nEND.",
  "usage":[
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"output", "level":2, "count":2, "lines":"186 208"}
      ],
      "total":2
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"dec", "level":1, "count":1, "lines":"130"},
        {"name":"inc", "level":1, "count":4, "lines":"45 54 101 146"},
        {"name":"random", "level":2, "count":2, "lines":"29 87"}
      ],
      "total":7
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"write", "level":1, "count":5, "lines":"69 72 76 174 214"},
        {"name":"writeln", "level":1, "count":16, "lines":"75 79 175 179 189 190 191 193 194 196 206 209 210 211 215 217"},
        {"name":"pad", "level":3, "count":6, "lines":"174 174 175 214 214 215"}
      ],
      "total":27
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"str", "level":1, "count":7, "lines":"174 175 189 190 190 209 209"},
        {"name":"qstr", "level":2, "count":2, "lines":"214 215"},
        {"name":"chr", "level":3, "count":1, "lines":"29"},
        {"name":"ord", "level":3, "count":1, "lines":"29"}
      ],
      "total":11
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"halt", "level":1, "count":1, "lines":"181"}
      ],
      "total":1
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":14, "lines":"62 73 98 114 116 140 144 163 166 169 172 176 177 192"},
        {"name":"else", "level":1, "count":3, "lines":"165 168 171"},
        {"name":"for", "level":1, "count":14, "lines":"28 33 35 61 70 85 97 110 113 124 143 197 199 212"},
        {"name":"repeat", "level":2, "count":1, "lines":"95"},
        {"name":"while", "level":2, "count":1, "lines":"127"},
        {"name":"procedure", "level":2, "count":11, "lines":"13 21 48 66 82 92 106 121 135 137 159"},
        {"name":"function", "level":3, "count":3, "lines":"24 42 57"}
      ],
      "total":47
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"randword", "level":0, "count":1, "lines":"34"},
        {"name":"swap", "level":0, "count":6, "lines":"88 100 117 129 147 149"},
        {"name":"lessthan", "level":0, "count":4, "lines":"98 114 127 144"},
        {"name":"qsort", "level":0, "count":3, "lines":"150 151 156"},
        {"name":"bubblesort", "level":0, "count":1, "lines":"164"},
        {"name":"selectionsort", "level":0, "count":1, "lines":"167"},
        {"name":"insertionsort", "level":0, "count":1, "lines":"170"},
        {"name":"quicksort", "level":0, "count":1, "lines":"173"},
        {"name":"ordered", "level":0, "count":1, "lines":"177"},
        {"name":"list", "level":0, "count":3, "lines":"180 195 218"},
        {"name":"setup", "level":0, "count":1, "lines":"187"},
        {"name":"init", "level":0, "count":1, "lines":"188"},
        {"name":"randomise", "level":0, "count":1, "lines":"201"},
        {"name":"sort", "level":0, "count":1, "lines":"202"}
      ],
      "total":26
    }
  ],
  "pcode":[
    [112,27,1,1,112,0,123,112,6,2,123,4,112,772,124,112,799,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [116,35,119,34],
    [112,101,119,35,116,138,119,36],
    [112,4,119,137,116,143,119,37],
    [112,4,119,142,116,148,119,38],
    [112,4,119,147,116,153,119,39],
    [112,4,119,152,116,158,119,40],
    [112,4,119,157,116,163,119,41],
    [112,4,119,162,116,168,119,42],
    [112,4,119,167,116,173,119,43],
    [112,4,119,172,116,178,119,44],
    [112,4,119,177,116,183,119,45],
    [112,4,119,182,116,188,119,46],
    [112,4,119,187,116,193,119,47],
    [112,4,119,192,116,198,119,48],
    [112,4,119,197,116,203,119,49],
    [112,4,119,202,116,208,119,50],
    [112,4,119,207,116,213,119,51],
    [112,4,119,212,116,218,119,52],
    [112,4,119,217,116,223,119,53],
    [112,4,119,222,116,228,119,54],
    [112,4,119,227,116,233,119,55],
    [112,4,119,232,116,238,119,56],
    [112,4,119,237,116,243,119,57],
    [112,4,119,242,116,248,119,58],
    [112,4,119,247,116,253,119,59],
    [112,4,119,252,116,258,119,60],
    [112,4,119,257,116,263,119,61],
    [112,4,119,262,116,268,119,62],
    [112,4,119,267,116,273,119,63],
    [112,4,119,272,116,278,119,64],
    [112,4,119,277,116,283,119,65],
    [112,4,119,282,116,288,119,66],
    [112,4,119,287,116,293,119,67],
    [112,4,119,292,116,298,119,68],
    [112,4,119,297,116,303,119,69],
    [112,4,119,302,116,308,119,70],
    [112,4,119,307,116,313,119,71],
    [112,4,119,312,116,318,119,72],
    [112,4,119,317,116,323,119,73],
    [112,4,119,322,116,328,119,74],
    [112,4,119,327,116,333,119,75],
    [112,4,119,332,116,338,119,76],
    [112,4,119,337,116,343,119,77],
    [112,4,119,342,116,348,119,78],
    [112,4,119,347,116,353,119,79],
    [112,4,119,352,116,358,119,80],
    [112,4,119,357,116,363,119,81],
    [112,4,119,362,116,368,119,82],
    [112,4,119,367,116,373,119,83],
    [112,4,119,372,116,378,119,84],
    [112,4,119,377,116,383,119,85],
    [112,4,119,382,116,388,119,86],
    [112,4,119,387,116,393,119,87],
    [112,4,119,392,116,398,119,88],
    [112,4,119,397,116,403,119,89],
    [112,4,119,402,116,408,119,90],
    [112,4,119,407,116,413,119,91],
    [112,4,119,412,116,418,119,92],
    [112,4,119,417,116,423,119,93],
    [112,4,119,422,116,428,119,94],
    [112,4,119,427,116,433,119,95],
    [112,4,119,432,116,438,119,96],
    [112,4,119,437,116,443,119,97],
    [112,4,119,442,116,448,119,98],
    [112,4,119,447,116,453,119,99],
    [112,4,119,452,116,458,119,100],
    [112,4,119,457,116,463,119,101],
    [112,4,119,462,116,468,119,102],
    [112,4,119,467,116,473,119,103],
    [112,4,119,472,116,478,119,104],
    [112,4,119,477,116,483,119,105],
    [112,4,119,482,116,488,119,106],
    [112,4,119,487,116,493,119,107],
    [112,4,119,492,116,498,119,108],
    [112,4,119,497,116,503,119,109],
    [112,4,119,502,116,508,119,110],
    [112,4,119,507,116,513,119,111],
    [112,4,119,512,116,518,119,112],
    [112,4,119,517,116,523,119,113],
    [112,4,119,522,116,528,119,114],
    [112,4,119,527,116,533,119,115],
    [112,4,119,532,116,538,119,116],
    [112,4,119,537,116,543,119,117],
    [112,4,119,542,116,548,119,118],
    [112,4,119,547,116,553,119,119],
    [112,4,119,552,116,558,119,120],
    [112,4,119,557,116,563,119,121],
    [112,4,119,562,116,568,119,122],
    [112,4,119,567,116,573,119,123],
    [112,4,119,572,116,578,119,124],
    [112,4,119,577,116,583,119,125],
    [112,4,119,582,116,588,119,126],
    [112,4,119,587,116,593,119,127],
    [112,4,119,592,116,598,119,128],
    [112,4,119,597,116,603,119,129],
    [112,4,119,602,116,608,119,130],
    [112,4,119,607,116,613,119,131],
    [112,4,119,612,116,618,119,132],
    [112,4,119,617,116,623,119,133],
    [112,4,119,622,116,628,119,134],
    [112,4,119,627,116,633,119,135],
    [112,4,119,632,116,638,119,136],
    [112,4,119,637],
    [116,645,119,644],
    [112,4,119,645,116,651,119,646],
    [112,33,119,650,116,685,119,647],
    [112,33,119,684,116,719,119,648],
    [112,33,119,718,116,753,119,649],
    [112,33,119,752],
    [116,787,119,786],
    [112,4,119,787],
    [116,793,119,792],
    [112,4,119,793],
    [128,290],
    [133,1],
    [113,644,112,1,112,1,27,2,127,26,4,122,118,11,66,117,98,98,108,101,115,111,114,116,58,2,126,142],
    [113,644,112,2,112,1,27,2,127,26,4,122,118,14,83,101,108,101,99,116,105,111,110,115,111,114,116,58,2,126,142],
    [113,644,112,3,112,1,27,2,127,26,4,122,118,14,73,110,115,101,114,116,105,111,110,115,111,114,116,58,2,126,142],
    [113,644,112,4,112,1,27,2,127,26,4,122,118,10,81,117,105,99,107,115,111,114,116,58,2,126,142],
    [134,132],
    [133,3],
    [139,14,36],
    [117,14,1,112,36,124,117,14,3,120,14,1,112,33,120,14,2],
    [114,14,1,118,0,2,126,142],
    [112,1],
    [120,14,36,112,3],
    [114,14,36,37,129,132],
    [114,14,1,114,14,1,112,97,112,26,7,26,9,64,2,126,142],
    [114,14,36,4,128,128],
    [113,14,119,26,140,14,134,132],
    [133,2],
    [139,13,1],
    [117,13,1,112,1,124],
    [112,1],
    [120,13,1,112,100],
    [114,13,1,37,129,142],
    [113,34,114,13,1,2,127,26,4,122,131,123],
    [114,26,1,8,2,126,142],
    [114,13,1,4,128,137],
    [112,1],
    [120,13,1,112,4],
    [114,13,1,37,129,148],
    [113,786,114,13,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,792,114,13,1,112,1,27,2,127,26,4,112,0,2,123],
    [114,13,1,4,128,143],
    [140,13,134,132],
    [133,4],
    [139,15,13],
    [117,15,1,112,13,124,117,15,9,1,1,4,120,15,8,112,4,2,123,4,126,117,15,3,1,1,4,120,15,2,112,4,2,123,4,126],
    [114,15,2,114,15,8,42,120,15,1],
    [116,642,1,122,4,2,123],
    [113,15,119,26,140,15,134,132],
    [133,5],
    [139,16,8],
    [117,16,1,112,8,124,120,16,2,120,16,1],
    [117,16,5,120,16,3,112,4,120,16,4],
    [114,16,3,113,34,114,16,1,2,127,26,4,122,2,126],
    [113,34,114,16,1,2,127,26,4,122,113,34,114,16,2,2,127,26,4,122,2,126],
    [113,34,114,16,2,2,127,26,4,122,114,16,3,2,126],
    [116,643,1,122,4,2,123],
    [140,16,134,132],
    [133,6],
    [139,17,2],
    [117,17,1,112,2,124],
    [112,-1,120,17,1],
    [112,2],
    [120,17,2,112,100],
    [114,17,2,37,129,174],
    [113,34,114,17,2,112,1,27,2,127,26,4,122,113,34,114,17,2,2,127,26,4,122,43,129,173],
    [112,0,120,17,1],
    [114,17,2,4,128,169],
    [113,17,119,26,140,17,134,132],
    [133,7],
    [139,18,1],
    [117,18,1,112,1,124],
    [118,5,32,32,32,32,32,169,142],
    [112,1],
    [120,18,1,112,100],
    [114,18,1,37,129,187],
    [113,34,114,18,1,2,127,26,4,122,112,32,9,64,169,142],
    [114,18,1,112,10,31,112,0,32,129,186],
    [118,0,169,170,142],
    [118,5,32,32,32,32,32,169,142],
    [114,18,1,4,128,180],
    [118,0,169,170,142],
    [140,18,134,132],
    [133,8],
    [139,19,2],
    [117,19,1,112,2,124],
    [112,1],
    [120,19,1,112,100],
    [114,19,1,37,129,198],
    [112,100,7,112,1,26,120,19,2],
    [114,19,1,114,19,2,131,155],
    [114,19,1,4,128,193],
    [140,19,134,132],
    [133,9],
    [139,20,2],
    [117,20,1,112,2,124],
    [112,0,120,20,2],
    [112,1],
    [120,20,1,112,100,112,1,27],
    [114,20,1,37,129,211],
    [113,34,114,20,1,112,1,26,2,127,26,4,122,113,34,114,20,1,2,127,26,4,122,131,149],
    [114,26,1,129,210],
    [114,20,1,114,20,1,112,1,26,131,155],
    [117,20,2,1,122,4,2,123],
    [114,20,1,4,128,204],
    [114,20,2,112,0,32,129,202],
    [140,20,134,132],
    [133,10],
    [139,21,3],
    [117,21,1,112,3,124],
    [112,1],
    [120,21,1,112,100,112,1,27],
    [114,21,1,37,129,230],
    [114,21,1,120,21,3],
    [114,21,1,112,1,26],
    [120,21,2,112,100],
    [114,21,2,37,129,227],
    [113,34,114,21,2,2,127,26,4,122,113,34,114,21,3,2,127,26,4,122,131,149],
    [114,26,1,129,226],
    [114,21,2,120,21,3],
    [114,21,2,4,128,221],
    [114,21,3,114,21,1,33,129,229],
    [114,21,1,114,21,3,131,155],
    [114,21,1,4,128,217],
    [140,21,134,132],
    [133,11],
    [139,22,2],
    [117,22,1,112,2,124],
    [112,2],
    [120,22,1,112,100],
    [114,22,1,37,129,244],
    [114,22,1,120,22,2],
    [114,22,2,112,1,35,113,34,114,22,2,2,127,26,4,122,113,34,114,22,2,112,1,27,2,127,26,4,122,131,149],
    [114,26,1,17,129,243],
    [114,22,2,112,1,27,114,22,2,131,155],
    [117,22,2,1,122,5,2,123],
    [128,238],
    [114,22,1,4,128,235],
    [140,22,134,132],
    [133,13],
    [139,24,4],
    [117,24,1,112,4,124,120,24,2,120,24,1],
    [114,24,1,114,24,2,34,129,261],
    [114,24,1,120,24,3],
    [114,24,1,112,1,26],
    [120,24,4,114,24,2],
    [114,24,4,37,129,258],
    [113,34,114,24,4,2,127,26,4,122,113,34,114,24,1,2,127,26,4,122,131,149],
    [114,26,1,129,257],
    [117,24,3,1,122,4,2,123],
    [114,24,3,114,24,4,131,155],
    [114,24,4,4,128,251],
    [114,24,1,114,24,3,131,155],
    [114,24,1,114,24,3,112,1,27,131,245],
    [114,24,3,112,1,26,114,24,2,131,245],
    [140,24,134,132],
    [133,12],
    [112,1,112,100,131,245],
    [134,132],
    [133,14],
    [139,25,1],
    [117,25,1,112,1,124,120,25,1],
    [112,0,119,642],
    [112,0,119,643],
    [114,25,1,112,1,32,129,273],
    [131,199],
    [128,281],
    [114,25,1,112,2,32,129,276],
    [131,213],
    [128,281],
    [114,25,1,112,3,32,129,279],
    [131,231],
    [128,281],
    [114,25,1,112,4,32,129,281],
    [131,262],
    [113,644,114,25,1,112,1,27,2,127,26,4,122,112,32,9,112,17,23,72,113,642,11,112,32,9,112,4,72,64,118,12,32,99,111,109,112,97,114,105,115,111,110,115,64,169,142],
    [113,643,11,112,32,9,112,6,72,118,6,32,115,119,97,112,115,64,169,170,142],
    [112,-1,129,289],
    [131,164],
    [114,26,1,16,129,289],
    [118,17,32,32,32,32,32,83,111,114,116,32,102,97,105,108,101,100,58,169,170,142],
    [131,175],
    [130],
    [140,25,134,132],
    [112,-1,112,16777215,112,-1,166],
    [131,117],
    [131,133],
    [112,4,11,118,61,32,115,111,114,116,105,110,103,32,109,101,116,104,111,100,115,32,119,105,108,108,32,98,101,32,99,111,109,112,97,114,101,100,44,32,101,97,99,104,32,111,102,32,116,104,101,109,32,98,101,105,110,103,32,117,115,101,100,32,116,111,64,169,170,142],
    [118,26,115,111,114,116,32,114,97,110,100,111,109,105,115,101,100,32,97,114,114,97,121,115,32,111,102,32,112,100,11,64,118,8,32,105,116,101,109,115,32,40,64,112,10,11,64,118,22,32,116,105,109,101,115,41,44,32,119,104,105,108,101,32,107,101,101,112,105,110,103,64,169,170,142],
    [118,55,116,114,97,99,107,32,111,102,32,116,104,101,32,110,117,109,98,101,114,115,32,111,102,32,99,111,109,112,97,114,105,115,111,110,115,32,97,110,100,32,115,119,97,112,115,32,114,101,113,117,105,114,101,100,46,169,170,142],
    [112,-1,129,298],
    [118,59,73,102,32,115,111,114,116,105,110,103,32,102,97,105,108,115,44,32,116,104,101,32,112,114,111,103,114,97,109,32,119,105,108,108,32,104,97,108,116,32,97,110,100,32,115,104,111,119,32,116,104,101,32,97,114,114,97,121,46,169,170,142],
    [118,0,169,170,142],
    [131,175],
    [118,0,169,170,142],
    [112,1],
    [119,798,112,10],
    [113,798,37,129,314],
    [112,1],
    [119,799,112,4],
    [113,799,37,129,312],
    [131,189],
    [113,799,131,265],
    [113,786,113,799,112,1,27,2,127,26,4,113,786,113,799,112,1,27,2,127,26,4,122,113,642,26,2,123],
    [113,792,113,799,112,1,27,2,127,26,4,113,792,113,799,112,1,27,2,127,26,4,122,113,643,26,2,123],
    [113,799,4,128,305],
    [118,0,169,170,142],
    [113,798,4,128,302],
    [112,-1,112,16777147,112,-1,166],
    [118,22,65,118,101,114,97,103,101,115,32,102,114,111,109,32,115,111,114,116,105,110,103,32,112,100,11,64,118,13,32,105,116,101,109,115,44,32,111,118,101,114,32,64,112,10,11,64,118,7,32,116,114,105,97,108,115,64,169,170,142],
    [118,0,169,170,142],
    [118,35,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,67,79,77,80,65,82,73,83,79,78,83,32,32,32,32,83,87,65,80,83,169,170,142],
    [112,1],
    [119,799,112,4],
    [113,799,37,129,324],
    [113,644,113,799,112,1,27,2,127,26,4,122,112,32,9,112,17,23,72,113,786,113,799,112,1,27,2,127,26,4,122,112,10,112,1,14,112,32,9,112,7,72,64,169,142],
    [113,792,113,799,112,1,27,2,127,26,4,122,112,10,112,1,14,112,32,9,112,11,72,169,170,142],
    [113,799,4,128,319],
    [118,0,169,170,142],
    [131,175],
    [130]
  ]
}
