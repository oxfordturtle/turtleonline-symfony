{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"SierpinskiColour",
  "author":"meriv",
  "date":"28/07/2020",
  "time":"08:29:24",
  "code":"PROGRAM SierpinskiColour;\nCONST xleft = 0;\n      xright = 999;\n      ytop = 0;\n      ybottom = 999;\n      scaledown = 4;\n      mappings = 3;\n      title = 'Sierpinski triangle';\n      gridlines = 5;\n      gridthick = 64;\nVAR xl, xr, yt, yb, gt: integer;\n    coeffdiv: integer;\n    mapxx, mapxy, mapxc: array[1..mappings] of integer;\n    mapyx, mapyy, mapyc: array[1..mappings] of integer;\n    count: integer;\n\n  Procedure setmaps;\n  Begin\n    coeffdiv := 100;\n    mapxx[1] := 50;\n    mapyx[1] := 0;\n    mapxy[1] := 0;\n    mapyy[1] := 50;\n    mapxc[1] := 250;\n    mapyc[1] := 0;\n    mapxx[2] := 50;\n    mapyx[2] := 0;\n    mapxy[2] := 0;\n    mapyy[2] := 50;\n    mapxc[2] := 0;\n    mapyc[2] := 500;\n    mapxx[3] := 50;\n    mapyx[3] := 0;\n    mapxy[3] := 0;\n    mapyy[3] := 50;\n    mapxc[3] := 500;\n    mapyc[3] := 500\n  End;\n\n  Procedure setscale;\n  Var i: integer;\n  Begin\n    xl := xleft / scaledown;\n    xr := xright / scaledown;\n    yt := ytop / scaledown;\n    yb := ybottom / scaledown;\n    for i := 1 to mappings do\n      begin\n        mapxc[i] := mapxc[i] / scaledown;\n        mapyc[i] := mapyc[i] / scaledown\n      end;\n    gt := gridthick / scaledown\n  End;\n\n  Procedure background(rad: integer);\n  Var x, y, cx, cy, r, g, b: integer;\n  Begin\n    thickness(gt);\n    colour(darkgrey);\n    for x := 1 to gridlines - 1 do\n      begin\n        setxy(xl + divmult(xr - xl, gridlines, x), yt);\n        drawxy(0, yb - yt)\n      end;\n    for y := 1 to gridlines - 1 do\n      begin\n        setxy(xl + gt / 2, yt + divmult(yb - yt, gridlines, y));\n        drawxy(xr - xl - gt, 0)\n      end;\n    colour(black);\n    setxy(xl, yt);\n    drawxy(xr - xl, 0);\n    drawxy(0, yb - yt);\n    drawxy(xl - xr, 0);\n    drawxy(0, yt - yb);\n    for x := 0 to gridlines - 1 do\n      for y := 0 to gridlines - 1 do\n        begin\n          cx := xl + divmult(xr - xl, gridlines, x) + gt;\n          cy := yt + divmult(yb - yt, gridlines, y) + gt;\n          r := divmult(255, gridlines - 1, x);\n          g := divmult(255, gridlines - 1, y);\n          b := divmult(255, 2 * gridlines - 2, 2 * gridlines - 2 - x - y);\n          recolour(cx, cy, (r * $10000) + (g * $100) + (b * $1))\n        end\n  End;\n\n  Procedure map(a, x, y: integer; var newx, newy: integer);\n  Begin\n    newx := divmult(x, coeffdiv, mapxx[a]) + divmult(y, coeffdiv, mapxy[a]) + mapxc[a];\n    newy := divmult(x, coeffdiv, mapyx[a]) + divmult(y, coeffdiv, mapyy[a]) + mapyc[a]\n  End;\n\n  Procedure domap(mapnum: integer);\n  Var x, y, newx, newy: integer;\n  Begin\n    noupdate;\n    for y := yt to yb do\n      for x := xl to xr do\n        begin\n          map(mapnum, x, y, newx, newy);\n          pixset(newx, newy, pixcol(x, y))\n        end;\n    update\n  End;\n\nBEGIN\n  setmaps;\n  setscale;\n  canvas(xl, yt, xr - xl + 1, yb - yt + 1);\n  resolution(xr - xl + 1, yb - yt + 1);\n  background(6);\n  writeln(title + ' mappings in colour');\n  for count := 1 to mappings do\n    domap(count)\nEND.\n",
  "usage":[
    {
      "category": "Turtle: relative movement",
      "expressions":[
        {"name":"drawxy", "level":2, "count":6, "lines":"63 68 72 73 74 75"}
      ],
      "total":6
    },
    {
      "category": "Turtle: absolute movement",
      "expressions":[
        {"name":"setxy", "level":1, "count":3, "lines":"62 67 71"}
      ],
      "total":3
    },
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"colour", "level":1, "count":2, "lines":"59 70"},
        {"name":"thickness", "level":1, "count":1, "lines":"58"}
      ],
      "total":3
    },
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"noupdate", "level":1, "count":1, "lines":"97"},
        {"name":"update", "level":1, "count":1, "lines":"104"},
        {"name":"canvas", "level":2, "count":1, "lines":"110"},
        {"name":"resolution", "level":2, "count":1, "lines":"111"},
        {"name":"pixcol", "level":3, "count":1, "lines":"102"},
        {"name":"pixset", "level":3, "count":1, "lines":"102"},
        {"name":"recolour", "level":3, "count":1, "lines":"84"}
      ],
      "total":7
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"divmult", "level":3, "count":11, "lines":"62 67 79 80 81 82 83 90 90 91 91"}
      ],
      "total":11
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"writeln", "level":1, "count":1, "lines":"113"}
      ],
      "total":1
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"for", "level":1, "count":8, "lines":"47 60 65 76 77 98 99 114"},
        {"name":"procedure", "level":2, "count":5, "lines":"17 40 55 88 94"}
      ],
      "total":13
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"map", "level":0, "count":1, "lines":"101"},
        {"name":"setmaps", "level":0, "count":1, "lines":"108"},
        {"name":"setscale", "level":0, "count":1, "lines":"109"},
        {"name":"background", "level":0, "count":1, "lines":"112"},
        {"name":"domap", "level":0, "count":1, "lines":"115"}
      ],
      "total":5
    }
  ],
  "pcode":[
    [112,17,1,1,112,0,123,112,6,2,123,4,112,43,124,112,60,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [116,31,119,30],
    [112,3,119,31],
    [116,36,119,35],
    [112,3,119,36],
    [116,41,119,40],
    [112,3,119,41],
    [116,46,119,45],
    [112,3,119,46],
    [116,51,119,50],
    [112,3,119,51],
    [116,56,119,55],
    [112,3,119,56],
    [128,112],
    [133,1],
    [112,100,119,29],
    [113,30,112,1,112,1,27,2,127,26,4,112,50,2,123],
    [113,45,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,35,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,50,112,1,112,1,27,2,127,26,4,112,50,2,123],
    [113,40,112,1,112,1,27,2,127,26,4,112,250,2,123],
    [113,55,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,30,112,2,112,1,27,2,127,26,4,112,50,2,123],
    [113,45,112,2,112,1,27,2,127,26,4,112,0,2,123],
    [113,35,112,2,112,1,27,2,127,26,4,112,0,2,123],
    [113,50,112,2,112,1,27,2,127,26,4,112,50,2,123],
    [113,40,112,2,112,1,27,2,127,26,4,112,0,2,123],
    [113,55,112,2,112,1,27,2,127,26,4,112,500,2,123],
    [113,30,112,3,112,1,27,2,127,26,4,112,50,2,123],
    [113,45,112,3,112,1,27,2,127,26,4,112,0,2,123],
    [113,35,112,3,112,1,27,2,127,26,4,112,0,2,123],
    [113,50,112,3,112,1,27,2,127,26,4,112,50,2,123],
    [113,40,112,3,112,1,27,2,127,26,4,112,500,2,123],
    [113,55,112,3,112,1,27,2,127,26,4,112,500,2,123],
    [134,132],
    [133,2],
    [139,13,1],
    [117,13,1,112,1,124],
    [112,0,112,4,29,119,24],
    [112,999,112,4,29,119,25],
    [112,0,112,4,29,119,26],
    [112,999,112,4,29,119,27],
    [112,1],
    [120,13,1,112,3],
    [114,13,1,37,129,50],
    [113,40,114,13,1,112,1,27,2,127,26,4,113,40,114,13,1,112,1,27,2,127,26,4,122,112,4,29,2,123],
    [113,55,114,13,1,112,1,27,2,127,26,4,113,55,114,13,1,112,1,27,2,127,26,4,122,112,4,29,2,123],
    [114,13,1,4,128,45],
    [112,64,112,4,29,119,28],
    [140,13,134,132],
    [133,3],
    [139,14,8],
    [117,14,1,112,8,124,120,14,1],
    [113,28,85],
    [112,4210752,87],
    [112,1],
    [120,14,2,112,5,112,1,27],
    [114,14,2,37,129,63],
    [113,24,113,25,113,24,27,112,5,114,14,2,48,26,113,26,88],
    [112,0,113,27,113,26,27,90],
    [114,14,2,4,128,58],
    [112,1],
    [120,14,3,112,5,112,1,27],
    [114,14,3,37,129,69],
    [113,24,113,28,112,2,29,26,113,26,113,27,113,26,27,112,5,114,14,3,48,26,88],
    [113,25,113,24,27,113,28,27,112,0,90],
    [114,14,3,4,128,64],
    [112,0,87],
    [113,24,113,26,88],
    [113,25,113,24,27,112,0,90],
    [112,0,113,27,113,26,27,90],
    [113,24,113,25,27,112,0,90],
    [112,0,113,26,113,27,27,90],
    [112,0],
    [120,14,2,112,5,112,1,27],
    [114,14,2,37,129,89],
    [112,0],
    [120,14,3,112,5,112,1,27],
    [114,14,3,37,129,88],
    [113,24,113,25,113,24,27,112,5,114,14,2,48,26,113,28,26,120,14,4],
    [113,26,113,27,113,26,27,112,5,114,14,3,48,26,113,28,26,120,14,5],
    [112,255,112,5,112,1,27,114,14,2,48,120,14,6],
    [112,255,112,5,112,1,27,114,14,3,48,120,14,7],
    [112,255,112,2,112,5,28,112,2,27,112,2,112,5,28,112,2,27,114,14,2,27,114,14,3,27,48,120,14,8],
    [114,14,4,114,14,5,114,14,6,112,65536,28,114,14,7,112,256,28,26,114,14,8,112,1,28,26,97],
    [114,14,3,4,128,79],
    [114,14,2,4,128,76],
    [140,14,134,132],
    [133,4],
    [139,15,5],
    [117,15,1,112,5,124,120,15,5,120,15,4,120,15,3,120,15,2,120,15,1],
    [114,15,2,113,29,113,30,114,15,1,112,1,27,2,127,26,4,122,48,114,15,3,113,29,113,35,114,15,1,112,1,27,2,127,26,4,122,48,26,113,40,114,15,1,112,1,27,2,127,26,4,122,26,121,15,4],
    [114,15,2,113,29,113,45,114,15,1,112,1,27,2,127,26,4,122,48,114,15,3,113,29,113,50,114,15,1,112,1,27,2,127,26,4,122,48,26,113,55,114,15,1,112,1,27,2,127,26,4,122,26,121,15,5],
    [140,15,134,132],
    [133,5],
    [139,16,5],
    [117,16,1,112,5,124,120,16,1],
    [112,0,146],
    [113,26],
    [120,16,3,113,27],
    [114,16,3,37,129,110],
    [113,24],
    [120,16,2,113,25],
    [114,16,2,37,129,109],
    [114,16,1,114,16,2,114,16,3,117,16,4,117,16,5,131,90],
    [114,16,4,114,16,5,114,16,2,114,16,3,99,100],
    [114,16,2,4,128,104],
    [114,16,3,4,128,101],
    [112,-1,146],
    [140,16,134,132],
    [131,16],
    [131,37],
    [113,24,113,26,113,25,113,24,27,112,1,26,113,27,113,26,27,112,1,26,144],
    [113,25,113,24,27,112,1,26,113,27,113,26,27,112,1,26,145],
    [112,6,131,52],
    [118,19,83,105,101,114,112,105,110,115,107,105,32,116,114,105,97,110,103,108,101,118,19,32,109,97,112,112,105,110,103,115,32,105,110,32,99,111,108,111,117,114,64,169,170,142],
    [112,1],
    [119,60,112,3],
    [113,60,37,129,123],
    [113,60,131,96],
    [113,60,4,128,119],
    [130]
  ]
}
