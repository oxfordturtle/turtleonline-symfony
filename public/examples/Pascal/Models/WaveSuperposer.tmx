{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Hugh Wallis's wave superposer",
  "author":"Peter Millican",
  "date":"28/07/2020",
  "time":"13:25:03",
  "code":"PROGRAM WaveSuperposer;\nCONST textrow=0;\n      tvalrow=1;\n      spinrow=2;\n      buttrow=3;\n      fine=1;\n      course=0;\nCONST normtext=0;\n      boldtext=1;\n      large=1;\n      small=0;\n      noborder=0;\n      withborder=1;\nCONST nobackground=0;\n      withbackground=1;\nCONST maxwaves=60;\n      maxamplitude=500;\n      maxphase=360;\n      amplitudeinc=5;\n      phaseinc=2;\n      maxdecayrate=10;\nCONST precdecay=100;\nVAR exitflag,count,numwaves,selectedwave,multsumwaves,decayrate,infoflag: integer;\nVAR divideby,granularity: integer;\nVAR keypressed: string;\nVAR wavesshown,buttontext: string;\nVAR amplitudes,phases,onoff,decaymult: array[1..maxwaves] of integer;\n\n Function getnumdigits(num: integer): integer;\n Var numdigits: integer;\n Begin\n  num:=abs(num);\n  if (num=0) then\n   numdigits:=1\n  else\n   begin\n    numdigits:=0;\n    while num>0 do\n     begin\n      num:=num/10;\n      inc(numdigits)\n     end\n   end;\n  result:=numdigits\n End;\n\n Procedure outtext(x,y,texttype,textcolour: integer;text: string);\n Var height: integer;\n Begin\n  if texttype=boldtext then\n   y:=y-3\n  else\n   y:=y-1;\n  setxy(x+5,y);\n  colour(textcolour);\n  if texttype=boldtext then\n   print(text,16,18)\n  else\n   print(text,0,18)\n End;\n\n Procedure outvalue(x,y,numwidth,value,textcolour: integer);\n Var width,height,minusshift,charwidth: integer;\n Var valuestr: string;\n Begin\n  charwidth:=13;\n  minusshift:=8;\n  width:=12+charwidth*numwidth;\n  height:=24;\n  pendown;\n  setxy(x+width,y);\n  colour(midgrey);\n  drawxy(0,height);\n  drawxy(-width,0);\n  colour(darkgrey);\n  drawxy(0,-height-1);\n  drawxy(width,0);\n  setxy(x+1,y+1);\n  setxy(x+width-2,y+1);\n  setxy(x+width-2,y+height-2);\n  setxy(x+1,y+height-2);\n  colour(black);\n  polygon(4);\n  if (value<0) then\n   setxy(x+5+charwidth*(numwidth-getnumdigits(value))-minusshift,y-2)\n  else\n   setxy(x+5+charwidth*(numwidth-getnumdigits(value)),y-2);\n  colour(textcolour);\n  valuestr:=str(value);\n  print(valuestr,0,18)\n End;\n\n Procedure spinbutton(x,y: integer;symbol: char;buttoncolour: integer);\n Var width,height: integer;\n Begin\n  width:=24;\n  height:=24;\n  pendown;\n  setxy(x+width,y);\n  colour(darkgrey);\n  drawxy(0,height);\n  drawxy(-width,0);\n  colour(lightgrey);\n  drawxy(0,-height-1);\n  drawxy(width,0);\n  recolour(x+1,y+1,buttoncolour);\n  setxy(x+6,y-14);\n  colour(black);\n  print(symbol,4,24)\n End;\n\n Procedure button(x,y,numchars: integer;btext: string;buttoncolour,textcolour: integer);\n Var width,height: integer;\n Begin\n  width:=8+13*numchars;\n  height:=30;\n  y:=y-2;\n  pendown;\n  setxy(x+width,y);\n  colour(darkgrey);\n  drawxy(0,height);\n  drawxy(-width,0);\n  colour(lightgrey);\n  drawxy(0,-height-1);\n  drawxy(width,0);\n  recolour(x+1,y+1,buttoncolour);\n  setxy(x+8,y-2);\n  colour(textcolour);\n  print(btext,0,22)\n End;\n\n Procedure smallbutton(x,y,numchars: integer;btext: string;buttoncolour,textcolour: integer);\n Var width,height: integer;\n Begin\n  width:=8+13*numchars;\n  height:=24;\n  pendown;\n  setxy(x+width,y);\n  colour(darkgrey);\n  drawxy(0,height);\n  drawxy(-width,0);\n  colour(lightgrey);\n  drawxy(0,-height-1);\n  drawxy(width,0);\n  recolour(x+1,y+1,buttoncolour);\n  setxy(x+4,y-1);\n  colour(textcolour);\n  print(btext,0,18)\n End;\n\n Procedure border(x,y,width,height,highcolour,lowcolour,backcolour,backflag: integer);\n Begin\n  pendown;\n  if (backflag=withbackground) then\n   begin\n    setxy(x+1,y+1);\n    setxy(x-2+width,y+1);\n    setxy(x-2+width,y-2+height);\n    setxy(x+1,y-2+height);\n    colour(backcolour);\n    polygon(4)\n   end;\n  setxy(x+width,y);\n  colour(lowcolour);\n  drawxy(0,height);\n  drawxy(-width,0);\n  colour(highcolour);\n  drawxy(0,-height-1);\n  drawxy(width,0)\n End;\n\n Procedure borders(x,y,numchars,numdigits,numrows,highcolour,lowcolour,backcolour,borderflag,backflag:\n     integer);\n Var width,height,spinnershift: integer;\n Begin\n  spinnershift:=34;\n  height:=8+numrows*spinnershift;\n  width:=8+(numchars+numdigits+6)*13;\n  if borderflag=withborder then\n   begin\n    border(x,y,width,height,highcolour,lowcolour,silver,nobackground);\n    border(x+2,y+2,width-4,height-4,lowcolour,highcolour,silver,nobackground)\n   end;\n  if backflag=withbackground then\n   begin\n    if borderflag=noborder then\n     begin\n      x:=x-2;\n      y:=y-8\n     end\n    else\n     begin\n      x:=x+2;\n      y:=y+2\n     end;\n    setxy(x,y);\n    setxy(x-6+width,y);\n    setxy(x-6+width,y-6+height);\n    setxy(x,y-6+height);\n    colour(backcolour);\n    polygon(4)\n   end\n End;\n\n Procedure spinner(row,spintype,texttype,x,y,numchars,numdigits: integer;text: string;value,textcolour,digitcolour,buttoncolour:\n     integer);\n Var charwidth,textshift,buttonshift,numshift,spinnershift: integer;\n Begin\n  spinnershift:=34;\n  charwidth:=13;\n  buttonshift:=30;\n  textshift:=charwidth*numchars;\n  numshift:=18+charwidth*numdigits;\n  y:=y+(row-1)*spinnershift;\n  outtext(x,y,texttype,textcolour,text);\n  if spintype=spinrow then\n   spinbutton(x+textshift,y,'<',buttoncolour);\n  if spintype<>textrow then\n   outvalue(x+textshift+buttonshift,y,numdigits,value,digitcolour);\n  if spintype=spinrow then\n   spinbutton(x+textshift+buttonshift+numshift,y,'>',buttoncolour)\n End;\n\n Procedure incdecspinner(row,x,y,numchars,numdigits: integer;var value: integer;min,max,mult:\n     integer);\n Var charwidth,textshift,buttonshift,numshift,spinnershift: integer;\n Begin\n  spinnershift:=34;\n  charwidth:=13;\n  buttonshift:=30;\n  textshift:=charwidth*numchars;\n  numshift:=18+charwidth*numdigits;\n  y:=y+(row-1)*spinnershift;\n  if (?mousex>(x+textshift)) and (?mousex<(x+textshift+buttonshift)) and (?mousey>y) and (?mousey<y+spinnershift)\n     then\n   if (value>=(min+mult)) then\n    value:=value-mult;\n  if (?mousex>(x+textshift+buttonshift+numshift)) and (?mousex<(x+textshift+2*buttonshift+numshift))\n     and (?mousey>y) and (?mousey<y+spinnershift) then\n   if (value<=(max-mult)) then\n    value:=value+mult\n End;\n\n Procedure loaddecaymults(decayrate: integer);\n Var count,count2: integer;\n Begin\n  for count:=1 to maxwaves do\n   decaymult[count]:=precdecay;\n  for count:=2 to maxwaves do\n   begin\n    for count2:=count to maxwaves do\n     begin\n      decaymult[count2]:=((precdecay-decayrate)*decaymult[count2])/precdecay\n     end\n   end\n End;\n\n Procedure incdecdecay(row,x,y,numchars,numdigits: integer;var value: integer;min,max,mult:\n     integer);\n Var charwidth,textshift,buttonshift,numshift,spinnershift: integer;\n Var count,count2: integer;\n Begin\n  spinnershift:=34;\n  charwidth:=13;\n  buttonshift:=30;\n  textshift:=charwidth*numchars;\n  numshift:=18+charwidth*numdigits;\n  y:=y+(row-1)*spinnershift;\n  if (?mousex>(x+textshift)) and (?mousex<(x+textshift+buttonshift)) and (?mousey>y) and (?mousey<y+spinnershift)\n     then\n   if (value>=(min+mult)) then\n    value:=value-mult;\n  if (?mousex>(x+textshift+buttonshift+numshift)) and (?mousex<(x+textshift+2*buttonshift+numshift))\n     and (?mousey>y) and (?mousey<y+spinnershift) then\n   if (value<=(max-mult)) then\n    value:=value+mult;\n  loaddecaymults(decayrate)\n End;\n\n Procedure incdecdivideby(row,x,y,numchars,numdigits: integer;var value: integer;min,max,mult:\n     integer);\n Var charwidth,textshift,buttonshift,numshift,spinnershift: integer;\n Var count,count2: integer;\n Begin\n  spinnershift:=34;\n  charwidth:=13;\n  buttonshift:=30;\n  textshift:=charwidth*numchars;\n  numshift:=18+charwidth*numdigits;\n  y:=y+(row-1)*spinnershift;\n  if (?mousex>(x+textshift)) and (?mousex<(x+textshift+buttonshift)) and (?mousey>y) and (?mousey<y+spinnershift)\n     then\n   if (value>=(min+mult)) then\n    begin\n     value:=value-mult;\n     wavesshown:='Divide by';\n     for count:=1 to maxwaves do\n      begin\n       if (count) mod divideby=0 then\n        onoff[count]:=1\n       else\n        onoff[count]:=0\n      end\n    end;\n  if (?mousex>(x+textshift+buttonshift+numshift)) and (?mousex<(x+textshift+2*buttonshift+numshift))\n     and (?mousey>y) and (?mousey<y+spinnershift) then\n   if (value<=(max-mult)) then\n    begin\n     value:=value+mult;\n     wavesshown:='Divide by';\n     for count:=1 to maxwaves do\n      begin\n       if (count) mod divideby=0 then\n        onoff[count]:=1\n       else\n        onoff[count]:=0\n      end\n    end;\n  loaddecaymults(decayrate)\n End;\n\n Procedure updatevaluebutton(x,y,numchars: integer;var value: integer;newvalue,size: integer);\n Var width,height: integer;\n Begin\n  width:=8+13*numchars;\n  if size=large then\n   height:=30\n  else\n   height:=22;\n  if (?mousex>x) and (?mousex<(x+width)) and (?mousey>y) and (?mousey<y+height) then\n   begin\n    value:=newvalue\n   end\n End;\n\n Procedure updatetogglebutton(x,y,numchars: integer;var value: integer;size: integer);\n Var width,height: integer;\n Begin\n  width:=8+13*numchars;\n  if size=large then\n   height:=30\n  else\n   height:=22;\n  if (?mousex>x) and (?mousex<(x+width)) and (?mousey>y) and (?mousey<y+height) then\n   begin\n    if (value=0) then\n     value:=1\n    else\n     value:=0\n   end\n End;\n\n Procedure updatewavebutton(x,y,numchars,size: integer);\n Var width,height: integer;\n Begin\n  width:=8+13*numchars;\n  if size=large then\n   height:=30\n  else\n   height:=34;\n  if (?mousex>x) and (?mousex<(x+width)) and (?mousey>y) and (?mousey<y+height) then\n   begin\n    amplitudes[selectedwave]:=100;\n    phases[selectedwave]:=0\n   end\n End;\n\n Procedure initwaves;\n Var count: integer;\n Begin\n  for count:=1 to maxwaves do\n   begin\n    amplitudes[count]:=100;\n    phases[count]:=0;\n    onoff[count]:=1\n   end;\n  decayrate:=10;\n  loaddecaymults(decayrate);\n  multsumwaves:=1\n End;\n\n Procedure initallwavesbutton(x,y,numchars,size: integer);\n Var width,height: integer;\n Begin\n  width:=8+13*numchars;\n  if size=large then\n   height:=30\n  else\n   height:=34;\n  if (?mousex>x) and (?mousex<(x+width)) and (?mousey>y) and (?mousey<y+height) then\n   begin\n    initwaves;\n    wavesshown:='All waves'\n   end\n End;\n\n Procedure updateshowbuttons(showtype,x,y,numchars,size: integer);\n Var width,height,count,prevcount,temp: integer;\n Begin\n  width:=8+13*numchars;\n  if size=large then\n   height:=30\n  else\n   height:=22;\n  if (?mousex>x) and (?mousex<(x+width)) and (?mousey>y) and (?mousey<y+height) then\n   begin\n    if showtype=1 then\n     begin\n      wavesshown:='All waves';\n      for count:=1 to maxwaves do\n       begin\n        onoff[count]:=1\n       end\n     end;\n    if (showtype=2) then\n     begin\n      wavesshown:='Evens';\n      for count:=1 to maxwaves do\n       begin\n        if count mod 2=0 then\n         onoff[count]:=1\n        else\n         onoff[count]:=0\n       end\n     end;\n    if showtype=3 then\n     begin\n      wavesshown:='Odds';\n      for count:=1 to maxwaves do\n       begin\n        if count mod 2=0 then\n         onoff[count]:=0\n        else\n         onoff[count]:=1\n       end\n     end;\n    if showtype=4 then\n     begin\n      wavesshown:='Fibonacci';\n      for count:=1 to maxwaves do\n       begin\n        onoff[count]:=0\n       end;\n      onoff[1]:=1;\n      count:=2;\n      prevcount:=1;\n      repeat\n       onoff[count]:=1;\n       temp:=count;\n       count:=count+prevcount;\n       prevcount:=temp\n      until count>maxwaves\n     end;\n    if showtype=5 then\n     begin\n      wavesshown:='None';\n      for count:=1 to maxwaves do\n       begin\n        onoff[count]:=0\n       end\n     end\n   end\n End;\n\n Procedure fibonacci;\n Var count,prevcount,temp: integer;\n Begin\n  for count:=1 to maxwaves do\n   begin\n    onoff[count]:=0\n   end;\n  onoff[1]:=1;\n  count:=2;\n  prevcount:=1;\n  repeat\n   onoff[count]:=1;\n   temp:=count;\n   count:=count+prevcount;\n   prevcount:=temp\n  until count>maxwaves\n End;\n\n Procedure updatepresetbuttons(showtype,x,y,numchars,size: integer);\n Var width,height,count,prevcount,temp: integer;\n Begin\n  width:=8+13*numchars;\n  if size=large then\n   height:=30\n  else\n   height:=26;\n  if (?mousex>x) and (?mousex<(x+width)) and (?mousey>y) and (?mousey<y+height) then\n   begin\n    initwaves;\n    if showtype=0 then\n     begin\n      for count:=1 to (selectedwave-1) do\n       begin\n        onoff[count]:=0\n       end;\n      onoff[selectedwave]:=1;\n      for count:=selectedwave+1 to maxwaves do\n       begin\n        if (count-selectedwave) mod divideby=0 then\n         onoff[count]:=1\n        else\n         onoff[count]:=0\n       end;\n      wavesshown:='Lim Divide';\n      loaddecaymults(decayrate);\n      multsumwaves:=1\n     end;\n    if showtype=1 then\n     begin\n      initwaves;\n      for count:=1 to maxwaves do\n       begin\n        if count mod 2=0 then\n         onoff[count]:=1\n        else\n         onoff[count]:=0;\n        amplitudes[count]:=200\n       end;\n      wavesshown:='Sawtooth';\n      decayrate:=30;\n      loaddecaymults(decayrate);\n      numwaves:=12;\n      multsumwaves:=1\n     end;\n    if showtype=2 then\n     begin\n      initwaves;\n      for count:=1 to maxwaves do\n       begin\n        if count mod 2=0 then\n         onoff[count]:=0\n        else\n         onoff[count]:=1;\n        amplitudes[count]:=150\n       end;\n      wavesshown:='Square';\n      decayrate:=40;\n      loaddecaymults(decayrate);\n      numwaves:=11;\n      amplitudes[3]:=115;\n      amplitudes[5]:=130;\n      amplitudes[7]:=130;\n      amplitudes[9]:=190;\n      multsumwaves:=1\n     end;\n    if showtype=3 then\n     begin\n      initwaves;\n      fibonacci;\n      wavesshown:='Shortstock';\n      decayrate:=3;\n      loaddecaymults(decayrate);\n      numwaves:=40;\n      multsumwaves:=1;\n      granularity:=fine\n     end;\n    if showtype=4 then\n     begin\n      initwaves;\n      fibonacci;\n      wavesshown:='Longstock';\n      decayrate:=3;\n      loaddecaymults(decayrate);\n      numwaves:=60;\n      multsumwaves:=1;\n      granularity:=fine;\n      onoff[1]:=0;\n      onoff[2]:=0;\n      onoff[3]:=0;\n      onoff[5]:=0\n     end;\n    if showtype=5 then\n     begin\n      initwaves;\n      for count:=1 to maxwaves do\n       begin\n        if count mod 2=0 then\n         onoff[count]:=0\n        else\n         onoff[count]:=1;\n        amplitudes[count]:=100\n       end;\n      wavesshown:='Pulse';\n      decayrate:=3;\n      loaddecaymults(decayrate);\n      numwaves:=60;\n      onoff[3]:=0;\n      multsumwaves:=3\n     end;\n    if showtype=6 then\n     begin\n      initwaves;\n      for count:=1 to maxwaves do\n       begin\n        if count mod 2=0 then\n         onoff[count]:=1\n        else\n         onoff[count]:=0;\n        amplitudes[count]:=100\n       end;\n      wavesshown:='Relaxed';\n      decayrate:=2;\n      loaddecaymults(decayrate);\n      numwaves:=60;\n      onoff[1]:=0;\n      onoff[3]:=0;\n      onoff[5]:=0;\n      onoff[7]:=0;\n      onoff[9]:=0;\n      phases[2]:=90;\n      multsumwaves:=4\n     end;\n    if showtype=7 then\n     begin\n      initwaves;\n      for count:=1 to maxwaves do\n       begin\n        onoff[count]:=0;\n        amplitudes[count]:=100\n       end;\n      wavesshown:='One beat';\n      decayrate:=1;\n      loaddecaymults(decayrate);\n      numwaves:=40;\n      onoff[28]:=1;\n      onoff[30]:=1;\n      granularity:=fine;\n      multsumwaves:=1\n     end;\n    if showtype=8 then\n     begin\n      initwaves;\n      for count:=1 to maxwaves do\n       begin\n        onoff[count]:=0;\n        amplitudes[count]:=100\n       end;\n      wavesshown:='Two beats';\n      decayrate:=1;\n      loaddecaymults(decayrate);\n      numwaves:=40;\n      onoff[34]:=1;\n      onoff[36]:=1;\n      onoff[38]:=1;\n      granularity:=fine;\n      multsumwaves:=1\n     end\n   end\n End;\n\n Procedure controlboard(x,y,numchars,numdigits,numrows,borderflag,backflag: integer);\n Var t1,t2: string;\n Begin\n  borders(x,y,numchars,numdigits,numrows,gold,darkbrown,ochre,borderflag,backflag);\n  if borderflag=withborder then\n   begin\n    x:=x+4;\n    y:=y+8\n   end;\n  t1:='No. Waves';\n  spinner(1,spinrow,boldtext,x,y,numchars,numdigits,t1,numwaves,black,white,red);\n  t2:=' 2';\n  smallbutton(x+10,y+34,2,t2,red,black);\n  t2:='10';\n  smallbutton(x+54,y+34,2,t2,red,black);\n  t2:='20';\n  smallbutton(x+98,y+34,2,t2,red,black);\n  t2:='40';\n  smallbutton(x+142,y+34,2,t2,red,black);\n  t2:='60';\n  smallbutton(x+186,y+34,2,t2,red,black);\n  t2:='Initialise all waves';\n  smallbutton(x+8,y+68,16,t2,lightgreen,black)\n End;\n\n Procedure controlboard2(x,y,numchars,numdigits,numrows,borderflag,backflag: integer);\n Var t1,t2: string;\n Begin\n  borders(x,y,numchars,numdigits,numrows,gold,darkbrown,ochre,borderflag,backflag);\n  if borderflag=withborder then\n   begin\n    x:=x+4;\n    y:=y+8\n   end;\n  t1:='Select Wave';\n  t2:='';\n  spinner(1,spinrow,boldtext,x,y,numchars,numdigits,t1,selectedwave,black,white,lime);\n  spinner(2,tvalrow,normtext,x,y,numchars,numdigits,t2,onoff[selectedwave],black,white,emerald);\n  t2:='Wave On/Off';\n  smallbutton(x+28,y+34,11,t2,emerald,black)\n End;\n\n Procedure controlboard2a(x,y,numchars,numdigits,numrows,borderflag,backflag: integer);\n Var t1,t2: string;\n Begin\n  borders(x,y,numchars,numdigits,numrows,gold,darkbrown,ochre,borderflag,backflag);\n  if borderflag=withborder then\n   begin\n    x:=x+4;\n    y:=y+8\n   end;\n  t1:=' Amplitude';\n  t2:='       Phase';\n  spinner(1,spinrow,normtext,x,y,numchars,numdigits,t1,amplitudes[selectedwave],black,white,lightgreen);\n  spinner(2,spinrow,normtext,x,y,numchars,numdigits,t2,phases[selectedwave],black,white,lightgreen);\n  t2:='X';\n  smallbutton(x+14,y+34,1,t2,lightgreen,black)\n End;\n\n Procedure controlboard3(x,y,numchars,numdigits,numrows,borderflag,backflag: integer);\n Var t1: string;\n Var xshift: integer;\n Begin\n  borders(x,y,numchars,numdigits,numrows,gold,darkbrown,ochre,borderflag,backflag);\n  if borderflag=withborder then\n   begin\n    x:=x+4;\n    y:=y+8\n   end;\n  xshift:=32;\n  t1:='All';\n  smallbutton(x+xshift,y,2,t1,emerald,black);\n  t1:='Evens';\n  smallbutton(x+xshift+55,y,5,t1,emerald,black);\n  t1:='Odds';\n  smallbutton(x+xshift+150,y,5,t1,emerald,black);\n  t1:='Fibonacci';\n  smallbutton(x+xshift+245,y,8,t1,emerald,black);\n  t1:='None';\n  smallbutton(x+xshift+380,y,5,t1,emerald,black)\n End;\n\n Procedure controlboard4(x,y,numchars,numdigits,numrows,borderflag,backflag: integer);\n Var dummy: integer;\n Var t1,t2: string;\n Begin\n  borders(x,y,numchars,numdigits,numrows,gold,darkbrown,ochre,borderflag,backflag);\n  if borderflag=withborder then\n   begin\n    x:=x+4;\n    y:=y+8\n   end;\n  t1:='Decay Rate';\n  t2:='%';\n  spinner(1,textrow,boldtext,x,y,numchars,numdigits,t1,dummy,black,white,darkblue);\n  spinner(2,spinrow,boldtext,x,y,numchars,numdigits,t2,decayrate,black,white,skyblue)\n End;\n\n Procedure controlboard5(x,y,numchars,numdigits,numrows,borderflag,backflag: integer);\n Var dummy: integer;\n Var t1: string;\n Begin\n  borders(x,y,numchars,numdigits,numrows,ochre,darkbrown,ochre,borderflag,backflag);\n  if borderflag=withborder then\n   begin\n    x:=x+4;\n    y:=y+8\n   end;\n  t1:='Shrink Y';\n  spinner(1,spinrow,normtext,x,y,numchars,numdigits,t1,multsumwaves,black,white,ochre)\n End;\n\n Procedure controlboard6(x,y,numchars,numdigits,numrows,borderflag,backflag: integer);\n Var dummy: integer;\n Var t1: string;\n Begin\n  borders(x,y,numchars,numdigits,numrows,ochre,darkbrown,gold,borderflag,backflag);\n  if borderflag=withborder then\n   begin\n    x:=x+4;\n    y:=y+8\n   end;\n  t1:='  Superposed Wave';\n  spinner(1,textrow,boldtext,x,y,numchars,numdigits,t1,dummy,black,white,ochre)\n End;\n\n Procedure controlboard7(x,y,numchars,numdigits,numrows,borderflag,backflag: integer);\n Var dummy: integer;\n Var t1: string;\n Begin\n  borders(x,y,numchars,numdigits,numrows,ochre,darkbrown,gold,borderflag,backflag);\n  if borderflag=withborder then\n   begin\n    x:=x+4;\n    y:=y+8\n   end;\n  t1:=' Component Waves';\n  spinner(1,textrow,boldtext,x,y,numchars,numdigits,t1,dummy,black,white,ochre)\n End;\n\n Procedure controlboard8(x,y,numchars,numdigits,numrows,borderflag,backflag: integer);\n Var t1: string;\n Begin\n  borders(x,y,numchars,numdigits,numrows,gold,darkbrown,ochre,borderflag,backflag);\n  if borderflag=withborder then\n   begin\n    x:=x+4;\n    y:=y+8\n   end;\n  t1:='Coarse';\n  smallbutton(x+22,y+2,6,t1,ochre,black);\n  t1:='Fine';\n  smallbutton(x+130,y+2,4,t1,ochre,black)\n End;\n\n Procedure infoboard(x,y,numchars,numdigits,numrows,borderflag,backflag: integer);\n Var dummy: integer;\n Var t1,t2: string;\n Begin\n  borders(x,y,numchars,numdigits,numrows,gold,blue,ochre,borderflag,backflag);\n  if borderflag=withborder then\n   begin\n    x:=x+4;\n    y:=y+8\n   end;\n  t1:='Showing:  '+wavesshown;\n  t2:='        Divide by';\n  spinner(1,textrow,boldtext,x,y,numchars,numdigits,t1,dummy,black,white,emerald);\n  spinner(2,spinrow,normtext,x,y,numchars,numdigits,t2,divideby,black,white,emerald);\n  t2:='Lim';\n  smallbutton(x+8,y+1*34,3,t2,emerald,black);\n  t2:='  Square';\n  smallbutton(x+8,y+2*34,9,t2,emerald,black);\n  t2:='    Pulse';\n  smallbutton(x+8,y+3*34,9,t2,emerald,black);\n  t2:='One beat';\n  smallbutton(x+8,y+4*34,9,t2,emerald,black);\n  t2:='Shortstock';\n  smallbutton(x+8,y+5*34,9,t2,emerald,black);\n  t2:=' Sawtooth';\n  smallbutton(x+142,y+2*34,9,t2,emerald,black);\n  t2:='  Relaxed';\n  smallbutton(x+142,y+3*34,9,t2,emerald,black);\n  t2:='Two beats';\n  smallbutton(x+142,y+4*34,9,t2,emerald,black);\n  t2:='Longstock';\n  smallbutton(x+142,y+5*34,9,t2,emerald,black)\n End;\n\n Procedure helpexitboard(x,y,numchars,numdigits,numrows,borderflag,backflag: integer);\n Var t1: string;\n Begin\n  borders(x,y,numchars,numdigits,numrows,gold,darkbrown,ochre,borderflag,backflag);\n  if borderflag=withborder then\n   begin\n    x:=x+4;\n    y:=y+8\n   end;\n  t1:=' Menu';\n  smallbutton(x+3,y,5,t1,blue,cream);\n  t1:=' Exit';\n  smallbutton(x+81,y,4,t1,red,white)\n End;\n\n Procedure updatecontrolboard(x,y,numchars,numdigits,borderflag: integer);\n Begin\n  if borderflag=noborder then\n   begin\n    x:=x-4;\n    y:=y-8\n   end;\n  incdecspinner(1,x,y,numchars,numdigits,numwaves,1,maxwaves,1);\n  updatevaluebutton(x+10,y+40,2,numwaves,2,small);\n  updatevaluebutton(x+54,y+40,2,numwaves,10,small);\n  updatevaluebutton(x+98,y+40,2,numwaves,20,small);\n  updatevaluebutton(x+142,y+40,2,numwaves,40,small);\n  updatevaluebutton(x+186,y+40,2,numwaves,60,small);\n  initallwavesbutton(x+8,y+68,16,small)\n End;\n\n Procedure updatecontrolboard2(x,y,numchars,numdigits,borderflag: integer);\n Begin\n  if borderflag=noborder then\n   begin\n    x:=x-4;\n    y:=y-8\n   end;\n  incdecspinner(1,x,y,numchars,numdigits,selectedwave,1,maxwaves,1);\n  updatetogglebutton(x+28,y+34,11,onoff[selectedwave],small)\n End;\n\n Procedure updatecontrolboard2a(x,y,numchars,numdigits,borderflag: integer);\n Begin\n  if borderflag=noborder then\n   begin\n    x:=x-4;\n    y:=y-8\n   end;\n  incdecspinner(1,x,y,numchars,numdigits,amplitudes[selectedwave],-maxamplitude,maxamplitude,amplitudeinc);\n  incdecspinner(2,x,y,numchars,numdigits,phases[selectedwave],-maxphase,maxphase,phaseinc);\n  updatewavebutton(x+14,y+34,1,small)\n End;\n\n Procedure updatecontrolboard3(x,y,numchars,numdigits,borderflag: integer);\n Var xshift: integer;\n Begin\n  if borderflag=noborder then\n   begin\n    x:=x-4;\n    y:=y-8\n   end;\n  xshift:=32;\n  updateshowbuttons(1,x+xshift,y,2,small);\n  updateshowbuttons(2,x+xshift+55,y,5,small);\n  updateshowbuttons(3,x+xshift+150,y,5,small);\n  updateshowbuttons(4,x+xshift+245,y,8,small);\n  updateshowbuttons(5,x+xshift+380,y,5,small)\n End;\n\n Procedure updatecontrolboard4(x,y,numchars,numdigits,borderflag: integer);\n Var dummy: integer;\n Begin\n  if borderflag=noborder then\n   begin\n    x:=x-4;\n    y:=y-8\n   end;\n  incdecdecay(2,x,y,numchars,numdigits,decayrate,0,precdecay-1,1)\n End;\n\n Procedure updatecontrolboard5(x,y,numchars,numdigits,borderflag: integer);\n Begin\n  if borderflag=noborder then\n   begin\n    x:=x-4;\n    y:=y-8\n   end;\n  incdecspinner(1,x,y,numchars,numdigits,multsumwaves,1,20,1)\n End;\n\n Procedure updatecontrolboard8(x,y,numchars,numdigits,borderflag: integer);\n Begin\n  if borderflag=noborder then\n   begin\n    x:=x-4;\n    y:=y-8\n   end;\n  updatevaluebutton(x+22,y+8,6,granularity,course,small);\n  updatevaluebutton(x+130,y+8,4,granularity,fine,small)\n End;\n\n Procedure updateinfoboard(x,y,numchars,numdigits,borderflag: integer);\n Var dummy: integer;\n Begin\n  if borderflag=noborder then\n   begin\n    x:=x-4;\n    y:=y-8\n   end;\n  incdecdivideby(2,x,y,numchars,numdigits,divideby,1,20,1);\n  updatepresetbuttons(0,x+8,y+1*36,3,small);\n  updatepresetbuttons(2,x+8,y+2*36,9,small);\n  updatepresetbuttons(5,x+8,y+3*36,9,small);\n  updatepresetbuttons(7,x+8,y+4*36,9,small);\n  updatepresetbuttons(3,x+8,y+5*36,9,small);\n  updatepresetbuttons(1,x+142,y+2*36,9,small);\n  updatepresetbuttons(6,x+142,y+3*36,9,small);\n  updatepresetbuttons(8,x+142,y+4*36,9,small);\n  updatepresetbuttons(4,x+142,y+5*36,9,small)\n End;\n\n Procedure updatehelpexitboard(x,y,numchars,numdigits,borderflag: integer);\n Var dummy: integer;\n Begin\n  if borderflag=noborder then\n   begin\n    x:=x-4;\n    y:=y-8\n   end;\n  updatetogglebutton(x+8,y,4,infoflag,small);\n  updatevaluebutton(x+76,y,4,exitflag,1,small)\n End;\n\n Procedure displaycontrolboards;\n Begin\n  controlboard(36,6,10,2,3,withborder,withbackground);\n  borders(280,2,34,0,2,gold,darkbrown,ochre,withborder,withbackground);\n  controlboard2(286,10,12,2,3,noborder,nobackground);\n  controlboard2a(546,10,10,4,3,noborder,nobackground);\n  controlboard3(280,74,33,1,1,withborder,withbackground);\n  controlboard4(810,40,2,3,2,withborder,withbackground);\n  controlboard5(34,954,8,2,1,withborder,withbackground);\n  controlboard6(372,956,11,2,1,withborder,withbackground);\n  controlboard7(372,414,11,2,1,withborder,withbackground);\n  controlboard8(750,954,10,0,1,withborder,withbackground);\n  helpexitboard(810,2,5,0,1,withborder,withbackground);\n  if infoflag=1 then\n   infoboard(684,122,13,2,6,withborder,withbackground)\n End;\n\n Procedure updatecontrolboards;\n Begin\n  updatecontrolboard(36,6,10,2,withborder);\n  updatecontrolboard2(286,14,12,2,noborder);\n  updatecontrolboard2a(546,14,10,4,noborder);\n  updatecontrolboard3(280,80,33,1,withborder);\n  updatecontrolboard4(810,36,2,3,withborder);\n  updatecontrolboard5(34,954,8,2,withborder);\n  updatecontrolboard8(750,954,10,0,withborder);\n  updatehelpexitboard(810,7,5,0,withborder);\n  if infoflag=1 then\n   updateinfoboard(684,122,13,2,withborder)\n End;\n\n Procedure sinecurve(period,gwidth,scolour,xstart,ystart: integer);\n Var x,y,gran,step,xdiv: integer;\n Begin\n  if onoff[period]=1 then\n   begin\n    if granularity=fine then\n     begin\n      gran:=180;\n      step:=5;\n      xdiv:=2;\n      xstart:=xstart+4\n     end\n    else\n     begin\n      gran:=90;\n      step:=10;\n      xdiv:=1\n     end;\n    colour(scolour);\n    setxy(xstart,ystart);\n    direction(90);\n    x:=0;\n    for x:=0 to gran do\n     begin\n      penup;\n      forward(step);\n      forget(1);\n      left(90);\n      y:=(decaymult[period]*sin((4*x/xdiv+phases[period])*period,1,amplitudes[period]))/precdecay;\n      forward(y);\n      back(y);\n      forget(1);\n      right(90)\n     end;\n    if period=selectedwave then\n     thickness(4);\n    polyline(gran+1);\n    if period=selectedwave then\n     thickness(2)\n   end\n End;\n\n Procedure addsinecurves(maxperiod,amplitude,phase,scolour,xstart,ystart: integer);\n Var x,period,y,gran,step,xdiv: integer;\n Begin\n  colour(scolour);\n  if granularity=fine then\n   begin\n    gran:=180;\n    step:=5;\n    xdiv:=2;\n    xstart:=xstart+4;\n    thickness(2);\n    colour(black)\n   end\n  else\n   begin\n    gran:=90;\n    step:=10;\n    xdiv:=1;\n    thickness(2)\n   end;\n  setxy(xstart,ystart);\n  direction(90);\n  x:=0;\n  for x:=0 to gran do\n   begin\n    penup;\n    forward(step);\n    forget(1);\n    pendown;\n    left(90);\n    y:=0;\n    for period:=1 to maxperiod do\n     begin\n      if onoff[period]=1 then\n       y:=y+(decaymult[period]*sin((4*x/xdiv+phases[period])*period,1,amplitudes[period]))/precdecay\n     end;\n    if multsumwaves>0 then\n     y:=y/multsumwaves\n    else\n    if multsumwaves<0 then\n     begin\n      y:=y*abs(multsumwaves)\n     end;\n    if granularity=fine then\n     penup;\n    forward(y);\n    back(y);\n    pendown;\n    forget(1);\n    right(90)\n   end;\n  polyline(gran+1)\n End;\n\n Procedure verticalgrid(startx,starty,gwidth,gheight: integer);\n Var count: integer;\n Begin\n  setxy(startx,starty+gheight);\n  colour(lightgrey);\n  direction(0);\n  for count:=1 to 9 do\n   begin\n    pendown;\n    if count=1 then\n     thickness(4)\n    else\n     thickness(2);\n    forward(2*gheight);\n    back(2*gheight);\n    right(90);\n    penup;\n    forward(gwidth/8);\n    if count mod 2=1 then\n     forward(1);\n    pendown;\n    left(90)\n   end\n End;\n\n Procedure horizontalgrid(startx,starty,gwidth,gheight: integer);\n Var count,steps: integer;\n Begin\n  steps:=50;\n  setxy(startx,starty-gheight);\n  colour(lightgrey);\n  direction(90);\n  for count:=1 to 2*(gheight/steps)+1 do\n   begin\n    if count=gheight/steps+1 then\n     thickness(4)\n    else\n     thickness(2);\n    pendown;\n    forward(gwidth);\n    back(gwidth);\n    right(90);\n    penup;\n    forward(steps);\n    pendown;\n    left(90)\n   end\n End;\n\n Procedure initialise;\n Var count: integer;\n Begin\n  keyecho(false);\n  numwaves:=2;\n  selectedwave:=1;\n  multsumwaves:=1;\n  decayrate:=10;\n  infoflag:=0;\n  divideby:=1;\n  granularity:=course;\n  wavesshown:='All waves';\n  loaddecaymults(decayrate);\n  for count:=1 to maxwaves do\n   begin\n    amplitudes[count]:=100;\n    phases[count]:=0;\n    onoff[count]:=1\n   end\n End;\n\n Procedure displaygraphs;\n Var count: integer;\n Begin\n  border(30,460,940,540,ochre,black,silver,withbackground);\n  border(32,462,936,536,black,ochre,white,withbackground);\n  verticalgrid(50,730,900,250);\n  horizontalgrid(50,730,900,250);\n  addsinecurves(numwaves,100,0,darkgrey,40,730);\n  border(30,118,940,340,ochre,darkbrown,silver,nobackground);\n  border(32,120,936,336,darkbrown,ochre,cream,withbackground);\n  verticalgrid(50,288,900,150);\n  horizontalgrid(50,288,900,150);\n  for count:=1 to numwaves do\n   sinecurve(count,900,count,40,288)\n End;\n\nBEGIN\n initialise;\n exitflag:=0;\n repeat\n  noupdate;\n  blank(coffee);\n  displaygraphs;\n  displaycontrolboards;\n  update;\n  repeat\n   pause(30)\n  until ?click>0;\n  updatecontrolboards\n until exitflag=1\nEND.",
  "usage":[
    {
      "category": "Turtle: relative movement",
      "expressions":[
        {"name":"back", "level":1, "count":4, "lines":"1039 1097 1119 1145"},
        {"name":"forward", "level":1, "count":9, "lines":"1034 1038 1077 1096 1118 1122 1124 1144 1148"},
        {"name":"left", "level":1, "count":4, "lines":"1036 1080 1126 1150"},
        {"name":"right", "level":1, "count":4, "lines":"1041 1100 1120 1146"},
        {"name":"drawxy", "level":2, "count":20, "lines":"73 74 76 77 101 102 104 105 121 122 124 125 140 141 143 144 165 166 168 169"}
      ],
      "total":41
    },
    {
      "category": "Turtle: absolute movement",
      "expressions":[
        {"name":"direction", "level":1, "count":4, "lines":"1029 1072 1110 1136"},
        {"name":"setxy", "level":1, "count":27, "lines":"54 71 78 79 80 81 85 87 99 107 119 127 138 146 156 157 158 159 163 196 197 198 199 1028 1071 1108 1134"}
      ],
      "total":31
    },
    {
      "category": "Turtle: drawing shapes",
      "expressions":[
        {"name":"forget", "level":2, "count":4, "lines":"1035 1040 1078 1099"},
        {"name":"polygon", "level":2, "count":3, "lines":"83 161 201"},
        {"name":"polyline", "level":2, "count":2, "lines":"1045 1102"}
      ],
      "total":9
    },
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"colour", "level":1, "count":23, "lines":"55 72 75 82 88 100 103 108 120 123 128 139 142 147 160 164 167 200 1027 1054 1062 1109 1135"},
        {"name":"pendown", "level":1, "count":11, "lines":"70 98 118 137 153 1079 1098 1113 1125 1143 1149"},
        {"name":"penup", "level":1, "count":5, "lines":"1033 1076 1095 1121 1147"},
        {"name":"thickness", "level":1, "count":8, "lines":"1044 1047 1061 1069 1115 1117 1140 1142"}
      ],
      "total":47
    },
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"blank", "level":1, "count":1, "lines":"1196"},
        {"name":"noupdate", "level":1, "count":1, "lines":"1195"},
        {"name":"update", "level":1, "count":1, "lines":"1199"},
        {"name":"recolour", "level":3, "count":3, "lines":"106 126 145"}
      ],
      "total":6
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"abs", "level":1, "count":2, "lines":"32 1092"},
        {"name":"inc", "level":1, "count":1, "lines":"41"}
      ],
      "total":3
    },
    {
      "category": "Trig / exp / log functions",
      "expressions":[
        {"name":"sin", "level":2, "count":2, "lines":"1037 1085"}
      ],
      "total":2
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"print", "level":1, "count":6, "lines":"57 59 90 109 129 148"}
      ],
      "total":6
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"str", "level":1, "count":1, "lines":"89"}
      ],
      "total":1
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"pause", "level":1, "count":1, "lines":"1201"},
        {"name":"keyecho", "level":2, "count":1, "lines":"1157"}
      ],
      "total":2
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":93, "lines":"33 50 56 84 154 179 184 186 216 218 220 234 236 238 240 269 271 273 275 291 293 299 305 307 313 326 330 340 344 346 357 361 386 390 401 405 407 415 420 426 431 437 454 487 491 494 503 512 517 529 534 550 561 576 581 594 599 617 634 659 684 701 719 742 758 772 786 799 815 848 861 877 888 901 917 927 937 949 969 991 1005 1012 1014 1043 1046 1055 1084 1087 1090 1094 1114 1123 1139"},
        {"name":"else", "level":1, "count":26, "lines":"35 52 58 86 191 301 315 328 342 348 359 388 403 422 433 489 505 519 536 583 601 1021 1064 1089 1116 1141"},
        {"name":"for", "level":1, "count":27, "lines":"247 249 251 297 311 371 410 418 429 440 457 468 496 501 515 532 579 597 620 637 1031 1074 1082 1111 1137 1167 1187"},
        {"name":"repeat", "level":2, "count":4, "lines":"447 475 1194 1200"},
        {"name":"while", "level":2, "count":1, "lines":"38"},
        {"name":"procedure", "level":2, "count":48, "lines":"47 62 93 112 132 151 172 205 224 244 258 280 322 336 353 368 382 397 465 483 655 680 697 714 737 753 767 781 795 810 844 859 875 886 898 914 925 935 946 966 978 995 1009 1051 1105 1130 1154 1175"},
        {"name":"function", "level":3, "count":1, "lines":"29"}
      ],
      "total":200
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"getnumdigits", "level":0, "count":2, "lines":"85 87"},
        {"name":"border", "level":0, "count":6, "lines":"181 182 1178 1179 1183 1184"},
        {"name":"outtext", "level":0, "count":1, "lines":"215"},
        {"name":"spinbutton", "level":0, "count":2, "lines":"217 221"},
        {"name":"outvalue", "level":0, "count":1, "lines":"219"},
        {"name":"loaddecaymults", "level":0, "count":13, "lines":"277 319 378 509 525 542 556 567 589 607 627 644 1166"},
        {"name":"initwaves", "level":0, "count":10, "lines":"392 493 514 531 552 563 578 596 619 636"},
        {"name":"fibonacci", "level":0, "count":2, "lines":"553 564"},
        {"name":"borders", "level":0, "count":12, "lines":"658 683 700 718 741 757 771 785 798 814 847 981"},
        {"name":"spinner", "level":0, "count":12, "lines":"665 691 692 708 709 749 750 764 778 792 822 823"},
        {"name":"smallbutton", "level":0, "count":26, "lines":"667 669 671 673 675 677 694 711 726 728 730 732 734 805 807 825 827 829 831 833 835 837 839 841 854 856"},
        {"name":"incdecspinner", "level":0, "count":5, "lines":"866 882 893 894 932"},
        {"name":"updatevaluebutton", "level":0, "count":8, "lines":"867 868 869 870 871 942 943 975"},
        {"name":"initallwavesbutton", "level":0, "count":1, "lines":"872"},
        {"name":"updatetogglebutton", "level":0, "count":2, "lines":"883 974"},
        {"name":"updatewavebutton", "level":0, "count":1, "lines":"895"},
        {"name":"updateshowbuttons", "level":0, "count":5, "lines":"907 908 909 910 911"},
        {"name":"incdecdecay", "level":0, "count":1, "lines":"922"},
        {"name":"incdecdivideby", "level":0, "count":1, "lines":"954"},
        {"name":"updatepresetbuttons", "level":0, "count":9, "lines":"955 956 957 958 959 960 961 962 963"},
        {"name":"controlboard", "level":0, "count":1, "lines":"980"},
        {"name":"controlboard2", "level":0, "count":1, "lines":"982"},
        {"name":"controlboard2a", "level":0, "count":1, "lines":"983"},
        {"name":"controlboard3", "level":0, "count":1, "lines":"984"},
        {"name":"controlboard4", "level":0, "count":1, "lines":"985"},
        {"name":"controlboard5", "level":0, "count":1, "lines":"986"},
        {"name":"controlboard6", "level":0, "count":1, "lines":"987"},
        {"name":"controlboard7", "level":0, "count":1, "lines":"988"},
        {"name":"controlboard8", "level":0, "count":1, "lines":"989"},
        {"name":"helpexitboard", "level":0, "count":1, "lines":"990"},
        {"name":"infoboard", "level":0, "count":1, "lines":"992"},
        {"name":"updatecontrolboard", "level":0, "count":1, "lines":"997"},
        {"name":"updatecontrolboard2", "level":0, "count":1, "lines":"998"},
        {"name":"updatecontrolboard2a", "level":0, "count":1, "lines":"999"},
        {"name":"updatecontrolboard3", "level":0, "count":1, "lines":"1000"},
        {"name":"updatecontrolboard4", "level":0, "count":1, "lines":"1001"},
        {"name":"updatecontrolboard5", "level":0, "count":1, "lines":"1002"},
        {"name":"updatecontrolboard8", "level":0, "count":1, "lines":"1003"},
        {"name":"updatehelpexitboard", "level":0, "count":1, "lines":"1004"},
        {"name":"updateinfoboard", "level":0, "count":1, "lines":"1006"},
        {"name":"verticalgrid", "level":0, "count":2, "lines":"1180 1185"},
        {"name":"horizontalgrid", "level":0, "count":2, "lines":"1181 1186"},
        {"name":"addsinecurves", "level":0, "count":1, "lines":"1182"},
        {"name":"sinecurve", "level":0, "count":1, "lines":"1188"},
        {"name":"initialise", "level":0, "count":1, "lines":"1192"},
        {"name":"displaygraphs", "level":0, "count":1, "lines":"1197"},
        {"name":"displaycontrolboards", "level":0, "count":1, "lines":"1198"},
        {"name":"updatecontrolboards", "level":0, "count":1, "lines":"1203"}
      ],
      "total":150
    }
  ],
  "pcode":[
    [112,62,1,1,112,0,123,112,6,2,123,4,112,368,124,112,430,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [116,80,119,78],
    [112,33,119,79],
    [116,115,119,113],
    [112,33,119,114],
    [116,150,119,148],
    [112,33,119,149],
    [116,184,119,183],
    [112,60,119,184],
    [116,246,119,245],
    [112,60,119,246],
    [116,308,119,307],
    [112,60,119,308],
    [116,370,119,369],
    [112,60,119,370],
    [128,1054],
    [133,1],
    [139,12,3],
    [117,12,1,112,3,124,120,12,2],
    [114,12,2,24,120,12,2],
    [114,12,2,112,0,32,129,25],
    [112,1,120,12,3],
    [128,30],
    [112,0,120,12,3],
    [114,12,2,112,0,35,129,30],
    [114,12,2,112,10,29,120,12,2],
    [117,12,3,1,122,4,2,123],
    [128,26],
    [114,12,3,120,12,1],
    [113,12,119,61,140,12,134,132],
    [133,2],
    [139,13,40],
    [117,13,1,112,40,124,117,13,6,1,1,4,120,13,5,112,33,2,123,4,126,120,13,4,120,13,3,120,13,2,120,13,1],
    [114,13,3,112,1,32,129,38],
    [114,13,2,112,3,27,120,13,2],
    [128,39],
    [114,13,2,112,1,27,120,13,2],
    [114,13,1,112,5,26,114,13,2,88],
    [114,13,4,87],
    [114,13,3,112,1,32,129,44],
    [114,13,5,112,16,112,18,168],
    [128,45],
    [114,13,5,112,0,112,18,168],
    [140,13,134,132],
    [133,3],
    [139,14,44],
    [117,14,1,112,44,124,120,14,5,120,14,4,120,14,3,120,14,2,120,14,1],
    [117,14,12,120,14,10,112,33,120,14,11],
    [112,13,120,14,9],
    [112,8,120,14,8],
    [112,12,114,14,9,114,14,3,28,26,120,14,6],
    [112,24,120,14,7],
    [112,-1,86],
    [114,14,1,114,14,6,26,114,14,2,88],
    [112,8421504,87],
    [112,0,114,14,7,90],
    [114,14,6,23,112,0,90],
    [112,4210752,87],
    [112,0,114,14,7,23,112,1,27,90],
    [114,14,6,112,0,90],
    [114,14,1,112,1,26,114,14,2,112,1,26,88],
    [114,14,1,114,14,6,26,112,2,27,114,14,2,112,1,26,88],
    [114,14,1,114,14,6,26,112,2,27,114,14,2,114,14,7,26,112,2,27,88],
    [114,14,1,112,1,26,114,14,2,114,14,7,26,112,2,27,88],
    [112,0,87],
    [112,4,106],
    [114,14,4,112,0,34,129,72],
    [114,14,1,112,5,26,114,14,9,114,14,3,114,14,4,131,18],
    [114,61,1,27,28,26,114,14,8,27,114,14,2,112,2,27,88],
    [128,74],
    [114,14,1,112,5,26,114,14,9,114,14,3,114,14,4,131,18],
    [114,61,1,27,28,26,114,14,2,112,2,27,88],
    [114,14,5,87],
    [114,14,10,114,14,4,11,2,126,142],
    [114,14,10,112,0,112,18,168],
    [140,14,134,132],
    [133,4],
    [139,15,6],
    [117,15,1,112,6,124,120,15,4,120,15,3,120,15,2,120,15,1],
    [112,24,120,15,5],
    [112,24,120,15,6],
    [112,-1,86],
    [114,15,1,114,15,5,26,114,15,2,88],
    [112,4210752,87],
    [112,0,114,15,6,90],
    [114,15,5,23,112,0,90],
    [112,10526880,87],
    [112,0,114,15,6,23,112,1,27,90],
    [114,15,5,112,0,90],
    [114,15,1,112,1,26,114,15,2,112,1,26,114,15,4,97],
    [114,15,1,112,6,26,114,15,2,112,14,27,88],
    [112,0,87],
    [114,15,3,9,112,4,112,24,168,142],
    [140,15,134,132],
    [133,5],
    [139,16,42],
    [117,16,1,112,42,124,120,16,40,120,16,39,117,16,5,1,1,4,120,16,4,112,33,2,123,4,126,120,16,3,120,16,2,120,16,1],
    [112,8,112,13,114,16,3,28,26,120,16,41],
    [112,30,120,16,42],
    [114,16,2,112,2,27,120,16,2],
    [112,-1,86],
    [114,16,1,114,16,41,26,114,16,2,88],
    [112,4210752,87],
    [112,0,114,16,42,90],
    [114,16,41,23,112,0,90],
    [112,10526880,87],
    [112,0,114,16,42,23,112,1,27,90],
    [114,16,41,112,0,90],
    [114,16,1,112,1,26,114,16,2,112,1,26,114,16,39,97],
    [114,16,1,112,8,26,114,16,2,112,2,27,88],
    [114,16,40,87],
    [114,16,4,112,0,112,22,168],
    [140,16,134,132],
    [133,6],
    [139,17,42],
    [117,17,1,112,42,124,120,17,40,120,17,39,117,17,5,1,1,4,120,17,4,112,33,2,123,4,126,120,17,3,120,17,2,120,17,1],
    [112,8,112,13,114,17,3,28,26,120,17,41],
    [112,24,120,17,42],
    [112,-1,86],
    [114,17,1,114,17,41,26,114,17,2,88],
    [112,4210752,87],
    [112,0,114,17,42,90],
    [114,17,41,23,112,0,90],
    [112,10526880,87],
    [112,0,114,17,42,23,112,1,27,90],
    [114,17,41,112,0,90],
    [114,17,1,112,1,26,114,17,2,112,1,26,114,17,39,97],
    [114,17,1,112,4,26,114,17,2,112,1,27,88],
    [114,17,40,87],
    [114,17,4,112,0,112,18,168],
    [140,17,134,132],
    [133,7],
    [139,18,8],
    [117,18,1,112,8,124,120,18,8,120,18,7,120,18,6,120,18,5,120,18,4,120,18,3,120,18,2,120,18,1],
    [112,-1,86],
    [114,18,8,112,1,32,129,144],
    [114,18,1,112,1,26,114,18,2,112,1,26,88],
    [114,18,1,112,2,27,114,18,3,26,114,18,2,112,1,26,88],
    [114,18,1,112,2,27,114,18,3,26,114,18,2,112,2,27,114,18,4,26,88],
    [114,18,1,112,1,26,114,18,2,112,2,27,114,18,4,26,88],
    [114,18,7,87],
    [112,4,106],
    [114,18,1,114,18,3,26,114,18,2,88],
    [114,18,6,87],
    [112,0,114,18,4,90],
    [114,18,3,23,112,0,90],
    [114,18,5,87],
    [112,0,114,18,4,23,112,1,27,90],
    [114,18,3,112,0,90],
    [140,18,134,132],
    [133,8],
    [139,19,13],
    [117,19,1,112,13,124,120,19,10,120,19,9,120,19,8,120,19,7,120,19,6,120,19,5,120,19,4,120,19,3,120,19,2,120,19,1],
    [112,34,120,19,13],
    [112,8,114,19,5,114,19,13,28,26,120,19,12],
    [112,8,114,19,3,114,19,4,26,112,6,26,112,13,28,26,120,19,11],
    [114,19,9,112,1,32,129,161],
    [114,19,1,114,19,2,114,19,11,114,19,12,114,19,6,114,19,7,112,12632256,112,0,131,133],
    [114,19,1,112,2,26,114,19,2,112,2,26,114,19,11,112,4,27,114,19,12,112,4,27,114,19,7,114,19,6,112,12632256,112,0,131,133],
    [114,19,10,112,1,32,129,174],
    [114,19,9,112,0,32,129,166],
    [114,19,1,112,2,27,120,19,1],
    [114,19,2,112,8,27,120,19,2],
    [128,168],
    [114,19,1,112,2,26,120,19,1],
    [114,19,2,112,2,26,120,19,2],
    [114,19,1,114,19,2,88],
    [114,19,1,112,6,27,114,19,11,26,114,19,2,88],
    [114,19,1,112,6,27,114,19,11,26,114,19,2,112,6,27,114,19,12,26,88],
    [114,19,1,114,19,2,112,6,27,114,19,12,26,88],
    [114,19,8,87],
    [112,4,106],
    [140,19,134,132],
    [133,9],
    [139,20,51],
    [117,20,1,112,51,124,120,20,46,120,20,45,120,20,44,120,20,43,117,20,9,1,1,4,120,20,8,112,33,2,123,4,126,120,20,7,120,20,6,120,20,5,120,20,4,120,20,3,120,20,2,120,20,1],
    [112,34,120,20,51],
    [112,13,120,20,47],
    [112,30,120,20,49],
    [114,20,47,114,20,6,28,120,20,48],
    [112,18,114,20,47,114,20,7,28,26,120,20,50],
    [114,20,5,114,20,1,112,1,27,114,20,51,28,26,120,20,5],
    [114,20,4,114,20,5,114,20,3,114,20,44,114,20,8,131,32],
    [114,20,2,112,2,32,129,187],
    [114,20,4,114,20,48,26,114,20,5,112,60,114,20,46,131,78],
    [114,20,2,112,0,33,129,189],
    [114,20,4,114,20,48,26,114,20,49,26,114,20,5,114,20,7,114,20,43,114,20,45,131,46],
    [114,20,2,112,2,32,129,191],
    [114,20,4,114,20,48,26,114,20,49,26,114,20,50,26,114,20,5,112,62,114,20,46,131,78],
    [140,20,134,132],
    [133,10],
    [139,21,14],
    [117,21,1,112,14,124,120,21,9,120,21,8,120,21,7,120,21,6,120,21,5,120,21,4,120,21,3,120,21,2,120,21,1],
    [112,34,120,21,14],
    [112,13,120,21,10],
    [112,30,120,21,12],
    [114,21,10,114,21,4,28,120,21,11],
    [112,18,114,21,10,114,21,5,28,26,120,21,13],
    [114,21,3,114,21,1,112,1,27,114,21,14,28,26,120,21,3],
    [112,-7,160,114,21,2,114,21,11,26,35,112,-7,160,114,21,2,114,21,11,26,114,21,12,26,34,17,112,-8,160,114,21,3,35,17,112,-8,160,114,21,3,114,21,14,26,34,17,129,204],
    [115,21,6,114,21,7,114,21,9,26,37,129,204],
    [115,21,6,114,21,9,27,121,21,6],
    [112,-7,160,114,21,2,114,21,11,26,114,21,12,26,114,21,13,26,35,112,-7,160,114,21,2,114,21,11,26,112,2,114,21,12,28,26,114,21,13,26,34,17,112,-8,160,114,21,3,35,17,112,-8,160,114,21,3,114,21,14,26,34,17,129,207],
    [115,21,6,114,21,8,114,21,9,27,36,129,207],
    [115,21,6,114,21,9,26,121,21,6],
    [140,21,134,132],
    [133,11],
    [139,22,3],
    [117,22,1,112,3,124,120,22,1],
    [112,1],
    [120,22,2,112,60],
    [114,22,2,37,129,216],
    [113,369,114,22,2,112,1,27,2,127,26,4,112,100,2,123],
    [114,22,2,4,128,212],
    [112,2],
    [120,22,2,112,60],
    [114,22,2,37,129,225],
    [114,22,2],
    [120,22,3,112,60],
    [114,22,3,37,129,224],
    [113,369,114,22,3,112,1,27,2,127,26,4,112,100,114,22,1,27,113,369,114,22,3,112,1,27,2,127,26,4,122,28,112,100,29,2,123],
    [114,22,3,4,128,220],
    [114,22,2,4,128,217],
    [140,22,134,132],
    [133,12],
    [139,23,16],
    [117,23,1,112,16,124,120,23,9,120,23,8,120,23,7,120,23,6,120,23,5,120,23,4,120,23,3,120,23,2,120,23,1],
    [112,34,120,23,14],
    [112,13,120,23,10],
    [112,30,120,23,12],
    [114,23,10,114,23,4,28,120,23,11],
    [112,18,114,23,10,114,23,5,28,26,120,23,13],
    [114,23,3,114,23,1,112,1,27,114,23,14,28,26,120,23,3],
    [112,-7,160,114,23,2,114,23,11,26,35,112,-7,160,114,23,2,114,23,11,26,114,23,12,26,34,17,112,-8,160,114,23,3,35,17,112,-8,160,114,23,3,114,23,14,26,34,17,129,238],
    [115,23,6,114,23,7,114,23,9,26,37,129,238],
    [115,23,6,114,23,9,27,121,23,6],
    [112,-7,160,114,23,2,114,23,11,26,114,23,12,26,114,23,13,26,35,112,-7,160,114,23,2,114,23,11,26,112,2,114,23,12,28,26,114,23,13,26,34,17,112,-8,160,114,23,3,35,17,112,-8,160,114,23,3,114,23,14,26,34,17,129,241],
    [115,23,6,114,23,8,114,23,9,27,36,129,241],
    [115,23,6,114,23,9,26,121,23,6],
    [113,74,131,208],
    [140,23,134,132],
    [133,13],
    [139,24,16],
    [117,24,1,112,16,124,120,24,9,120,24,8,120,24,7,120,24,6,120,24,5,120,24,4,120,24,3,120,24,2,120,24,1],
    [112,34,120,24,14],
    [112,13,120,24,10],
    [112,30,120,24,12],
    [114,24,10,114,24,4,28,120,24,11],
    [112,18,114,24,10,114,24,5,28,26,120,24,13],
    [114,24,3,114,24,1,112,1,27,114,24,14,28,26,120,24,3],
    [112,-7,160,114,24,2,114,24,11,26,35,112,-7,160,114,24,2,114,24,11,26,114,24,12,26,34,17,112,-8,160,114,24,3,35,17,112,-8,160,114,24,3,114,24,14,26,34,17,129,264],
    [115,24,6,114,24,7,114,24,9,26,37,129,264],
    [115,24,6,114,24,9,27,121,24,6],
    [113,113,118,9,68,105,118,105,100,101,32,98,121,2,126,142],
    [112,1],
    [120,24,15,112,60],
    [114,24,15,37,129,264],
    [114,24,15,113,76,31,112,0,32,129,262],
    [113,307,114,24,15,112,1,27,2,127,26,4,112,1,2,123],
    [128,263],
    [113,307,114,24,15,112,1,27,2,127,26,4,112,0,2,123],
    [114,24,15,4,128,257],
    [112,-7,160,114,24,2,114,24,11,26,114,24,12,26,114,24,13,26,35,112,-7,160,114,24,2,114,24,11,26,112,2,114,24,12,28,26,114,24,13,26,34,17,112,-8,160,114,24,3,35,17,112,-8,160,114,24,3,114,24,14,26,34,17,129,276],
    [115,24,6,114,24,8,114,24,9,27,36,129,276],
    [115,24,6,114,24,9,26,121,24,6],
    [113,113,118,9,68,105,118,105,100,101,32,98,121,2,126,142],
    [112,1],
    [120,24,15,112,60],
    [114,24,15,37,129,276],
    [114,24,15,113,76,31,112,0,32,129,274],
    [113,307,114,24,15,112,1,27,2,127,26,4,112,1,2,123],
    [128,275],
    [113,307,114,24,15,112,1,27,2,127,26,4,112,0,2,123],
    [114,24,15,4,128,269],
    [113,74,131,208],
    [140,24,134,132],
    [133,14],
    [139,25,8],
    [117,25,1,112,8,124,120,25,6,120,25,5,120,25,4,120,25,3,120,25,2,120,25,1],
    [112,8,112,13,114,25,3,28,26,120,25,7],
    [114,25,6,112,1,32,129,285],
    [112,30,120,25,8],
    [128,286],
    [112,22,120,25,8],
    [112,-7,160,114,25,1,35,112,-7,160,114,25,1,114,25,7,26,34,17,112,-8,160,114,25,2,35,17,112,-8,160,114,25,2,114,25,8,26,34,17,129,288],
    [114,25,5,121,25,4],
    [140,25,134,132],
    [133,15],
    [139,26,7],
    [117,26,1,112,7,124,120,26,5,120,26,4,120,26,3,120,26,2,120,26,1],
    [112,8,112,13,114,26,3,28,26,120,26,6],
    [114,26,5,112,1,32,129,296],
    [112,30,120,26,7],
    [128,297],
    [112,22,120,26,7],
    [112,-7,160,114,26,1,35,112,-7,160,114,26,1,114,26,6,26,34,17,112,-8,160,114,26,2,35,17,112,-8,160,114,26,2,114,26,7,26,34,17,129,302],
    [115,26,4,112,0,32,129,301],
    [112,1,121,26,4],
    [128,302],
    [112,0,121,26,4],
    [140,26,134,132],
    [133,16],
    [139,27,6],
    [117,27,1,112,6,124,120,27,4,120,27,3,120,27,2,120,27,1],
    [112,8,112,13,114,27,3,28,26,120,27,5],
    [114,27,4,112,1,32,129,310],
    [112,30,120,27,6],
    [128,311],
    [112,34,120,27,6],
    [112,-7,160,114,27,1,35,112,-7,160,114,27,1,114,27,5,26,34,17,112,-8,160,114,27,2,35,17,112,-8,160,114,27,2,114,27,6,26,34,17,129,314],
    [113,183,113,72,112,1,27,2,127,26,4,112,100,2,123],
    [113,245,113,72,112,1,27,2,127,26,4,112,0,2,123],
    [140,27,134,132],
    [133,17],
    [139,28,1],
    [117,28,1,112,1,124],
    [112,1],
    [120,28,1,112,60],
    [114,28,1,37,129,325],
    [113,183,114,28,1,112,1,27,2,127,26,4,112,100,2,123],
    [113,245,114,28,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,307,114,28,1,112,1,27,2,127,26,4,112,1,2,123],
    [114,28,1,4,128,319],
    [112,10,119,74],
    [113,74,131,208],
    [112,1,119,73],
    [140,28,134,132],
    [133,18],
    [139,29,6],
    [117,29,1,112,6,124,120,29,4,120,29,3,120,29,2,120,29,1],
    [112,8,112,13,114,29,3,28,26,120,29,5],
    [114,29,4,112,1,32,129,336],
    [112,30,120,29,6],
    [128,337],
    [112,34,120,29,6],
    [112,-7,160,114,29,1,35,112,-7,160,114,29,1,114,29,5,26,34,17,112,-8,160,114,29,2,35,17,112,-8,160,114,29,2,114,29,6,26,34,17,129,340],
    [131,315],
    [113,113,118,9,65,108,108,32,119,97,118,101,115,2,126,142],
    [140,29,134,132],
    [133,19],
    [139,30,10],
    [117,30,1,112,10,124,120,30,5,120,30,4,120,30,3,120,30,2,120,30,1],
    [112,8,112,13,114,30,4,28,26,120,30,6],
    [114,30,5,112,1,32,129,348],
    [112,30,120,30,7],
    [128,349],
    [112,22,120,30,7],
    [112,-7,160,114,30,2,35,112,-7,160,114,30,2,114,30,6,26,34,17,112,-8,160,114,30,3,35,17,112,-8,160,114,30,3,114,30,7,26,34,17,129,399],
    [114,30,1,112,1,32,129,357],
    [113,113,118,9,65,108,108,32,119,97,118,101,115,2,126,142],
    [112,1],
    [120,30,8,112,60],
    [114,30,8,37,129,357],
    [113,307,114,30,8,112,1,27,2,127,26,4,112,1,2,123],
    [114,30,8,4,128,353],
    [114,30,1,112,2,32,129,367],
    [113,113,118,5,69,118,101,110,115,2,126,142],
    [112,1],
    [120,30,8,112,60],
    [114,30,8,37,129,367],
    [114,30,8,112,2,31,112,0,32,129,365],
    [113,307,114,30,8,112,1,27,2,127,26,4,112,1,2,123],
    [128,366],
    [113,307,114,30,8,112,1,27,2,127,26,4,112,0,2,123],
    [114,30,8,4,128,360],
    [114,30,1,112,3,32,129,377],
    [113,113,118,4,79,100,100,115,2,126,142],
    [112,1],
    [120,30,8,112,60],
    [114,30,8,37,129,377],
    [114,30,8,112,2,31,112,0,32,129,375],
    [113,307,114,30,8,112,1,27,2,127,26,4,112,0,2,123],
    [128,376],
    [113,307,114,30,8,112,1,27,2,127,26,4,112,1,2,123],
    [114,30,8,4,128,370],
    [114,30,1,112,4,32,129,392],
    [113,113,118,9,70,105,98,111,110,97,99,99,105,2,126,142],
    [112,1],
    [120,30,8,112,60],
    [114,30,8,37,129,384],
    [113,307,114,30,8,112,1,27,2,127,26,4,112,0,2,123],
    [114,30,8,4,128,380],
    [113,307,112,1,112,1,27,2,127,26,4,112,1,2,123],
    [112,2,120,30,8],
    [112,1,120,30,9],
    [113,307,114,30,8,112,1,27,2,127,26,4,112,1,2,123],
    [114,30,8,120,30,10],
    [114,30,8,114,30,9,26,120,30,8],
    [114,30,10,120,30,9],
    [114,30,8,112,60,35,129,387],
    [114,30,1,112,5,32,129,399],
    [113,113,118,4,78,111,110,101,2,126,142],
    [112,1],
    [120,30,8,112,60],
    [114,30,8,37,129,399],
    [113,307,114,30,8,112,1,27,2,127,26,4,112,0,2,123],
    [114,30,8,4,128,395],
    [140,30,134,132],
    [133,20],
    [139,31,3],
    [117,31,1,112,3,124],
    [112,1],
    [120,31,1,112,60],
    [114,31,1,37,129,408],
    [113,307,114,31,1,112,1,27,2,127,26,4,112,0,2,123],
    [114,31,1,4,128,404],
    [113,307,112,1,112,1,27,2,127,26,4,112,1,2,123],
    [112,2,120,31,1],
    [112,1,120,31,2],
    [113,307,114,31,1,112,1,27,2,127,26,4,112,1,2,123],
    [114,31,1,120,31,3],
    [114,31,1,114,31,2,26,120,31,1],
    [114,31,3,120,31,2],
    [114,31,1,112,60,35,129,411],
    [140,31,134,132],
    [133,21],
    [139,32,10],
    [117,32,1,112,10,124,120,32,5,120,32,4,120,32,3,120,32,2,120,32,1],
    [112,8,112,13,114,32,4,28,26,120,32,6],
    [114,32,5,112,1,32,129,424],
    [112,30,120,32,7],
    [128,425],
    [112,26,120,32,7],
    [112,-7,160,114,32,2,35,112,-7,160,114,32,2,114,32,6,26,34,17,112,-8,160,114,32,3,35,17,112,-8,160,114,32,3,114,32,7,26,34,17,129,575],
    [131,315],
    [114,32,1,112,0,32,129,445],
    [112,1],
    [120,32,8,113,72,112,1,27],
    [114,32,8,37,129,433],
    [113,307,114,32,8,112,1,27,2,127,26,4,112,0,2,123],
    [114,32,8,4,128,429],
    [113,307,113,72,112,1,27,2,127,26,4,112,1,2,123],
    [113,72,112,1,26],
    [120,32,8,112,60],
    [114,32,8,37,129,442],
    [114,32,8,113,72,27,113,76,31,112,0,32,129,440],
    [113,307,114,32,8,112,1,27,2,127,26,4,112,1,2,123],
    [128,441],
    [113,307,114,32,8,112,1,27,2,127,26,4,112,0,2,123],
    [114,32,8,4,128,435],
    [113,113,118,10,76,105,109,32,68,105,118,105,100,101,2,126,142],
    [113,74,131,208],
    [112,1,119,73],
    [114,32,1,112,1,32,129,461],
    [131,315],
    [112,1],
    [120,32,8,112,60],
    [114,32,8,37,129,456],
    [114,32,8,112,2,31,112,0,32,129,453],
    [113,307,114,32,8,112,1,27,2,127,26,4,112,1,2,123],
    [128,454],
    [113,307,114,32,8,112,1,27,2,127,26,4,112,0,2,123],
    [113,183,114,32,8,112,1,27,2,127,26,4,112,200,2,123],
    [114,32,8,4,128,448],
    [113,113,118,8,83,97,119,116,111,111,116,104,2,126,142],
    [112,30,119,74],
    [113,74,131,208],
    [112,12,119,71],
    [112,1,119,73],
    [114,32,1,112,2,32,129,481],
    [131,315],
    [112,1],
    [120,32,8,112,60],
    [114,32,8,37,129,472],
    [114,32,8,112,2,31,112,0,32,129,469],
    [113,307,114,32,8,112,1,27,2,127,26,4,112,0,2,123],
    [128,470],
    [113,307,114,32,8,112,1,27,2,127,26,4,112,1,2,123],
    [113,183,114,32,8,112,1,27,2,127,26,4,112,150,2,123],
    [114,32,8,4,128,464],
    [113,113,118,6,83,113,117,97,114,101,2,126,142],
    [112,40,119,74],
    [113,74,131,208],
    [112,11,119,71],
    [113,183,112,3,112,1,27,2,127,26,4,112,115,2,123],
    [113,183,112,5,112,1,27,2,127,26,4,112,130,2,123],
    [113,183,112,7,112,1,27,2,127,26,4,112,130,2,123],
    [113,183,112,9,112,1,27,2,127,26,4,112,190,2,123],
    [112,1,119,73],
    [114,32,1,112,3,32,129,490],
    [131,315],
    [131,400],
    [113,113,118,10,83,104,111,114,116,115,116,111,99,107,2,126,142],
    [112,3,119,74],
    [113,74,131,208],
    [112,40,119,71],
    [112,1,119,73],
    [112,1,119,77],
    [114,32,1,112,4,32,129,503],
    [131,315],
    [131,400],
    [113,113,118,9,76,111,110,103,115,116,111,99,107,2,126,142],
    [112,3,119,74],
    [113,74,131,208],
    [112,60,119,71],
    [112,1,119,73],
    [112,1,119,77],
    [113,307,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,307,112,2,112,1,27,2,127,26,4,112,0,2,123],
    [113,307,112,3,112,1,27,2,127,26,4,112,0,2,123],
    [113,307,112,5,112,1,27,2,127,26,4,112,0,2,123],
    [114,32,1,112,5,32,129,520],
    [131,315],
    [112,1],
    [120,32,8,112,60],
    [114,32,8,37,129,514],
    [114,32,8,112,2,31,112,0,32,129,511],
    [113,307,114,32,8,112,1,27,2,127,26,4,112,0,2,123],
    [128,512],
    [113,307,114,32,8,112,1,27,2,127,26,4,112,1,2,123],
    [113,183,114,32,8,112,1,27,2,127,26,4,112,100,2,123],
    [114,32,8,4,128,506],
    [113,113,118,5,80,117,108,115,101,2,126,142],
    [112,3,119,74],
    [113,74,131,208],
    [112,60,119,71],
    [113,307,112,3,112,1,27,2,127,26,4,112,0,2,123],
    [112,3,119,73],
    [114,32,1,112,6,32,129,542],
    [131,315],
    [112,1],
    [120,32,8,112,60],
    [114,32,8,37,129,531],
    [114,32,8,112,2,31,112,0,32,129,528],
    [113,307,114,32,8,112,1,27,2,127,26,4,112,1,2,123],
    [128,529],
    [113,307,114,32,8,112,1,27,2,127,26,4,112,0,2,123],
    [113,183,114,32,8,112,1,27,2,127,26,4,112,100,2,123],
    [114,32,8,4,128,523],
    [113,113,118,7,82,101,108,97,120,101,100,2,126,142],
    [112,2,119,74],
    [113,74,131,208],
    [112,60,119,71],
    [113,307,112,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,307,112,3,112,1,27,2,127,26,4,112,0,2,123],
    [113,307,112,5,112,1,27,2,127,26,4,112,0,2,123],
    [113,307,112,7,112,1,27,2,127,26,4,112,0,2,123],
    [113,307,112,9,112,1,27,2,127,26,4,112,0,2,123],
    [113,245,112,2,112,1,27,2,127,26,4,112,90,2,123],
    [112,4,119,73],
    [114,32,1,112,7,32,129,558],
    [131,315],
    [112,1],
    [120,32,8,112,60],
    [114,32,8,37,129,550],
    [113,307,114,32,8,112,1,27,2,127,26,4,112,0,2,123],
    [113,183,114,32,8,112,1,27,2,127,26,4,112,100,2,123],
    [114,32,8,4,128,545],
    [113,113,118,8,79,110,101,32,98,101,97,116,2,126,142],
    [112,1,119,74],
    [113,74,131,208],
    [112,40,119,71],
    [113,307,112,28,112,1,27,2,127,26,4,112,1,2,123],
    [113,307,112,30,112,1,27,2,127,26,4,112,1,2,123],
    [112,1,119,77],
    [112,1,119,73],
    [114,32,1,112,8,32,129,575],
    [131,315],
    [112,1],
    [120,32,8,112,60],
    [114,32,8,37,129,566],
    [113,307,114,32,8,112,1,27,2,127,26,4,112,0,2,123],
    [113,183,114,32,8,112,1,27,2,127,26,4,112,100,2,123],
    [114,32,8,4,128,561],
    [113,113,118,9,84,119,111,32,98,101,97,116,115,2,126,142],
    [112,1,119,74],
    [113,74,131,208],
    [112,40,119,71],
    [113,307,112,34,112,1,27,2,127,26,4,112,1,2,123],
    [113,307,112,36,112,1,27,2,127,26,4,112,1,2,123],
    [113,307,112,38,112,1,27,2,127,26,4,112,1,2,123],
    [112,1,119,77],
    [112,1,119,73],
    [140,32,134,132],
    [133,22],
    [139,33,77],
    [117,33,1,112,77,124,120,33,7,120,33,6,120,33,5,120,33,4,120,33,3,120,33,2,120,33,1],
    [117,33,10,120,33,8,112,33,120,33,9],
    [117,33,45,120,33,43,112,33,120,33,44],
    [114,33,1,114,33,2,114,33,3,114,33,4,114,33,5,112,16762880,112,6045747,112,12628016,114,33,6,114,33,7,131,152],
    [114,33,6,112,1,32,129,585],
    [114,33,1,112,4,26,120,33,1],
    [114,33,2,112,8,26,120,33,2],
    [114,33,8,118,9,78,111,46,32,87,97,118,101,115,2,126,142],
    [112,1,112,2,112,1,114,33,1,114,33,2,114,33,3,114,33,4,114,33,8,113,71,112,0,112,16777215,112,16711680,131,175],
    [114,33,43,118,2,32,50,2,126,142],
    [114,33,1,112,10,26,114,33,2,112,34,26,112,2,114,33,43,112,16711680,112,0,131,115],
    [114,33,43,118,2,49,48,2,126,142],
    [114,33,1,112,54,26,114,33,2,112,34,26,112,2,114,33,43,112,16711680,112,0,131,115],
    [114,33,43,118,2,50,48,2,126,142],
    [114,33,1,112,98,26,114,33,2,112,34,26,112,2,114,33,43,112,16711680,112,0,131,115],
    [114,33,43,118,2,52,48,2,126,142],
    [114,33,1,112,142,26,114,33,2,112,34,26,112,2,114,33,43,112,16711680,112,0,131,115],
    [114,33,43,118,2,54,48,2,126,142],
    [114,33,1,112,186,26,114,33,2,112,34,26,112,2,114,33,43,112,16711680,112,0,131,115],
    [114,33,43,118,20,73,110,105,116,105,97,108,105,115,101,32,97,108,108,32,119,97,118,101,115,2,126,142],
    [114,33,1,112,8,26,114,33,2,112,68,26,112,16,114,33,43,112,10025880,112,0,131,115],
    [140,33,134,132],
    [133,23],
    [139,34,77],
    [117,34,1,112,77,124,120,34,7,120,34,6,120,34,5,120,34,4,120,34,3,120,34,2,120,34,1],
    [117,34,10,120,34,8,112,33,120,34,9],
    [117,34,45,120,34,43,112,33,120,34,44],
    [114,34,1,114,34,2,114,34,3,114,34,4,114,34,5,112,16762880,112,6045747,112,12628016,114,34,6,114,34,7,131,152],
    [114,34,6,112,1,32,129,609],
    [114,34,1,112,4,26,120,34,1],
    [114,34,2,112,8,26,120,34,2],
    [114,34,8,118,11,83,101,108,101,99,116,32,87,97,118,101,2,126,142],
    [114,34,43,118,0,2,126,142],
    [112,1,112,2,112,1,114,34,1,114,34,2,114,34,3,114,34,4,114,34,8,113,72,112,0,112,16777215,112,65280,131,175],
    [112,2,112,1,112,0,114,34,1,114,34,2,114,34,3,114,34,4,114,34,43,113,307,113,72,112,1,27,2,127,26,4,122,112,0,112,16777215,112,51543,131,175],
    [114,34,43,118,11,87,97,118,101,32,79,110,47,79,102,102,2,126,142],
    [114,34,1,112,28,26,114,34,2,112,34,26,112,11,114,34,43,112,51543,112,0,131,115],
    [140,34,134,132],
    [133,24],
    [139,35,77],
    [117,35,1,112,77,124,120,35,7,120,35,6,120,35,5,120,35,4,120,35,3,120,35,2,120,35,1],
    [117,35,10,120,35,8,112,33,120,35,9],
    [117,35,45,120,35,43,112,33,120,35,44],
    [114,35,1,114,35,2,114,35,3,114,35,4,114,35,5,112,16762880,112,6045747,112,12628016,114,35,6,114,35,7,131,152],
    [114,35,6,112,1,32,129,625],
    [114,35,1,112,4,26,120,35,1],
    [114,35,2,112,8,26,120,35,2],
    [114,35,8,118,10,32,65,109,112,108,105,116,117,100,101,2,126,142],
    [114,35,43,118,12,32,32,32,32,32,32,32,80,104,97,115,101,2,126,142],
    [112,1,112,2,112,0,114,35,1,114,35,2,114,35,3,114,35,4,114,35,8,113,183,113,72,112,1,27,2,127,26,4,122,112,0,112,16777215,112,10025880,131,175],
    [112,2,112,2,112,0,114,35,1,114,35,2,114,35,3,114,35,4,114,35,43,113,245,113,72,112,1,27,2,127,26,4,122,112,0,112,16777215,112,10025880,131,175],
    [114,35,43,112,88,9,2,126,142],
    [114,35,1,112,14,26,114,35,2,112,34,26,112,1,114,35,43,112,10025880,112,0,131,115],
    [140,35,134,132],
    [133,25],
    [139,36,43],
    [117,36,1,112,43,124,120,36,7,120,36,6,120,36,5,120,36,4,120,36,3,120,36,2,120,36,1],
    [117,36,10,120,36,8,112,33,120,36,9],
    [114,36,1,114,36,2,114,36,3,114,36,4,114,36,5,112,16762880,112,6045747,112,12628016,114,36,6,114,36,7,131,152],
    [114,36,6,112,1,32,129,640],
    [114,36,1,112,4,26,120,36,1],
    [114,36,2,112,8,26,120,36,2],
    [112,32,120,36,43],
    [114,36,8,118,3,65,108,108,2,126,142],
    [114,36,1,114,36,43,26,114,36,2,112,2,114,36,8,112,51543,112,0,131,115],
    [114,36,8,118,5,69,118,101,110,115,2,126,142],
    [114,36,1,114,36,43,26,112,55,26,114,36,2,112,5,114,36,8,112,51543,112,0,131,115],
    [114,36,8,118,4,79,100,100,115,2,126,142],
    [114,36,1,114,36,43,26,112,150,26,114,36,2,112,5,114,36,8,112,51543,112,0,131,115],
    [114,36,8,118,9,70,105,98,111,110,97,99,99,105,2,126,142],
    [114,36,1,114,36,43,26,112,245,26,114,36,2,112,8,114,36,8,112,51543,112,0,131,115],
    [114,36,8,118,4,78,111,110,101,2,126,142],
    [114,36,1,114,36,43,26,112,380,26,114,36,2,112,5,114,36,8,112,51543,112,0,131,115],
    [140,36,134,132],
    [133,26],
    [139,37,78],
    [117,37,1,112,78,124,120,37,7,120,37,6,120,37,5,120,37,4,120,37,3,120,37,2,120,37,1],
    [117,37,11,120,37,9,112,33,120,37,10],
    [117,37,46,120,37,44,112,33,120,37,45],
    [114,37,1,114,37,2,114,37,3,114,37,4,114,37,5,112,16762880,112,6045747,112,12628016,114,37,6,114,37,7,131,152],
    [114,37,6,112,1,32,129,661],
    [114,37,1,112,4,26,120,37,1],
    [114,37,2,112,8,26,120,37,2],
    [114,37,9,118,10,68,101,99,97,121,32,82,97,116,101,2,126,142],
    [114,37,44,112,37,9,2,126,142],
    [112,1,112,0,112,1,114,37,1,114,37,2,114,37,3,114,37,4,114,37,9,114,37,8,112,0,112,16777215,112,128,131,175],
    [112,2,112,2,112,1,114,37,1,114,37,2,114,37,3,114,37,4,114,37,44,113,74,112,0,112,16777215,112,45311,131,175],
    [140,37,134,132],
    [133,27],
    [139,38,43],
    [117,38,1,112,43,124,120,38,7,120,38,6,120,38,5,120,38,4,120,38,3,120,38,2,120,38,1],
    [117,38,11,120,38,9,112,33,120,38,10],
    [114,38,1,114,38,2,114,38,3,114,38,4,114,38,5,112,12628016,112,6045747,112,12628016,114,38,6,114,38,7,131,152],
    [114,38,6,112,1,32,129,674],
    [114,38,1,112,4,26,120,38,1],
    [114,38,2,112,8,26,120,38,2],
    [114,38,9,118,8,83,104,114,105,110,107,32,89,2,126,142],
    [112,1,112,2,112,0,114,38,1,114,38,2,114,38,3,114,38,4,114,38,9,113,73,112,0,112,16777215,112,12628016,131,175],
    [140,38,134,132],
    [133,28],
    [139,39,43],
    [117,39,1,112,43,124,120,39,7,120,39,6,120,39,5,120,39,4,120,39,3,120,39,2,120,39,1],
    [117,39,11,120,39,9,112,33,120,39,10],
    [114,39,1,114,39,2,114,39,3,114,39,4,114,39,5,112,12628016,112,6045747,112,16762880,114,39,6,114,39,7,131,152],
    [114,39,6,112,1,32,129,685],
    [114,39,1,112,4,26,120,39,1],
    [114,39,2,112,8,26,120,39,2],
    [114,39,9,118,17,32,32,83,117,112,101,114,112,111,115,101,100,32,87,97,118,101,2,126,142],
    [112,1,112,0,112,1,114,39,1,114,39,2,114,39,3,114,39,4,114,39,9,114,39,8,112,0,112,16777215,112,12628016,131,175],
    [140,39,134,132],
    [133,29],
    [139,40,43],
    [117,40,1,112,43,124,120,40,7,120,40,6,120,40,5,120,40,4,120,40,3,120,40,2,120,40,1],
    [117,40,11,120,40,9,112,33,120,40,10],
    [114,40,1,114,40,2,114,40,3,114,40,4,114,40,5,112,12628016,112,6045747,112,16762880,114,40,6,114,40,7,131,152],
    [114,40,6,112,1,32,129,696],
    [114,40,1,112,4,26,120,40,1],
    [114,40,2,112,8,26,120,40,2],
    [114,40,9,118,16,32,67,111,109,112,111,110,101,110,116,32,87,97,118,101,115,2,126,142],
    [112,1,112,0,112,1,114,40,1,114,40,2,114,40,3,114,40,4,114,40,9,114,40,8,112,0,112,16777215,112,12628016,131,175],
    [140,40,134,132],
    [133,30],
    [139,41,42],
    [117,41,1,112,42,124,120,41,7,120,41,6,120,41,5,120,41,4,120,41,3,120,41,2,120,41,1],
    [117,41,10,120,41,8,112,33,120,41,9],
    [114,41,1,114,41,2,114,41,3,114,41,4,114,41,5,112,16762880,112,6045747,112,12628016,114,41,6,114,41,7,131,152],
    [114,41,6,112,1,32,129,707],
    [114,41,1,112,4,26,120,41,1],
    [114,41,2,112,8,26,120,41,2],
    [114,41,8,118,6,67,111,97,114,115,101,2,126,142],
    [114,41,1,112,22,26,114,41,2,112,2,26,112,6,114,41,8,112,12628016,112,0,131,115],
    [114,41,8,118,4,70,105,110,101,2,126,142],
    [114,41,1,112,130,26,114,41,2,112,2,26,112,4,114,41,8,112,12628016,112,0,131,115],
    [140,41,134,132],
    [133,31],
    [139,42,78],
    [117,42,1,112,78,124,120,42,7,120,42,6,120,42,5,120,42,4,120,42,3,120,42,2,120,42,1],
    [117,42,11,120,42,9,112,33,120,42,10],
    [117,42,46,120,42,44,112,33,120,42,45],
    [114,42,1,114,42,2,114,42,3,114,42,4,114,42,5,112,16762880,112,255,112,12628016,114,42,6,114,42,7,131,152],
    [114,42,6,112,1,32,129,721],
    [114,42,1,112,4,26,120,42,1],
    [114,42,2,112,8,26,120,42,2],
    [114,42,9,118,10,83,104,111,119,105,110,103,58,32,32,113,113,64,2,126,142],
    [114,42,44,118,17,32,32,32,32,32,32,32,32,68,105,118,105,100,101,32,98,121,2,126,142],
    [112,1,112,0,112,1,114,42,1,114,42,2,114,42,3,114,42,4,114,42,9,114,42,8,112,0,112,16777215,112,51543,131,175],
    [112,2,112,2,112,0,114,42,1,114,42,2,114,42,3,114,42,4,114,42,44,113,76,112,0,112,16777215,112,51543,131,175],
    [114,42,44,118,3,76,105,109,2,126,142],
    [114,42,1,112,8,26,114,42,2,112,1,112,34,28,26,112,3,114,42,44,112,51543,112,0,131,115],
    [114,42,44,118,8,32,32,83,113,117,97,114,101,2,126,142],
    [114,42,1,112,8,26,114,42,2,112,2,112,34,28,26,112,9,114,42,44,112,51543,112,0,131,115],
    [114,42,44,118,9,32,32,32,32,80,117,108,115,101,2,126,142],
    [114,42,1,112,8,26,114,42,2,112,3,112,34,28,26,112,9,114,42,44,112,51543,112,0,131,115],
    [114,42,44,118,8,79,110,101,32,98,101,97,116,2,126,142],
    [114,42,1,112,8,26,114,42,2,112,4,112,34,28,26,112,9,114,42,44,112,51543,112,0,131,115],
    [114,42,44,118,10,83,104,111,114,116,115,116,111,99,107,2,126,142],
    [114,42,1,112,8,26,114,42,2,112,5,112,34,28,26,112,9,114,42,44,112,51543,112,0,131,115],
    [114,42,44,118,9,32,83,97,119,116,111,111,116,104,2,126,142],
    [114,42,1,112,142,26,114,42,2,112,2,112,34,28,26,112,9,114,42,44,112,51543,112,0,131,115],
    [114,42,44,118,9,32,32,82,101,108,97,120,101,100,2,126,142],
    [114,42,1,112,142,26,114,42,2,112,3,112,34,28,26,112,9,114,42,44,112,51543,112,0,131,115],
    [114,42,44,118,9,84,119,111,32,98,101,97,116,115,2,126,142],
    [114,42,1,112,142,26,114,42,2,112,4,112,34,28,26,112,9,114,42,44,112,51543,112,0,131,115],
    [114,42,44,118,9,76,111,110,103,115,116,111,99,107,2,126,142],
    [114,42,1,112,142,26,114,42,2,112,5,112,34,28,26,112,9,114,42,44,112,51543,112,0,131,115],
    [140,42,134,132],
    [133,32],
    [139,43,42],
    [117,43,1,112,42,124,120,43,7,120,43,6,120,43,5,120,43,4,120,43,3,120,43,2,120,43,1],
    [117,43,10,120,43,8,112,33,120,43,9],
    [114,43,1,114,43,2,114,43,3,114,43,4,114,43,5,112,16762880,112,6045747,112,12628016,114,43,6,114,43,7,131,152],
    [114,43,6,112,1,32,129,752],
    [114,43,1,112,4,26,120,43,1],
    [114,43,2,112,8,26,120,43,2],
    [114,43,8,118,5,32,77,101,110,117,2,126,142],
    [114,43,1,112,3,26,114,43,2,112,5,114,43,8,112,255,112,16777147,131,115],
    [114,43,8,118,5,32,69,120,105,116,2,126,142],
    [114,43,1,112,81,26,114,43,2,112,4,114,43,8,112,16711680,112,16777215,131,115],
    [140,43,134,132],
    [133,33],
    [139,44,5],
    [117,44,1,112,5,124,120,44,5,120,44,4,120,44,3,120,44,2,120,44,1],
    [114,44,5,112,0,32,129,763],
    [114,44,1,112,4,27,120,44,1],
    [114,44,2,112,8,27,120,44,2],
    [112,1,114,44,1,114,44,2,114,44,3,114,44,4,116,71,112,1,112,60,112,1,131,192],
    [114,44,1,112,10,26,114,44,2,112,40,26,112,2,116,71,112,2,112,0,131,278],
    [114,44,1,112,54,26,114,44,2,112,40,26,112,2,116,71,112,10,112,0,131,278],
    [114,44,1,112,98,26,114,44,2,112,40,26,112,2,116,71,112,20,112,0,131,278],
    [114,44,1,112,142,26,114,44,2,112,40,26,112,2,116,71,112,40,112,0,131,278],
    [114,44,1,112,186,26,114,44,2,112,40,26,112,2,116,71,112,60,112,0,131,278],
    [114,44,1,112,8,26,114,44,2,112,68,26,112,16,112,0,131,329],
    [140,44,134,132],
    [133,34],
    [139,45,5],
    [117,45,1,112,5,124,120,45,5,120,45,4,120,45,3,120,45,2,120,45,1],
    [114,45,5,112,0,32,129,777],
    [114,45,1,112,4,27,120,45,1],
    [114,45,2,112,8,27,120,45,2],
    [112,1,114,45,1,114,45,2,114,45,3,114,45,4,116,72,112,1,112,60,112,1,131,192],
    [114,45,1,112,28,26,114,45,2,112,34,26,112,11,113,307,113,72,112,1,27,2,127,26,4,112,0,131,289],
    [140,45,134,132],
    [133,35],
    [139,46,5],
    [117,46,1,112,5,124,120,46,5,120,46,4,120,46,3,120,46,2,120,46,1],
    [114,46,5,112,0,32,129,786],
    [114,46,1,112,4,27,120,46,1],
    [114,46,2,112,8,27,120,46,2],
    [112,1,114,46,1,114,46,2,114,46,3,114,46,4,113,183,113,72,112,1,27,2,127,26,4,112,500,23,112,500,112,5,131,192],
    [112,2,114,46,1,114,46,2,114,46,3,114,46,4,113,245,113,72,112,1,27,2,127,26,4,112,360,23,112,360,112,2,131,192],
    [114,46,1,112,14,26,114,46,2,112,34,26,112,1,112,0,131,303],
    [140,46,134,132],
    [133,36],
    [139,47,6],
    [117,47,1,112,6,124,120,47,5,120,47,4,120,47,3,120,47,2,120,47,1],
    [114,47,5,112,0,32,129,796],
    [114,47,1,112,4,27,120,47,1],
    [114,47,2,112,8,27,120,47,2],
    [112,32,120,47,6],
    [112,1,114,47,1,114,47,6,26,114,47,2,112,2,112,0,131,341],
    [112,2,114,47,1,114,47,6,26,112,55,26,114,47,2,112,5,112,0,131,341],
    [112,3,114,47,1,114,47,6,26,112,150,26,114,47,2,112,5,112,0,131,341],
    [112,4,114,47,1,114,47,6,26,112,245,26,114,47,2,112,8,112,0,131,341],
    [112,5,114,47,1,114,47,6,26,112,380,26,114,47,2,112,5,112,0,131,341],
    [140,47,134,132],
    [133,37],
    [139,48,6],
    [117,48,1,112,6,124,120,48,5,120,48,4,120,48,3,120,48,2,120,48,1],
    [114,48,5,112,0,32,129,809],
    [114,48,1,112,4,27,120,48,1],
    [114,48,2,112,8,27,120,48,2],
    [112,2,114,48,1,114,48,2,114,48,3,114,48,4,116,74,112,0,112,100,112,1,27,112,1,131,226],
    [140,48,134,132],
    [133,38],
    [139,49,5],
    [117,49,1,112,5,124,120,49,5,120,49,4,120,49,3,120,49,2,120,49,1],
    [114,49,5,112,0,32,129,817],
    [114,49,1,112,4,27,120,49,1],
    [114,49,2,112,8,27,120,49,2],
    [112,1,114,49,1,114,49,2,114,49,3,114,49,4,116,73,112,1,112,20,112,1,131,192],
    [140,49,134,132],
    [133,39],
    [139,50,5],
    [117,50,1,112,5,124,120,50,5,120,50,4,120,50,3,120,50,2,120,50,1],
    [114,50,5,112,0,32,129,825],
    [114,50,1,112,4,27,120,50,1],
    [114,50,2,112,8,27,120,50,2],
    [114,50,1,112,22,26,114,50,2,112,8,26,112,6,116,77,112,0,112,0,131,278],
    [114,50,1,112,130,26,114,50,2,112,8,26,112,4,116,77,112,1,112,0,131,278],
    [140,50,134,132],
    [133,40],
    [139,51,6],
    [117,51,1,112,6,124,120,51,5,120,51,4,120,51,3,120,51,2,120,51,1],
    [114,51,5,112,0,32,129,834],
    [114,51,1,112,4,27,120,51,1],
    [114,51,2,112,8,27,120,51,2],
    [112,2,114,51,1,114,51,2,114,51,3,114,51,4,116,76,112,1,112,20,112,1,131,243],
    [112,0,114,51,1,112,8,26,114,51,2,112,1,112,36,28,26,112,3,112,0,131,417],
    [112,2,114,51,1,112,8,26,114,51,2,112,2,112,36,28,26,112,9,112,0,131,417],
    [112,5,114,51,1,112,8,26,114,51,2,112,3,112,36,28,26,112,9,112,0,131,417],
    [112,7,114,51,1,112,8,26,114,51,2,112,4,112,36,28,26,112,9,112,0,131,417],
    [112,3,114,51,1,112,8,26,114,51,2,112,5,112,36,28,26,112,9,112,0,131,417],
    [112,1,114,51,1,112,142,26,114,51,2,112,2,112,36,28,26,112,9,112,0,131,417],
    [112,6,114,51,1,112,142,26,114,51,2,112,3,112,36,28,26,112,9,112,0,131,417],
    [112,8,114,51,1,112,142,26,114,51,2,112,4,112,36,28,26,112,9,112,0,131,417],
    [112,4,114,51,1,112,142,26,114,51,2,112,5,112,36,28,26,112,9,112,0,131,417],
    [140,51,134,132],
    [133,41],
    [139,52,6],
    [117,52,1,112,6,124,120,52,5,120,52,4,120,52,3,120,52,2,120,52,1],
    [114,52,5,112,0,32,129,851],
    [114,52,1,112,4,27,120,52,1],
    [114,52,2,112,8,27,120,52,2],
    [114,52,1,112,8,26,114,52,2,112,4,116,75,112,0,131,289],
    [114,52,1,112,76,26,114,52,2,112,4,116,69,112,1,112,0,131,278],
    [140,52,134,132],
    [133,42],
    [112,36,112,6,112,10,112,2,112,3,112,1,112,1,131,576],
    [112,280,112,2,112,34,112,0,112,2,112,16762880,112,6045747,112,12628016,112,1,112,1,131,152],
    [112,286,112,10,112,12,112,2,112,3,112,0,112,0,131,600],
    [112,546,112,10,112,10,112,4,112,3,112,0,112,0,131,616],
    [112,280,112,74,112,33,112,1,112,1,112,1,112,1,131,632],
    [112,810,112,40,112,2,112,3,112,2,112,1,112,1,131,652],
    [112,34,112,954,112,8,112,2,112,1,112,1,112,1,131,666],
    [112,372,112,956,112,11,112,2,112,1,112,1,112,1,131,677],
    [112,372,112,414,112,11,112,2,112,1,112,1,112,1,131,688],
    [112,750,112,954,112,10,112,0,112,1,112,1,112,1,131,699],
    [112,810,112,2,112,5,112,0,112,1,112,1,112,1,131,744],
    [113,75,112,1,32,129,868],
    [112,684,112,122,112,13,112,2,112,6,112,1,112,1,131,712],
    [134,132],
    [133,43],
    [112,36,112,6,112,10,112,2,112,1,131,757],
    [112,286,112,14,112,12,112,2,112,0,131,771],
    [112,546,112,14,112,10,112,4,112,0,131,780],
    [112,280,112,80,112,33,112,1,112,1,131,790],
    [112,810,112,36,112,2,112,3,112,1,131,803],
    [112,34,112,954,112,8,112,2,112,1,131,811],
    [112,750,112,954,112,10,112,0,112,1,131,819],
    [112,810,112,7,112,5,112,0,112,1,131,845],
    [113,75,112,1,32,129,880],
    [112,684,112,122,112,13,112,2,112,1,131,828],
    [134,132],
    [133,44],
    [139,55,10],
    [117,55,1,112,10,124,120,55,5,120,55,4,120,55,3,120,55,2,120,55,1],
    [113,307,114,55,1,112,1,27,2,127,26,4,122,112,1,32,129,916],
    [113,77,112,1,32,129,891],
    [112,180,120,55,8],
    [112,5,120,55,9],
    [112,2,120,55,10],
    [114,55,4,112,4,26,120,55,4],
    [128,894],
    [112,90,120,55,8],
    [112,10,120,55,9],
    [112,1,120,55,10],
    [114,55,3,87],
    [114,55,4,114,55,5,88],
    [112,90,83],
    [112,0,120,55,6],
    [112,0],
    [120,55,6,114,55,8],
    [114,55,6,37,129,911],
    [112,0,86],
    [114,55,9,91],
    [112,1,104],
    [112,90,93],
    [113,369,114,55,1,112,1,27,2,127,26,4,122,112,4,114,55,6,28,114,55,10,29,113,245,114,55,1,112,1,27,2,127,26,4,122,26,114,55,1,28,112,1,113,183,114,55,1,112,1,27,2,127,26,4,122,57,28,112,100,29,120,55,7],
    [114,55,7,91],
    [114,55,7,92],
    [112,1,104],
    [112,90,94],
    [114,55,6,4,128,899],
    [114,55,1,113,72,32,129,913],
    [112,4,85],
    [114,55,8,112,1,26,105],
    [114,55,1,113,72,32,129,916],
    [112,2,85],
    [140,55,134,132],
    [133,45],
    [139,56,12],
    [117,56,1,112,12,124,120,56,6,120,56,5,120,56,4,120,56,3,120,56,2,120,56,1],
    [114,56,4,87],
    [113,77,112,1,32,129,929],
    [112,180,120,56,10],
    [112,5,120,56,11],
    [112,2,120,56,12],
    [114,56,5,112,4,26,120,56,5],
    [112,2,85],
    [112,0,87],
    [128,933],
    [112,90,120,56,10],
    [112,10,120,56,11],
    [112,1,120,56,12],
    [112,2,85],
    [114,56,5,114,56,6,88],
    [112,90,83],
    [112,0,120,56,7],
    [112,0],
    [120,56,7,114,56,10],
    [114,56,7,37,129,964],
    [112,0,86],
    [114,56,11,91],
    [112,1,104],
    [112,-1,86],
    [112,90,93],
    [112,0,120,56,9],
    [112,1],
    [120,56,8,114,56,1],
    [114,56,8,37,129,951],
    [113,307,114,56,8,112,1,27,2,127,26,4,122,112,1,32,129,950],
    [114,56,9,113,369,114,56,8,112,1,27,2,127,26,4,122,112,4,114,56,7,28,114,56,12,29,113,245,114,56,8,112,1,27,2,127,26,4,122,26,114,56,8,28,112,1,113,183,114,56,8,112,1,27,2,127,26,4,122,57,28,112,100,29,26,120,56,9],
    [114,56,8,4,128,946],
    [113,73,112,0,35,129,954],
    [114,56,9,113,73,29,120,56,9],
    [128,956],
    [113,73,112,0,34,129,956],
    [114,56,9,113,73,24,28,120,56,9],
    [113,77,112,1,32,129,958],
    [112,0,86],
    [114,56,9,91],
    [114,56,9,92],
    [112,-1,86],
    [112,1,104],
    [112,90,94],
    [114,56,7,4,128,937],
    [114,56,10,112,1,26,105],
    [140,56,134,132],
    [133,46],
    [139,57,5],
    [117,57,1,112,5,124,120,57,4,120,57,3,120,57,2,120,57,1],
    [114,57,1,114,57,2,114,57,4,26,88],
    [112,10526880,87],
    [112,0,83],
    [112,1],
    [120,57,5,112,9],
    [114,57,5,37,129,990],
    [112,-1,86],
    [114,57,5,112,1,32,129,979],
    [112,4,85],
    [128,980],
    [112,2,85],
    [112,2,114,57,4,28,91],
    [112,2,114,57,4,28,92],
    [112,90,94],
    [112,0,86],
    [114,57,3,112,8,29,91],
    [114,57,5,112,2,31,112,1,32,129,987],
    [112,1,91],
    [112,-1,86],
    [112,90,93],
    [114,57,5,4,128,973],
    [140,57,134,132],
    [133,47],
    [139,58,6],
    [117,58,1,112,6,124,120,58,4,120,58,3,120,58,2,120,58,1],
    [112,50,120,58,6],
    [114,58,1,114,58,2,114,58,4,27,88],
    [112,10526880,87],
    [112,90,83],
    [112,1],
    [120,58,5,112,2,114,58,4,114,58,6,29,28,112,1,26],
    [114,58,5,37,129,1014],
    [114,58,5,114,58,4,114,58,6,29,112,1,26,32,129,1004],
    [112,4,85],
    [128,1005],
    [112,2,85],
    [112,-1,86],
    [114,58,3,91],
    [114,58,3,92],
    [112,90,94],
    [112,0,86],
    [114,58,6,91],
    [112,-1,86],
    [112,90,93],
    [114,58,5,4,128,999],
    [140,58,134,132],
    [133,48],
    [139,59,1],
    [117,59,1,112,1,124],
    [112,0,165],
    [112,2,119,71],
    [112,1,119,72],
    [112,1,119,73],
    [112,10,119,74],
    [112,0,119,75],
    [112,1,119,76],
    [112,0,119,77],
    [113,113,118,9,65,108,108,32,119,97,118,101,115,2,126,142],
    [113,74,131,208],
    [112,1],
    [120,59,1,112,60],
    [114,59,1,37,129,1035],
    [113,183,114,59,1,112,1,27,2,127,26,4,112,100,2,123],
    [113,245,114,59,1,112,1,27,2,127,26,4,112,0,2,123],
    [113,307,114,59,1,112,1,27,2,127,26,4,112,1,2,123],
    [114,59,1,4,128,1029],
    [140,59,134,132],
    [133,49],
    [139,60,1],
    [117,60,1,112,1,124],
    [112,30,112,460,112,940,112,540,112,12628016,112,0,112,12632256,112,1,131,133],
    [112,32,112,462,112,936,112,536,112,0,112,12628016,112,16777215,112,1,131,133],
    [112,50,112,730,112,900,112,250,131,966],
    [112,50,112,730,112,900,112,250,131,991],
    [113,71,112,100,112,0,112,4210752,112,40,112,730,131,917],
    [112,30,112,118,112,940,112,340,112,12628016,112,6045747,112,12632256,112,0,131,133],
    [112,32,112,120,112,936,112,336,112,6045747,112,12628016,112,16777147,112,1,131,133],
    [112,50,112,288,112,900,112,150,131,966],
    [112,50,112,288,112,900,112,150,131,991],
    [112,1],
    [120,60,1,113,71],
    [114,60,1,37,129,1053],
    [114,60,1,112,900,114,60,1,112,40,112,288,131,881],
    [114,60,1,4,128,1049],
    [140,60,134,132],
    [131,1015],
    [112,0,119,69],
    [112,0,146],
    [112,9596735,96],
    [131,1036],
    [131,854],
    [112,-1,146],
    [112,30,174],
    [112,-4,160,112,0,35,129,1061],
    [131,869],
    [113,69,112,1,32,129,1056],
    [130]
  ]
}
