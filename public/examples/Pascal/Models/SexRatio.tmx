{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"The sex ratio",
  "author":"Peter Millican",
  "date":"23/07/2020",
  "time":"11:59:11",
  "code":"PROGRAM SexRatio;\nCONST population = 1000;\n      matepergen = 400;\n      randomvar = 1;\n      leftmargin = 70;\n      topmargin = 20;\nVAR female: array[1..population] of boolean;\n    fop: array[1..population] of integer;\n    generation: integer;\n    n: integer;\n\n  Procedure axes;\n  Var i: integer;\n  Begin\n    for i := 1 to 9 do\n      begin\n        setxy(leftmargin + i * 100 - 25, topmargin + 800);\n        print(str(i * 100), 4, 20)\n      end;\n    for i := 2 to 10 do\n      begin\n        setxy(0, 1000 - i * 100);\n        colour(black);\n        print(str(i * 10) + '%', 4, 20);\n        movexy(leftmargin, topmargin);\n        colour(lightgrey);\n        drawxy(1000 - leftmargin, 0)\n      end;\n    setxy(leftmargin, topmargin);\n    colour(black);\n    drawxy(0, 800);\n    drawxy(1000 - leftmargin, 0);\n    colour(red);\n    setxy(50, 880);\n    print('Proportion of Females in Population, over 900 Generations', 4, 25);\n    setxy(50, 930);\n    print('with Female Offspring Probability genes initially set 90%+', 4, 25)\n  End;\n\n  Procedure graph;\n  Var females, n: integer;\n  Begin\n    females := 0;\n    for n := 1 to population do\n      if female[n] then\n        inc(females);\n    colour(red);\n    setxy(leftmargin + generation, topmargin + 1000 - females);\n    if generation > 0 then\n      polyline(2)\n  End;\n\n  Procedure domating;\n  Var a, b, replace: integer;\n      inherita: boolean;\n  Begin\n    repeat\n      a := random(population) + 1;\n      b := random(population) + 1\n    until female[a] <> female[b];\n    inherita := (random(2) = 0);\n    replace := random(population) + 1;\n    if inherita then\n      fop[replace] := fop[a]\n    else\n      fop[replace] := fop[b];\n    female[replace] := fop[replace] > random(1000);\n    fop[replace] := fop[replace] + random(randomvar * 20 + 1) - randomvar * 10;\n    fop[replace] := max(0, min(1000, fop[replace]))\n  End;\n\nBEGIN\n  axes;\n  for n := 1 to population do\n    begin\n      female[n] := (random(2) = 0);\n      fop[n] := 900 + random(101)\n    end;\n  generation := 0;\n  repeat\n    graph;\n    inc(generation);\n    for n := 1 to matepergen do\n      domating\n  until generation = 900\nEND.",
  "usage":[
    {
      "category": "Turtle: relative movement",
      "expressions":[
        {"name":"drawxy", "level":2, "count":3, "lines":"27 31 32"},
        {"name":"movexy", "level":2, "count":1, "lines":"25"}
      ],
      "total":4
    },
    {
      "category": "Turtle: absolute movement",
      "expressions":[
        {"name":"setxy", "level":1, "count":6, "lines":"17 22 29 34 36 48"}
      ],
      "total":6
    },
    {
      "category": "Turtle: drawing shapes",
      "expressions":[
        {"name":"polyline", "level":2, "count":1, "lines":"50"}
      ],
      "total":1
    },
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"colour", "level":1, "count":5, "lines":"23 26 30 33 47"}
      ],
      "total":5
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"inc", "level":1, "count":2, "lines":"46 82"},
        {"name":"max", "level":2, "count":1, "lines":"69"},
        {"name":"min", "level":2, "count":1, "lines":"69"},
        {"name":"random", "level":2, "count":8, "lines":"58 59 61 62 67 68 76 77"}
      ],
      "total":12
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"print", "level":1, "count":4, "lines":"18 24 35 37"}
      ],
      "total":4
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"str", "level":1, "count":2, "lines":"18 24"}
      ],
      "total":2
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":3, "lines":"45 49 63"},
        {"name":"else", "level":1, "count":1, "lines":"65"},
        {"name":"for", "level":1, "count":5, "lines":"15 20 44 74 83"},
        {"name":"repeat", "level":2, "count":2, "lines":"57 80"},
        {"name":"procedure", "level":2, "count":3, "lines":"12 40 53"}
      ],
      "total":14
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"axes", "level":0, "count":1, "lines":"73"},
        {"name":"graph", "level":0, "count":1, "lines":"81"},
        {"name":"domating", "level":0, "count":1, "lines":"84"}
      ],
      "total":3
    }
  ],
  "pcode":[
    [112,15,1,1,112,0,123,112,6,2,123,4,112,2012,124,112,2027,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [116,23,119,22],
    [112,1000,119,23],
    [116,1025,119,1024],
    [112,1000,119,1025],
    [128,68],
    [133,1],
    [139,12,1],
    [117,12,1,112,1,124],
    [112,1],
    [120,12,1,112,9],
    [114,12,1,37,129,17],
    [112,70,114,12,1,112,100,28,26,112,25,27,112,20,112,800,26,88],
    [114,12,1,112,100,28,11,112,4,112,20,168,142],
    [114,12,1,4,128,12],
    [112,2],
    [120,12,1,112,10],
    [114,12,1,37,129,27],
    [112,0,112,1000,114,12,1,112,100,28,27,88],
    [112,0,87],
    [114,12,1,112,10,28,11,112,37,9,64,112,4,112,20,168,142],
    [112,70,112,20,89],
    [112,10526880,87],
    [112,1000,112,70,27,112,0,90],
    [114,12,1,4,128,18],
    [112,70,112,20,88],
    [112,0,87],
    [112,0,112,800,90],
    [112,1000,112,70,27,112,0,90],
    [112,16711680,87],
    [112,50,112,880,88],
    [118,57,80,114,111,112,111,114,116,105,111,110,32,111,102,32,70,101,109,97,108,101,115,32,105,110,32,80,111,112,117,108,97,116,105,111,110,44,32,111,118,101,114,32,57,48,48,32,71,101,110,101,114,97,116,105,111,110,115,112,4,112,25,168,142],
    [112,50,112,930,88],
    [118,58,119,105,116,104,32,70,101,109,97,108,101,32,79,102,102,115,112,114,105,110,103,32,80,114,111,98,97,98,105,108,105,116,121,32,103,101,110,101,115,32,105,110,105,116,105,97,108,108,121,32,115,101,116,32,57,48,37,43,112,4,112,25,168,142],
    [140,12,134,132],
    [133,2],
    [139,13,2],
    [117,13,1,112,2,124],
    [112,0,120,13,1],
    [112,1],
    [120,13,2,112,1000],
    [114,13,2,37,129,47],
    [113,22,114,13,2,112,1,27,2,127,26,4,122,129,46],
    [117,13,1,1,122,4,2,123],
    [114,13,2,4,128,42],
    [112,16711680,87],
    [112,70,113,2026,26,112,20,112,1000,26,114,13,1,27,88],
    [113,2026,112,0,35,129,51],
    [112,2,105],
    [140,13,134,132],
    [133,3],
    [139,14,4],
    [117,14,1,112,4,124],
    [112,1000,7,112,1,26,120,14,1],
    [112,1000,7,112,1,26,120,14,2],
    [113,22,114,14,1,112,1,27,2,127,26,4,122,113,22,114,14,2,112,1,27,2,127,26,4,122,33,129,55],
    [112,2,7,112,0,32,120,14,4],
    [112,1000,7,112,1,26,120,14,3],
    [114,14,4,129,63],
    [113,1024,114,14,3,112,1,27,2,127,26,4,113,1024,114,14,1,112,1,27,2,127,26,4,122,2,123],
    [128,64],
    [113,1024,114,14,3,112,1,27,2,127,26,4,113,1024,114,14,2,112,1,27,2,127,26,4,122,2,123],
    [113,22,114,14,3,112,1,27,2,127,26,4,113,1024,114,14,3,112,1,27,2,127,26,4,122,112,1000,7,35,2,123],
    [113,1024,114,14,3,112,1,27,2,127,26,4,113,1024,114,14,3,112,1,27,2,127,26,4,122,112,1,112,20,28,112,1,26,7,26,112,1,112,10,28,27,2,123],
    [113,1024,114,14,3,112,1,27,2,127,26,4,112,0,112,1000,113,1024,114,14,3,112,1,27,2,127,26,4,122,39,38,2,123],
    [140,14,134,132],
    [131,8],
    [112,1],
    [119,2027,112,1000],
    [113,2027,37,129,75],
    [113,22,113,2027,112,1,27,2,127,26,4,112,2,7,112,0,32,2,123],
    [113,1024,113,2027,112,1,27,2,127,26,4,112,900,112,101,7,26,2,123],
    [113,2027,4,128,70],
    [112,0,119,2026],
    [131,37],
    [116,2026,1,122,4,2,123],
    [112,1],
    [119,2027,112,400],
    [113,2027,37,129,83],
    [131,52],
    [113,2027,4,128,79],
    [113,2026,112,900,32,129,76],
    [130]
  ]
}
