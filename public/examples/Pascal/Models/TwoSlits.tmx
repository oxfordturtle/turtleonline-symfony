{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Interference from two slits",
  "author":"Peter Millican",
  "date":"23/07/2020",
  "time":"11:59:15",
  "code":"PROGRAM TwoSlits;\nCONST sectors = 7;\n      wavelength = 100;\n      sourcey = 730;\n      source1x = 275;\n      source2x = 725;\nVAR lampx: integer;\n    x, y: integer;\n    disty, dist1, dist2: integer;\n    wave1, wave2: integer;\n    waveaddi, waveaddj, waveadd: integer;\n    angleadd: integer;\n    sectcol: array[0..sectors] of integer;\n    boundary: array[0..sectors] of integer;\n\n  Procedure colsetup;\n  Var n: integer;\n  Begin\n    sectcol[0] := violet;\n    sectcol[1] := blue;\n    sectcol[2] := cyan;\n    sectcol[3] := lime;\n    sectcol[4] := yellow;\n    sectcol[5] := orange;\n    sectcol[6] := red;\n    sectcol[7] := violet;\n    for n := 0 to sectors do\n      boundary[n] := divmult(360, sectors, n)\n  End;\n\n  Function wavecolour(n: integer): integer;\n  Var col1, col2: integer;\n      mix1, mix2: integer;\n  Begin\n    col2 := 0;\n    repeat\n      inc(col2)\n    until boundary[col2] >= n;\n    col1 := col2 - 1;\n    result := mixcols(sectcol[col1], sectcol[col2], boundary[col2] - n, n - boundary[col1])\n  End;\n\n  Procedure background;\n  Var n: integer;\n      diagx, diag: integer;\n  Begin\n    lampx := (source1x + source2x) / 2;\n    blank(black);\n    colour(white);\n    thickness(5);\n    setxy(0, 733);\n    drawxy(1000, 0);\n    setxy(source1x, 732);\n    for dist1 := 1 to 4 do\n      begin\n        colour(wavecolour(wavelength - dist1));\n        drawxy(0, 1)\n      end;\n    diagx := lampx - source1x;\n    diag := hypot(diagx, 250, 1);\n    for n := 1 to 250 do\n      begin\n        dist1 := divmult(diag, 250, n);\n        wave1 := wavelength - ((dist1 + 5) mod wavelength);\n        colour(wavecolour(divmult(wave1, wavelength, 360)));\n        drawxy(source1x + divmult(diagx, 250, n) - turtx, 1)\n      end;\n    setxy(source2x, 732);\n    for dist2 := 1 to 4 do\n      begin\n        colour(wavecolour(wavelength - dist2));\n        drawxy(0, 1)\n      end;\n    diagx := source2x - lampx;\n    diag := hypot(diagx, 250, 1);\n    for n := 1 to 250 do\n      begin\n        dist2 := divmult(diag, 250, n);\n        wave2 := wavelength - ((dist2 + 5) mod wavelength);\n        colour(wavecolour(divmult(wave2, wavelength, 360)));\n        drawxy(source2x - divmult(diagx, 250, n) - turtx, 1)\n      end;\n    colour(yellow);\n    setxy(lampx, 984);\n    blot(10)\n  End;\n\nBEGIN\n  colsetup;\n  background;\n  noupdate;\n  for y := 0 to sourcey do\n    begin\n      disty := sourcey - y;\n      for x := 0 to 999 do\n        begin\n          dist1 := hypot(x - source1x, disty, 1);\n          dist2 := hypot(x - source2x, disty, 1);\n          wave1 := dist1 mod wavelength;\n          wave2 := dist2 mod wavelength;\n          waveaddi := sin(wave1 * 360, wavelength, 500) + sin(wave2 * 360, wavelength, 500);\n          waveaddj := cos(wave1 * 360, wavelength, 500) + cos(wave2 * 360, wavelength, 500);\n          waveadd := hypot(waveaddi, waveaddj, 1);\n          angleadd := (arctan(waveaddi, waveaddj, 1) + 360) mod 360;\n          pixset(x, y, mixcols(wavecolour(angleadd), black, waveadd, 1000 - waveadd))\n        end\n    end\nEND.",
  "usage":[
    {
      "category": "Turtle: relative movement",
      "expressions":[
        {"name":"drawxy", "level":2, "count":5, "lines":"52 57 66 72 81"}
      ],
      "total":5
    },
    {
      "category": "Turtle: absolute movement",
      "expressions":[
        {"name":"setxy", "level":1, "count":4, "lines":"51 53 68 84"}
      ],
      "total":4
    },
    {
      "category": "Turtle: drawing shapes",
      "expressions":[
        {"name":"blot", "level":1, "count":1, "lines":"85"}
      ],
      "total":1
    },
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"colour", "level":1, "count":6, "lines":"49 56 65 71 80 83"},
        {"name":"thickness", "level":1, "count":1, "lines":"50"},
        {"name":"mixcols", "level":3, "count":2, "lines":"40 105"}
      ],
      "total":9
    },
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"blank", "level":1, "count":1, "lines":"48"},
        {"name":"noupdate", "level":1, "count":1, "lines":"91"},
        {"name":"pixset", "level":3, "count":1, "lines":"105"}
      ],
      "total":3
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"inc", "level":1, "count":1, "lines":"37"},
        {"name":"hypot", "level":2, "count":5, "lines":"60 75 97 98 103"},
        {"name":"divmult", "level":3, "count":7, "lines":"28 63 65 66 78 80 81"}
      ],
      "total":13
    },
    {
      "category": "Trig / exp / log functions",
      "expressions":[
        {"name":"cos", "level":2, "count":2, "lines":"102 102"},
        {"name":"sin", "level":2, "count":2, "lines":"101 101"},
        {"name":"arctan", "level":3, "count":1, "lines":"104"}
      ],
      "total":5
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"for", "level":1, "count":7, "lines":"27 54 61 69 76 92 95"},
        {"name":"repeat", "level":2, "count":1, "lines":"36"},
        {"name":"procedure", "level":2, "count":2, "lines":"16 43"},
        {"name":"function", "level":3, "count":1, "lines":"31"}
      ],
      "total":11
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"wavecolour", "level":0, "count":5, "lines":"56 65 71 80 105"},
        {"name":"colsetup", "level":0, "count":1, "lines":"89"},
        {"name":"background", "level":0, "count":1, "lines":"90"}
      ],
      "total":7
    }
  ],
  "pcode":[
    [112,16,1,1,112,0,123,112,6,2,123,4,112,38,124,112,54,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [116,36,119,35],
    [112,8,119,36],
    [116,46,119,45],
    [112,8,119,46],
    [128,85],
    [133,1],
    [139,12,1],
    [117,12,1,112,1,124],
    [113,35,112,0,2,127,26,4,112,9055202,2,123],
    [113,35,112,1,2,127,26,4,112,255,2,123],
    [113,35,112,2,2,127,26,4,112,65535,2,123],
    [113,35,112,3,2,127,26,4,112,65280,2,123],
    [113,35,112,4,2,127,26,4,112,16776960,2,123],
    [113,35,112,5,2,127,26,4,112,16755200,2,123],
    [113,35,112,6,2,127,26,4,112,16711680,2,123],
    [113,35,112,7,2,127,26,4,112,9055202,2,123],
    [112,0],
    [120,12,1,112,7],
    [114,12,1,37,129,24],
    [113,45,114,12,1,2,127,26,4,112,360,112,7,114,12,1,48,2,123],
    [114,12,1,4,128,20],
    [140,12,134,132],
    [133,2],
    [139,13,6],
    [117,13,1,112,6,124,120,13,2],
    [112,0,120,13,4],
    [117,13,4,1,122,4,2,123],
    [113,45,114,13,4,2,127,26,4,122,114,13,2,37,129,29],
    [114,13,4,112,1,27,120,13,3],
    [113,35,114,13,3,2,127,26,4,122,113,35,114,13,4,2,127,26,4,122,113,45,114,13,4,2,127,26,4,122,114,13,2,27,114,13,2,113,45,114,13,3,2,127,26,4,122,27,102,120,13,1],
    [113,13,119,15,140,13,134,132],
    [133,3],
    [139,14,3],
    [117,14,1,112,3,124],
    [112,275,112,725,26,112,2,29,119,23],
    [112,0,96],
    [112,16777215,87],
    [112,5,85],
    [112,0,112,733,88],
    [112,1000,112,0,90],
    [112,275,112,732,88],
    [112,1],
    [119,27,112,4],
    [113,27,37,129,51],
    [112,100,113,27,27,131,25],
    [114,15,1,87],
    [112,0,112,1,90],
    [113,27,4,128,45],
    [113,23,112,275,27,120,14,2],
    [114,14,2,112,250,112,1,50,120,14,3],
    [112,1],
    [120,14,1,112,250],
    [114,14,1,37,129,62],
    [114,14,3,112,250,114,14,1,48,119,27],
    [112,100,113,27,112,5,26,112,100,31,27,119,29],
    [113,29,112,100,112,360,48,131,25],
    [114,15,1,87],
    [112,275,114,14,2,112,250,114,14,1,48,26,113,17,27,112,1,90],
    [114,14,1,4,128,54],
    [112,725,112,732,88],
    [112,1],
    [119,28,112,4],
    [113,28,37,129,70],
    [112,100,113,28,27,131,25],
    [114,15,1,87],
    [112,0,112,1,90],
    [113,28,4,128,64],
    [112,725,113,23,27,120,14,2],
    [114,14,2,112,250,112,1,50,120,14,3],
    [112,1],
    [120,14,1,112,250],
    [114,14,1,37,129,81],
    [114,14,3,112,250,114,14,1,48,119,28],
    [112,100,113,28,112,5,26,112,100,31,27,119,30],
    [113,30,112,100,112,360,48,131,25],
    [114,15,1,87],
    [112,725,114,14,2,112,250,114,14,1,48,27,113,17,27,112,1,90],
    [114,14,1,4,128,73],
    [112,16776960,87],
    [113,23,112,984,88],
    [112,10,108],
    [140,14,134,132],
    [131,8],
    [131,34],
    [112,0,146],
    [112,0],
    [119,25,112,730],
    [113,25,37,129,107],
    [112,730,113,25,27,119,26],
    [112,0],
    [119,24,112,999],
    [113,24,37,129,106],
    [113,24,112,275,27,113,26,112,1,50,119,27],
    [113,24,112,725,27,113,26,112,1,50,119,28],
    [113,27,112,100,31,119,29],
    [113,28,112,100,31,119,30],
    [113,29,112,360,28,112,100,112,500,57,113,30,112,360,28,112,100,112,500,57,26,119,31],
    [113,29,112,360,28,112,100,112,500,58,113,30,112,360,28,112,100,112,500,58,26,119,32],
    [113,31,113,32,112,1,50,119,33],
    [113,31,113,32,112,1,62,112,360,26,112,360,31,119,34],
    [113,24,113,25,113,34,131,25],
    [114,15,1,112,0,113,33,112,1000,113,33,27,102,100],
    [113,24,4,128,93],
    [113,25,4,128,89],
    [130]
  ]
}
