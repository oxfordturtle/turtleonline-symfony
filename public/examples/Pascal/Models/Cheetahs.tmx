{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Cheetahs and Gazelles",
  "author":"Peter Millican",
  "date":"28/07/2020",
  "time":"13:24:05",
  "code":"PROGRAM Cheetahs;\nCONST maxanimals=500;\n      mingazelles=10;\n      startcheetahs=50;\n      startgazelles=50;\n      maxspeed=1000;\n      startslow=30;\n      startfast=70;\n      randmarginc=10;\n      randmarging=10;\n      huntingtries=100;\n      catchmargin=5;\n      cfoodadd=40;\n      cbreedfood=10;\n      cmatingratio=2;\n      gmatingratio=1;\n      chuntingratio=1;\n      slowage=100;\n      agefactor=0;\n      graphleft=60;\n      graphwidth=900;\n      graphheight=400;\n      cgraphbase=450;\n      ggraphbase=950;\n      ymax=20;\nVAR gen,cnum,gnum: integer;\n    cspeed,gspeed,cgenspeed,ggenspeed,cage,gage,cfood: array[1..maxanimals] of integer;\n    cspeednum,gspeednum: array[0..maxspeed] of integer;\n\n Procedure setup;\n Var n: integer;\n Begin\n  for n:=0 to maxspeed do\n   begin\n    cspeednum[n]:=0;\n    gspeednum[n]:=0\n   end;\n  cnum:=startcheetahs;\n  gnum:=startgazelles;\n  for n:=1 to cnum do\n   begin\n    cgenspeed[n]:=random(startfast+1-startslow)+startslow;\n    cspeed[n]:=cgenspeed[n];\n    cage[n]:=random(slowage);\n    cfood[n]:=random(cfoodadd)+1;\n    inc(cspeednum[cspeed[n]])\n   end;\n  for n:=cnum+1 to maxanimals do\n   cspeed[n]:=0;\n  for n:=1 to gnum do\n   begin\n    ggenspeed[n]:=random(startfast+1-startslow)+startslow;\n    gspeed[n]:=ggenspeed[n];\n    gage[n]:=random(slowage);\n    inc(gspeednum[gspeed[n]])\n   end;\n  for n:=gnum+1 to maxanimals do\n   gspeed[n]:=0\n End;\n\n Procedure axes(graphbase: integer);\n Var n: integer;\n     scale: integer;\n Begin\n  colour(black);\n  setxy(graphleft,graphbase-graphheight);\n  drawxy(0,graphheight);\n  drawxy(graphwidth,0);\n  for n:=0 to 10 do\n   begin\n    setxy(20,graphbase-n*graphheight/10-19);\n    print(str(n*ymax/10),0,20)\n   end;\n  for n:=1 to 10 do\n   begin\n    setxy(graphleft+n*graphwidth/10-20,graphbase);\n    print(str(n*maxspeed/10),0,20)\n   end\n End;\n\n Procedure graph;\n Var n,ctotal,gtotal: integer;\n Begin\n  noupdate;\n  blank(white);\n  axes(450);\n  axes(950);\n  setxy(200,20);\n  colour(red);\n  print('Speed Distribution of Cheetahs',4,25);\n  setxy(750,20);\n  print(str(cnum),4,25);\n  ctotal:=0;\n  for n:=1 to maxspeed do\n   begin\n    setxy(graphleft+n*graphwidth/maxspeed,450);\n    drawxy(0,-graphheight*cspeednum[n]/ymax);\n    ctotal:=ctotal+n*cspeednum[n]\n   end;\n  setxy(200,520);\n  colour(green);\n  print('Speed Distribution of Gazelles',4,25);\n  setxy(750,520);\n  print(str(gnum),4,25);\n  gtotal:=0;\n  for n:=1 to maxspeed do\n   begin\n    setxy(graphleft+n*graphwidth/maxspeed,950);\n    drawxy(0,-graphheight*gspeednum[n]/ymax);\n    gtotal:=gtotal+n*gspeednum[n]\n   end;\n  setxy(850,20);\n  if cnum<1 then\n   begin\n    setxy(150,200);\n    colour(magenta);\n    print('All Cheetahs Have Died',4,50);\n    halt\n   end;\n  print(qstr(ctotal,cnum,2),4,25);\n  setxy(850,520);\n  print(qstr(gtotal,gnum,2),4,25);\n  update;\n  write(str(gen));\n  write(' - c=');\n  write(str(cnum));\n  write(' (av=');\n  write(qstr(ctotal,cnum,2));\n  writeln(')');\n  update;\n  noupdate;\n  write('     g=');\n  write(str(gnum));\n  write(' (av=');\n  write(qstr(gtotal,gnum,2));\n  writeln(')')\n End;\n\n Procedure deadcheetah(c: integer);\n Begin\n  dec(cspeednum[cspeed[c]]);\n  cspeed[c]:=0;\n  dec(cnum)\n End;\n\n Procedure deadgazelle(g: integer);\n Begin\n  dec(gspeednum[gspeed[g]]);\n  gspeed[g]:=0;\n  dec(gnum)\n End;\n\n Procedure babycheetah(speed: integer);\n Var b: integer;\n Begin\n  b:=0;\n  repeat\n   inc(b)\n  until (cspeed[b]=0) or (b=maxanimals);\n  if cspeed[b]=0 then\n   begin\n    inc(cnum);\n    cgenspeed[b]:=speed+random(2*randmarginc+1)-randmarginc;\n    cgenspeed[b]:=max(1,min(maxspeed,cgenspeed[b]));\n    cspeed[b]:=cgenspeed[b];\n    cage[b]:=0;\n    cfood[b]:=cfoodadd;\n    inc(cspeednum[cspeed[b]])\n   end\n End;\n\n Procedure babygazelle(speed: integer);\n Var b: integer;\n Begin\n  b:=0;\n  repeat\n   inc(b)\n  until (gspeed[b]=0) or (b=maxanimals);\n  if gspeed[b]=0 then\n   begin\n    inc(gnum);\n    ggenspeed[b]:=speed+random(2*randmarging+1)-randmarging;\n    ggenspeed[b]:=max(1,min(maxspeed,ggenspeed[b]));\n    gspeed[b]:=ggenspeed[b];\n    gage[b]:=0;\n    inc(gspeednum[gspeed[b]])\n   end\n End;\n\n Procedure generation;\n Var n: integer;\n     c,g,s,b: integer;\n     tries: integer;\n Begin\n  for c:=1 to cnum/chuntingratio do\n   begin\n    c:=random(maxanimals)+1;\n    if (cspeed[c]>0) and (gnum>mingazelles) then\n     begin\n      tries:=0;\n      repeat\n       inc(tries);\n       g:=random(maxanimals)+1\n      until (gspeed[g]>0) or (tries=huntingtries);\n      if (gspeed[g]>0) and (cspeed[c]>=gspeed[g]+catchmargin) then\n       begin\n        deadgazelle(g);\n        cfood[c]:=cfood[c]+cfoodadd\n       end\n     end\n   end;\n  for n:=1 to cnum/cmatingratio do\n   begin\n    c:=random(maxanimals)+1;\n    if (cnum<maxanimals) and (cspeed[c]>0) and (cfood[c]>=cbreedfood) then\n     begin\n      babycheetah(cgenspeed[c]);\n      cfood[c]:=cfood[c]-cbreedfood\n     end\n   end;\n  for n:=1 to gnum/gmatingratio do\n   begin\n    g:=random(maxanimals)+1;\n    if (gnum<maxanimals) and (gspeed[g]>0) then\n     babygazelle(ggenspeed[g])\n   end;\n  for n:=1 to maxanimals do\n   begin\n    if cspeed[n]>0 then\n     begin\n      inc(cage[n]);\n      if cage[n]>slowage then\n       begin\n        dec(cspeednum[cspeed[n]]);\n        cspeed[n]:=cspeed[n]*agefactor/100;\n        inc(cspeednum[cspeed[n]]);\n        if cspeed[n]=0 then\n         deadcheetah(n)\n       end;\n      dec(cfood[n]);\n      if cfood[n]<0 then\n       deadcheetah(n)\n     end;\n    if gspeed[n]>0 then\n     begin\n      inc(gage[n]);\n      if gage[n]>slowage then\n       begin\n        dec(gspeednum[gspeed[n]]);\n        gspeed[n]:=gspeed[n]*agefactor/100;\n        inc(gspeednum[gspeed[n]]);\n        if gspeed[n]=0 then\n         deadgazelle(n)\n       end\n     end\n   end\n End;\n\nBEGIN\n setup;\n graph;\n gen:=0;\n repeat\n  inc(gen);\n  generation;\n  graph\n until 0=1\nEND.",
  "usage":[
    {
      "category": "Turtle: relative movement",
      "expressions":[
        {"name":"drawxy", "level":2, "count":4, "lines":"67 68 97 109"}
      ],
      "total":4
    },
    {
      "category": "Turtle: absolute movement",
      "expressions":[
        {"name":"setxy", "level":1, "count":12, "lines":"66 71 76 88 91 96 100 103 108 112 115 121"}
      ],
      "total":12
    },
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"colour", "level":1, "count":4, "lines":"65 89 101 116"}
      ],
      "total":4
    },
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"blank", "level":1, "count":1, "lines":"85"},
        {"name":"noupdate", "level":1, "count":2, "lines":"84 131"},
        {"name":"update", "level":1, "count":2, "lines":"123 130"}
      ],
      "total":5
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"dec", "level":1, "count":7, "lines":"141 143 148 150 234 240 249"},
        {"name":"inc", "level":1, "count":14, "lines":"46 55 158 162 168 177 181 186 202 231 236 246 251 264"},
        {"name":"max", "level":2, "count":2, "lines":"164 183"},
        {"name":"min", "level":2, "count":2, "lines":"164 183"},
        {"name":"random", "level":2, "count":11, "lines":"42 44 45 52 54 163 182 197 203 214 223"}
      ],
      "total":36
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"print", "level":1, "count":9, "lines":"72 77 90 92 102 104 117 120 122"},
        {"name":"write", "level":1, "count":9, "lines":"124 125 126 127 128 132 133 134 135"},
        {"name":"writeln", "level":1, "count":2, "lines":"129 136"}
      ],
      "total":20
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"str", "level":1, "count":7, "lines":"72 77 92 104 124 126 133"},
        {"name":"qstr", "level":2, "count":4, "lines":"120 122 128 135"}
      ],
      "total":11
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"halt", "level":1, "count":1, "lines":"118"}
      ],
      "total":1
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":14, "lines":"113 160 179 198 205 215 224 229 232 237 241 244 247 252"},
        {"name":"for", "level":1, "count":13, "lines":"33 40 48 50 57 69 74 94 106 195 212 221 227"},
        {"name":"repeat", "level":2, "count":4, "lines":"157 176 201 263"},
        {"name":"procedure", "level":2, "count":8, "lines":"30 61 81 139 146 153 172 190"}
      ],
      "total":39
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"axes", "level":0, "count":2, "lines":"86 87"},
        {"name":"deadgazelle", "level":0, "count":2, "lines":"207 253"},
        {"name":"babycheetah", "level":0, "count":1, "lines":"217"},
        {"name":"babygazelle", "level":0, "count":1, "lines":"225"},
        {"name":"deadcheetah", "level":0, "count":2, "lines":"238 242"},
        {"name":"setup", "level":0, "count":1, "lines":"260"},
        {"name":"graph", "level":0, "count":2, "lines":"261 266"},
        {"name":"generation", "level":0, "count":1, "lines":"265"}
      ],
      "total":12
    }
  ],
  "pcode":[
    [112,20,1,1,112,0,123,112,6,2,123,4,112,5529,124,112,5549,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [116,31,119,30],
    [112,500,119,31],
    [116,533,119,532],
    [112,500,119,533],
    [116,1035,119,1034],
    [112,500,119,1035],
    [116,1537,119,1536],
    [112,500,119,1537],
    [116,2039,119,2038],
    [112,500,119,2039],
    [116,2541,119,2540],
    [112,500,119,2541],
    [116,3043,119,3042],
    [112,500,119,3043],
    [116,3545,119,3544],
    [112,1001,119,3545],
    [116,4548,119,4547],
    [112,1001,119,4548],
    [128,236],
    [133,1],
    [139,12,1],
    [117,12,1,112,1,124],
    [112,0],
    [120,12,1,112,1000],
    [114,12,1,37,129,31],
    [113,3544,114,12,1,2,127,26,4,112,0,2,123],
    [113,4547,114,12,1,2,127,26,4,112,0,2,123],
    [114,12,1,4,128,26],
    [112,50,119,28],
    [112,50,119,29],
    [112,1],
    [120,12,1,113,28],
    [114,12,1,37,129,42],
    [113,1034,114,12,1,112,1,27,2,127,26,4,112,70,112,1,26,112,30,27,7,112,30,26,2,123],
    [113,30,114,12,1,112,1,27,2,127,26,4,113,1034,114,12,1,112,1,27,2,127,26,4,122,2,123],
    [113,2038,114,12,1,112,1,27,2,127,26,4,112,100,7,2,123],
    [113,3042,114,12,1,112,1,27,2,127,26,4,112,40,7,112,1,26,2,123],
    [113,3544,113,30,114,12,1,112,1,27,2,127,26,4,122,2,127,26,4,1,122,4,2,123],
    [114,12,1,4,128,34],
    [113,28,112,1,26],
    [120,12,1,112,500],
    [114,12,1,37,129,47],
    [113,30,114,12,1,112,1,27,2,127,26,4,112,0,2,123],
    [114,12,1,4,128,43],
    [112,1],
    [120,12,1,113,29],
    [114,12,1,37,129,55],
    [113,1536,114,12,1,112,1,27,2,127,26,4,112,70,112,1,26,112,30,27,7,112,30,26,2,123],
    [113,532,114,12,1,112,1,27,2,127,26,4,113,1536,114,12,1,112,1,27,2,127,26,4,122,2,123],
    [113,2540,114,12,1,112,1,27,2,127,26,4,112,100,7,2,123],
    [113,4547,113,532,114,12,1,112,1,27,2,127,26,4,122,2,127,26,4,1,122,4,2,123],
    [114,12,1,4,128,48],
    [113,29,112,1,26],
    [120,12,1,112,500],
    [114,12,1,37,129,60],
    [113,532,114,12,1,112,1,27,2,127,26,4,112,0,2,123],
    [114,12,1,4,128,56],
    [140,12,134,132],
    [133,2],
    [139,13,3],
    [117,13,1,112,3,124,120,13,1],
    [112,0,87],
    [112,60,114,13,1,112,400,27,88],
    [112,0,112,400,90],
    [112,900,112,0,90],
    [112,0],
    [120,13,2,112,10],
    [114,13,2,37,129,74],
    [112,20,114,13,1,114,13,2,112,400,28,112,10,29,27,112,19,27,88],
    [114,13,2,112,20,28,112,10,29,11,112,0,112,20,168,142],
    [114,13,2,4,128,69],
    [112,1],
    [120,13,2,112,10],
    [114,13,2,37,129,80],
    [112,60,114,13,2,112,900,28,112,10,29,26,112,20,27,114,13,1,88],
    [114,13,2,112,1000,28,112,10,29,11,112,0,112,20,168,142],
    [114,13,2,4,128,75],
    [140,13,134,132],
    [133,3],
    [139,14,3],
    [117,14,1,112,3,124],
    [112,0,146],
    [112,16777215,96],
    [112,450,131,61],
    [112,950,131,61],
    [112,200,112,20,88],
    [112,16711680,87],
    [118,30,83,112,101,101,100,32,68,105,115,116,114,105,98,117,116,105,111,110,32,111,102,32,67,104,101,101,116,97,104,115,112,4,112,25,168,142],
    [112,750,112,20,88],
    [113,28,11,112,4,112,25,168,142],
    [112,0,120,14,2],
    [112,1],
    [120,14,1,112,1000],
    [114,14,1,37,129,101],
    [112,60,114,14,1,112,900,28,112,1000,29,26,112,450,88],
    [112,0,112,400,23,113,3544,114,14,1,2,127,26,4,122,28,112,20,29,90],
    [114,14,2,114,14,1,113,3544,114,14,1,2,127,26,4,122,28,26,120,14,2],
    [114,14,1,4,128,95],
    [112,200,112,520,88],
    [112,2263842,87],
    [118,30,83,112,101,101,100,32,68,105,115,116,114,105,98,117,116,105,111,110,32,111,102,32,71,97,122,101,108,108,101,115,112,4,112,25,168,142],
    [112,750,112,520,88],
    [113,29,11,112,4,112,25,168,142],
    [112,0,120,14,3],
    [112,1],
    [120,14,1,112,1000],
    [114,14,1,37,129,114],
    [112,60,114,14,1,112,900,28,112,1000,29,26,112,950,88],
    [112,0,112,400,23,113,4547,114,14,1,2,127,26,4,122,28,112,20,29,90],
    [114,14,3,114,14,1,113,4547,114,14,1,2,127,26,4,122,28,26,120,14,3],
    [114,14,1,4,128,108],
    [112,850,112,20,88],
    [113,28,112,1,34,129,120],
    [112,150,112,200,88],
    [112,16711935,87],
    [118,22,65,108,108,32,67,104,101,101,116,97,104,115,32,72,97,118,101,32,68,105,101,100,112,4,112,50,168,142],
    [130],
    [114,14,2,113,28,112,2,14,112,4,112,25,168,142],
    [112,850,112,520,88],
    [114,14,3,113,29,112,2,14,112,4,112,25,168,142],
    [112,-1,146],
    [113,27,11,169,142],
    [118,5,32,45,32,99,61,169,142],
    [113,28,11,169,142],
    [118,5,32,40,97,118,61,169,142],
    [114,14,2,113,28,112,2,14,169,142],
    [112,41,9,169,170,142],
    [112,-1,146],
    [112,0,146],
    [118,7,32,32,32,32,32,103,61,169,142],
    [113,29,11,169,142],
    [118,5,32,40,97,118,61,169,142],
    [114,14,3,113,29,112,2,14,169,142],
    [112,41,9,169,170,142],
    [140,14,134,132],
    [133,4],
    [139,15,1],
    [117,15,1,112,1,124,120,15,1],
    [113,3544,113,30,114,15,1,112,1,27,2,127,26,4,122,2,127,26,4,1,122,5,2,123],
    [113,30,114,15,1,112,1,27,2,127,26,4,112,0,2,123],
    [116,28,1,122,5,2,123],
    [140,15,134,132],
    [133,5],
    [139,16,1],
    [117,16,1,112,1,124,120,16,1],
    [113,4547,113,532,114,16,1,112,1,27,2,127,26,4,122,2,127,26,4,1,122,5,2,123],
    [113,532,114,16,1,112,1,27,2,127,26,4,112,0,2,123],
    [116,29,1,122,5,2,123],
    [140,16,134,132],
    [133,6],
    [139,17,2],
    [117,17,1,112,2,124,120,17,1],
    [112,0,120,17,2],
    [117,17,2,1,122,4,2,123],
    [113,30,114,17,2,112,1,27,2,127,26,4,122,112,0,32,114,17,2,112,500,32,18,129,156],
    [113,30,114,17,2,112,1,27,2,127,26,4,122,112,0,32,129,166],
    [116,28,1,122,4,2,123],
    [113,1034,114,17,2,112,1,27,2,127,26,4,114,17,1,112,2,112,10,28,112,1,26,7,26,112,10,27,2,123],
    [113,1034,114,17,2,112,1,27,2,127,26,4,112,1,112,1000,113,1034,114,17,2,112,1,27,2,127,26,4,122,39,38,2,123],
    [113,30,114,17,2,112,1,27,2,127,26,4,113,1034,114,17,2,112,1,27,2,127,26,4,122,2,123],
    [113,2038,114,17,2,112,1,27,2,127,26,4,112,0,2,123],
    [113,3042,114,17,2,112,1,27,2,127,26,4,112,40,2,123],
    [113,3544,113,30,114,17,2,112,1,27,2,127,26,4,122,2,127,26,4,1,122,4,2,123],
    [140,17,134,132],
    [133,7],
    [139,18,2],
    [117,18,1,112,2,124,120,18,1],
    [112,0,120,18,2],
    [117,18,2,1,122,4,2,123],
    [113,532,114,18,2,112,1,27,2,127,26,4,122,112,0,32,114,18,2,112,500,32,18,129,171],
    [113,532,114,18,2,112,1,27,2,127,26,4,122,112,0,32,129,180],
    [116,29,1,122,4,2,123],
    [113,1536,114,18,2,112,1,27,2,127,26,4,114,18,1,112,2,112,10,28,112,1,26,7,26,112,10,27,2,123],
    [113,1536,114,18,2,112,1,27,2,127,26,4,112,1,112,1000,113,1536,114,18,2,112,1,27,2,127,26,4,122,39,38,2,123],
    [113,532,114,18,2,112,1,27,2,127,26,4,113,1536,114,18,2,112,1,27,2,127,26,4,122,2,123],
    [113,2540,114,18,2,112,1,27,2,127,26,4,112,0,2,123],
    [113,4547,113,532,114,18,2,112,1,27,2,127,26,4,122,2,127,26,4,1,122,4,2,123],
    [140,18,134,132],
    [133,8],
    [139,19,6],
    [117,19,1,112,6,124],
    [112,1],
    [120,19,2,113,28,112,1,29],
    [114,19,2,37,129,197],
    [112,500,7,112,1,26,120,19,2],
    [113,30,114,19,2,112,1,27,2,127,26,4,122,112,0,35,113,29,112,10,35,17,129,196],
    [112,0,120,19,6],
    [117,19,6,1,122,4,2,123],
    [112,500,7,112,1,26,120,19,3],
    [113,532,114,19,3,112,1,27,2,127,26,4,122,112,0,35,114,19,6,112,100,32,18,129,190],
    [113,532,114,19,3,112,1,27,2,127,26,4,122,112,0,35,113,30,114,19,2,112,1,27,2,127,26,4,122,113,532,114,19,3,112,1,27,2,127,26,4,122,112,5,26,37,17,129,196],
    [114,19,3,131,145],
    [113,3042,114,19,2,112,1,27,2,127,26,4,113,3042,114,19,2,112,1,27,2,127,26,4,122,112,40,26,2,123],
    [114,19,2,4,128,185],
    [112,1],
    [120,19,1,113,28,112,2,29],
    [114,19,1,37,129,205],
    [112,500,7,112,1,26,120,19,2],
    [113,28,112,500,34,113,30,114,19,2,112,1,27,2,127,26,4,122,112,0,35,17,113,3042,114,19,2,112,1,27,2,127,26,4,122,112,10,37,17,129,204],
    [113,1034,114,19,2,112,1,27,2,127,26,4,122,131,152],
    [113,3042,114,19,2,112,1,27,2,127,26,4,113,3042,114,19,2,112,1,27,2,127,26,4,122,112,10,27,2,123],
    [114,19,1,4,128,198],
    [112,1],
    [120,19,1,113,29,112,1,29],
    [114,19,1,37,129,212],
    [112,500,7,112,1,26,120,19,3],
    [113,29,112,500,34,113,532,114,19,3,112,1,27,2,127,26,4,122,112,0,35,17,129,211],
    [113,1536,114,19,3,112,1,27,2,127,26,4,122,131,167],
    [114,19,1,4,128,206],
    [112,1],
    [120,19,1,112,500],
    [114,19,1,37,129,235],
    [113,30,114,19,1,112,1,27,2,127,26,4,122,112,0,35,129,226],
    [113,2038,114,19,1,112,1,27,2,127,26,4,1,122,4,2,123],
    [113,2038,114,19,1,112,1,27,2,127,26,4,122,112,100,35,129,223],
    [113,3544,113,30,114,19,1,112,1,27,2,127,26,4,122,2,127,26,4,1,122,5,2,123],
    [113,30,114,19,1,112,1,27,2,127,26,4,113,30,114,19,1,112,1,27,2,127,26,4,122,112,0,28,112,100,29,2,123],
    [113,3544,113,30,114,19,1,112,1,27,2,127,26,4,122,2,127,26,4,1,122,4,2,123],
    [113,30,114,19,1,112,1,27,2,127,26,4,122,112,0,32,129,223],
    [114,19,1,131,138],
    [113,3042,114,19,1,112,1,27,2,127,26,4,1,122,5,2,123],
    [113,3042,114,19,1,112,1,27,2,127,26,4,122,112,0,34,129,226],
    [114,19,1,131,138],
    [113,532,114,19,1,112,1,27,2,127,26,4,122,112,0,35,129,234],
    [113,2540,114,19,1,112,1,27,2,127,26,4,1,122,4,2,123],
    [113,2540,114,19,1,112,1,27,2,127,26,4,122,112,100,35,129,234],
    [113,4547,113,532,114,19,1,112,1,27,2,127,26,4,122,2,127,26,4,1,122,5,2,123],
    [113,532,114,19,1,112,1,27,2,127,26,4,113,532,114,19,1,112,1,27,2,127,26,4,122,112,0,28,112,100,29,2,123],
    [113,4547,113,532,114,19,1,112,1,27,2,127,26,4,122,2,127,26,4,1,122,4,2,123],
    [113,532,114,19,1,112,1,27,2,127,26,4,122,112,0,32,129,234],
    [114,19,1,131,145],
    [114,19,1,4,128,213],
    [140,19,134,132],
    [131,22],
    [131,81],
    [112,0,119,27],
    [116,27,1,122,4,2,123],
    [131,181],
    [131,81],
    [112,0,112,1,32,129,239],
    [130]
  ]
}
