{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Flocking behaviour",
  "author":"Peter Millican",
  "date":"28/07/2020",
  "time":"13:24:06",
  "code":"PROGRAM Flocking;\nCONST numboids=30;\n      boidradius=20;\n      maxspeed=50;\n      boidcolour=lightbrown;\n      halocolour=#FFFFFE;\n      delay=50;\n      posfactor=50;\n      velfactor=50;\n      neard=200;\n      nearfactor=10;\n      tgtradius=2000;\nVAR boidx,boidy,boidvx,boidvy: array[1..numboids] of integer;\n    avgx,avgy,avgvx,avgvy: integer;\n    tgtx,tgty,tgtangvel: integer;\n    n: integer;\n    cycle: integer;\n\n Procedure setup;\n Var n: integer;\n Begin\n  penup;\n  colour(halocolour);\n  for n:=1 to numboids do\n   begin\n    repeat\n     boidx[n]:=random(5000-2*boidradius)+boidradius;\n     boidy[n]:=random(5000-2*boidradius)+boidradius\n    until pixcol(boidx[n],boidy[n])=white;\n    boidvx[n]:=random(maxspeed*2+1)-maxspeed;\n    boidvy[n]:=random(maxspeed*2+1)-maxspeed;\n    setxy(boidx[n],boidy[n]);\n    blot(2*boidradius)\n   end\n End;\n\n Procedure draw(positive: boolean);\n Var n: integer;\n Begin\n  if positive then\n   colour(boidcolour)\n  else\n   colour(white);\n  for n:=1 to numboids do\n   begin\n    setxy(boidx[n],boidy[n]);\n    blot(boidradius)\n   end\n End;\n\n Procedure averages;\n Var totalx,totaly,totalvx,totalvy: integer;\n     n: integer;\n Begin\n  totalx:=0;\n  totaly:=0;\n  totalvx:=0;\n  totalvy:=0;\n  for n:=1 to numboids do\n   begin\n    totalx:=totalx+boidx[n];\n    totaly:=totaly+boidy[n];\n    totalvx:=totalvx+boidvx[n];\n    totalvy:=totalvy+boidvy[n]\n   end;\n  avgx:=totalx/numboids;\n  avgy:=totaly/numboids;\n  avgvx:=totalvx/numboids;\n  avgvy:=totalvy/numboids\n End;\n\n Procedure settarget;\n Begin\n  if cycle mod 100=0 then\n   tgtangvel:=random(7)-3;\n  tgtx:=divmult(sin(cycle*tgtangvel,1,1000),1000,tgtradius);\n  tgty:=-divmult(cos(cycle*tgtangvel,1,1000),1000,tgtradius);\n  inc(cycle)\n End;\n\n Procedure move(b: integer);\n Var n: integer;\n     distx,disty,speed: integer;\n Begin\n  boidvx[b]:=boidvx[b]+(avgx-boidx[b])/posfactor+(avgvx-boidvx[b])/velfactor;\n  boidvy[b]:=boidvy[b]+(avgy-boidy[b])/posfactor+(avgvy-boidvy[b])/velfactor;\n  for n:=1 to numboids do\n   if n<>b then\n    begin\n     distx:=boidx[n]-boidx[b];\n     disty:=boidy[n]-boidy[b];\n     if hypot(distx,disty,1)<neard then\n      begin\n       boidvx[b]:=boidvx[b]-sign(distx)*(neard-abs(distx))/nearfactor;\n       boidvy[b]:=boidvy[b]-sign(disty)*(neard-abs(disty))/nearfactor\n      end\n    end;\n  if random(10)=0 then\n   begin\n    boidvx[b]:=tgtx-boidx[b];\n    boidvy[b]:=tgty-boidy[b]\n   end;\n  speed:=hypot(boidvx[b],boidvy[b],1);\n  if speed>maxspeed then\n   begin\n    boidvx[b]:=divmult(boidvx[b],speed,maxspeed);\n    boidvy[b]:=divmult(boidvy[b],speed,maxspeed)\n   end;\n  boidx[b]:=boidx[b]+boidvx[b];\n  boidy[b]:=boidy[b]+boidvy[b]\n End;\n\nBEGIN\n canvas(-2500,-2500,5000,5000);\n noupdate;\n setup;\n blank(white);\n draw(true);\n cycle:=0;\n repeat\n  averages;\n  settarget;\n  noupdate;\n  draw(false);\n  for n:=1 to numboids do\n   move(n);\n  draw(true);\n  update;\n  pause(delay)\n until 0=1\nEND.",
  "usage":[
    {
      "category": "Turtle: absolute movement",
      "expressions":[
        {"name":"setxy", "level":1, "count":2, "lines":"32 46"}
      ],
      "total":2
    },
    {
      "category": "Turtle: drawing shapes",
      "expressions":[
        {"name":"blot", "level":1, "count":2, "lines":"33 47"}
      ],
      "total":2
    },
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"colour", "level":1, "count":3, "lines":"23 41 43"},
        {"name":"penup", "level":1, "count":1, "lines":"22"}
      ],
      "total":4
    },
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"blank", "level":1, "count":1, "lines":"117"},
        {"name":"noupdate", "level":1, "count":2, "lines":"115 123"},
        {"name":"update", "level":1, "count":1, "lines":"128"},
        {"name":"canvas", "level":2, "count":1, "lines":"114"},
        {"name":"pixcol", "level":3, "count":1, "lines":"29"}
      ],
      "total":6
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"abs", "level":1, "count":2, "lines":"94 95"},
        {"name":"inc", "level":1, "count":1, "lines":"78"},
        {"name":"hypot", "level":2, "count":2, "lines":"92 103"},
        {"name":"random", "level":2, "count":6, "lines":"27 28 30 31 75 98"},
        {"name":"sign", "level":2, "count":2, "lines":"94 95"},
        {"name":"divmult", "level":3, "count":4, "lines":"76 77 106 107"}
      ],
      "total":17
    },
    {
      "category": "Trig / exp / log functions",
      "expressions":[
        {"name":"cos", "level":2, "count":1, "lines":"77"},
        {"name":"sin", "level":2, "count":1, "lines":"76"}
      ],
      "total":2
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"pause", "level":1, "count":1, "lines":"129"}
      ],
      "total":1
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":6, "lines":"40 74 88 92 98 104"},
        {"name":"else", "level":1, "count":1, "lines":"42"},
        {"name":"for", "level":1, "count":5, "lines":"24 44 59 87 125"},
        {"name":"repeat", "level":2, "count":2, "lines":"26 120"},
        {"name":"procedure", "level":2, "count":5, "lines":"19 37 51 72 81"}
      ],
      "total":19
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"setup", "level":0, "count":1, "lines":"116"},
        {"name":"draw", "level":0, "count":3, "lines":"118 124 127"},
        {"name":"averages", "level":0, "count":1, "lines":"121"},
        {"name":"settarget", "level":0, "count":1, "lines":"122"},
        {"name":"move", "level":0, "count":1, "lines":"126"}
      ],
      "total":7
    }
  ],
  "pcode":[
    [112,17,1,1,112,0,123,112,6,2,123,4,112,143,124,112,160,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [116,25,119,24],
    [112,30,119,25],
    [116,57,119,56],
    [112,30,119,57],
    [116,89,119,88],
    [112,30,119,89],
    [116,121,119,120],
    [112,30,119,121],
    [128,95],
    [133,1],
    [139,12,1],
    [117,12,1,112,1,124],
    [112,0,86],
    [112,16777214,87],
    [112,1],
    [120,12,1,112,30],
    [114,12,1,37,129,28],
    [113,24,114,12,1,112,1,27,2,127,26,4,112,5000,112,2,112,20,28,27,7,112,20,26,2,123],
    [113,56,114,12,1,112,1,27,2,127,26,4,112,5000,112,2,112,20,28,27,7,112,20,26,2,123],
    [113,24,114,12,1,112,1,27,2,127,26,4,122,113,56,114,12,1,112,1,27,2,127,26,4,122,99,112,16777215,32,129,20],
    [113,88,114,12,1,112,1,27,2,127,26,4,112,50,112,2,28,112,1,26,7,112,50,27,2,123],
    [113,120,114,12,1,112,1,27,2,127,26,4,112,50,112,2,28,112,1,26,7,112,50,27,2,123],
    [113,24,114,12,1,112,1,27,2,127,26,4,122,113,56,114,12,1,112,1,27,2,127,26,4,122,88],
    [112,2,112,20,28,108],
    [114,12,1,4,128,18],
    [140,12,134,132],
    [133,2],
    [139,13,2],
    [117,13,1,112,2,124,120,13,1],
    [114,13,1,129,35],
    [112,11567184,87],
    [128,36],
    [112,16777215,87],
    [112,1],
    [120,13,2,112,30],
    [114,13,2,37,129,42],
    [113,24,114,13,2,112,1,27,2,127,26,4,122,113,56,114,13,2,112,1,27,2,127,26,4,122,88],
    [112,20,108],
    [114,13,2,4,128,37],
    [140,13,134,132],
    [133,3],
    [139,14,5],
    [117,14,1,112,5,124],
    [112,0,120,14,1],
    [112,0,120,14,2],
    [112,0,120,14,3],
    [112,0,120,14,4],
    [112,1],
    [120,14,5,112,30],
    [114,14,5,37,129,58],
    [114,14,1,113,24,114,14,5,112,1,27,2,127,26,4,122,26,120,14,1],
    [114,14,2,113,56,114,14,5,112,1,27,2,127,26,4,122,26,120,14,2],
    [114,14,3,113,88,114,14,5,112,1,27,2,127,26,4,122,26,120,14,3],
    [114,14,4,113,120,114,14,5,112,1,27,2,127,26,4,122,26,120,14,4],
    [114,14,5,4,128,51],
    [114,14,1,112,30,29,119,152],
    [114,14,2,112,30,29,119,153],
    [114,14,3,112,30,29,119,154],
    [114,14,4,112,30,29,119,155],
    [140,14,134,132],
    [133,4],
    [113,160,112,100,31,112,0,32,129,66],
    [112,7,7,112,3,27,119,158],
    [113,160,113,158,28,112,1,112,1000,57,112,1000,112,2000,48,119,156],
    [113,160,113,158,28,112,1,112,1000,58,112,1000,112,2000,48,23,119,157],
    [116,160,1,122,4,2,123],
    [134,132],
    [133,5],
    [139,16,5],
    [117,16,1,112,5,124,120,16,1],
    [113,88,114,16,1,112,1,27,2,127,26,4,113,88,114,16,1,112,1,27,2,127,26,4,122,113,152,113,24,114,16,1,112,1,27,2,127,26,4,122,27,112,50,29,26,113,154,113,88,114,16,1,112,1,27,2,127,26,4,122,27,112,50,29,26,2,123],
    [113,120,114,16,1,112,1,27,2,127,26,4,113,120,114,16,1,112,1,27,2,127,26,4,122,113,153,113,56,114,16,1,112,1,27,2,127,26,4,122,27,112,50,29,26,113,155,113,120,114,16,1,112,1,27,2,127,26,4,122,27,112,50,29,26,2,123],
    [112,1],
    [120,16,2,112,30],
    [114,16,2,37,129,85],
    [114,16,2,114,16,1,33,129,84],
    [113,24,114,16,2,112,1,27,2,127,26,4,122,113,24,114,16,1,112,1,27,2,127,26,4,122,27,120,16,3],
    [113,56,114,16,2,112,1,27,2,127,26,4,122,113,56,114,16,1,112,1,27,2,127,26,4,122,27,120,16,4],
    [114,16,3,114,16,4,112,1,50,112,200,34,129,84],
    [113,88,114,16,1,112,1,27,2,127,26,4,113,88,114,16,1,112,1,27,2,127,26,4,122,114,16,3,25,112,200,114,16,3,24,27,28,112,10,29,27,2,123],
    [113,120,114,16,1,112,1,27,2,127,26,4,113,120,114,16,1,112,1,27,2,127,26,4,122,114,16,4,25,112,200,114,16,4,24,27,28,112,10,29,27,2,123],
    [114,16,2,4,128,76],
    [112,10,7,112,0,32,129,88],
    [113,88,114,16,1,112,1,27,2,127,26,4,113,156,113,24,114,16,1,112,1,27,2,127,26,4,122,27,2,123],
    [113,120,114,16,1,112,1,27,2,127,26,4,113,157,113,56,114,16,1,112,1,27,2,127,26,4,122,27,2,123],
    [113,88,114,16,1,112,1,27,2,127,26,4,122,113,120,114,16,1,112,1,27,2,127,26,4,122,112,1,50,120,16,5],
    [114,16,5,112,50,35,129,92],
    [113,88,114,16,1,112,1,27,2,127,26,4,113,88,114,16,1,112,1,27,2,127,26,4,122,114,16,5,112,50,48,2,123],
    [113,120,114,16,1,112,1,27,2,127,26,4,113,120,114,16,1,112,1,27,2,127,26,4,122,114,16,5,112,50,48,2,123],
    [113,24,114,16,1,112,1,27,2,127,26,4,113,24,114,16,1,112,1,27,2,127,26,4,122,113,88,114,16,1,112,1,27,2,127,26,4,122,26,2,123],
    [113,56,114,16,1,112,1,27,2,127,26,4,113,56,114,16,1,112,1,27,2,127,26,4,122,113,120,114,16,1,112,1,27,2,127,26,4,122,26,2,123],
    [140,16,134,132],
    [112,2500,23,112,2500,23,112,5000,112,5000,144],
    [112,0,146],
    [131,12],
    [112,16777215,96],
    [112,-1,131,29],
    [112,0,119,160],
    [131,43],
    [131,63],
    [112,0,146],
    [112,0,131,29],
    [112,1],
    [119,159,112,30],
    [113,159,37,129,110],
    [113,159,131,70],
    [113,159,4,128,106],
    [112,-1,131,29],
    [112,-1,146],
    [112,50,174],
    [112,0,112,1,32,129,101],
    [130]
  ]
}
