{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Game of Life, using arrays",
  "author":"Peter Millican",
  "date":"23/07/2020",
  "time":"11:59:08",
  "code":"PROGRAM LifeArrays;\nCONST width = 32;\n      height = 32;\nVAR x, y, i, j, livenb: integer;\n    thisgen: array[0..width - 1, 0..height - 1] of boolean;\n    nextgen: array[0..width - 1, 0..height - 1] of boolean;\nBEGIN\n  canvas(0, 0, width, height);\n  resolution(width, height);\n  for x := 0 to width - 1 do\n    for y := 0 to height - 1 do\n      nextgen[x, y] := (random(7) = 0);\n  while ?key <> \\escape do\n    begin\n      noupdate;\n      for x := 0 to width - 1 do\n        for y := 0 to height - 1 do\n          begin\n            thisgen[x, y] := nextgen[x, y];\n            if thisgen[x, y] then\n              pixset(x, y, maroon)\n            else\n              pixset(x, y, lightgreen)\n          end;\n      update;\n      for x := 0 to width - 1 do\n        for y := 0 to height - 1 do\n          begin\n            livenb := 0;\n            for i := -1 to 1 do\n              for j := -1 to 1 do\n                if thisgen[(x + i + width) mod width, (y + j + height) mod height] then\n                  inc(livenb);\n            if thisgen[x, y] then\n              nextgen[x, y] := ((livenb = 3) or (livenb = 4))\n            else\n              nextgen[x, y] := (livenb = 3)\n          end\n    end\nEND.",
  "usage":[
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"noupdate", "level":1, "count":1, "lines":"15"},
        {"name":"update", "level":1, "count":1, "lines":"25"},
        {"name":"canvas", "level":2, "count":1, "lines":"8"},
        {"name":"resolution", "level":2, "count":1, "lines":"9"},
        {"name":"pixset", "level":3, "count":2, "lines":"21 23"}
      ],
      "total":6
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"inc", "level":1, "count":1, "lines":"33"},
        {"name":"random", "level":2, "count":1, "lines":"12"}
      ],
      "total":2
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":3, "lines":"20 32 34"},
        {"name":"else", "level":1, "count":2, "lines":"22 36"},
        {"name":"for", "level":1, "count":8, "lines":"10 11 16 17 26 27 30 31"},
        {"name":"while", "level":2, "count":1, "lines":"13"}
      ],
      "total":14
    }
  ],
  "pcode":[
    [112,12,1,1,112,0,123,112,6,2,123,4,112,2191,124,112,2203,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [116,25,119,24],
    [112,32,119,25,116,58,119,26],
    [112,32,119,58,116,91,119,27],
    [112,32,119,91,116,124,119,28],
    [112,32,119,124,116,157,119,29],
    [112,32,119,157,116,190,119,30],
    [112,32,119,190,116,223,119,31],
    [112,32,119,223,116,256,119,32],
    [112,32,119,256,116,289,119,33],
    [112,32,119,289,116,322,119,34],
    [112,32,119,322,116,355,119,35],
    [112,32,119,355,116,388,119,36],
    [112,32,119,388,116,421,119,37],
    [112,32,119,421,116,454,119,38],
    [112,32,119,454,116,487,119,39],
    [112,32,119,487,116,520,119,40],
    [112,32,119,520,116,553,119,41],
    [112,32,119,553,116,586,119,42],
    [112,32,119,586,116,619,119,43],
    [112,32,119,619,116,652,119,44],
    [112,32,119,652,116,685,119,45],
    [112,32,119,685,116,718,119,46],
    [112,32,119,718,116,751,119,47],
    [112,32,119,751,116,784,119,48],
    [112,32,119,784,116,817,119,49],
    [112,32,119,817,116,850,119,50],
    [112,32,119,850,116,883,119,51],
    [112,32,119,883,116,916,119,52],
    [112,32,119,916,116,949,119,53],
    [112,32,119,949,116,982,119,54],
    [112,32,119,982,116,1015,119,55],
    [112,32,119,1015,116,1048,119,56],
    [112,32,119,1048,116,1081,119,57],
    [112,32,119,1081],
    [116,1115,119,1114],
    [112,32,119,1115,116,1148,119,1116],
    [112,32,119,1148,116,1181,119,1117],
    [112,32,119,1181,116,1214,119,1118],
    [112,32,119,1214,116,1247,119,1119],
    [112,32,119,1247,116,1280,119,1120],
    [112,32,119,1280,116,1313,119,1121],
    [112,32,119,1313,116,1346,119,1122],
    [112,32,119,1346,116,1379,119,1123],
    [112,32,119,1379,116,1412,119,1124],
    [112,32,119,1412,116,1445,119,1125],
    [112,32,119,1445,116,1478,119,1126],
    [112,32,119,1478,116,1511,119,1127],
    [112,32,119,1511,116,1544,119,1128],
    [112,32,119,1544,116,1577,119,1129],
    [112,32,119,1577,116,1610,119,1130],
    [112,32,119,1610,116,1643,119,1131],
    [112,32,119,1643,116,1676,119,1132],
    [112,32,119,1676,116,1709,119,1133],
    [112,32,119,1709,116,1742,119,1134],
    [112,32,119,1742,116,1775,119,1135],
    [112,32,119,1775,116,1808,119,1136],
    [112,32,119,1808,116,1841,119,1137],
    [112,32,119,1841,116,1874,119,1138],
    [112,32,119,1874,116,1907,119,1139],
    [112,32,119,1907,116,1940,119,1140],
    [112,32,119,1940,116,1973,119,1141],
    [112,32,119,1973,116,2006,119,1142],
    [112,32,119,2006,116,2039,119,1143],
    [112,32,119,2039,116,2072,119,1144],
    [112,32,119,2072,116,2105,119,1145],
    [112,32,119,2105,116,2138,119,1146],
    [112,32,119,2138,116,2171,119,1147],
    [112,32,119,2171],
    [112,0,112,0,112,32,112,32,144],
    [112,32,112,32,145],
    [112,0],
    [119,19,112,32,112,1,27],
    [113,19,37,129,82],
    [112,0],
    [119,20,112,32,112,1,27],
    [113,20,37,129,81],
    [113,1114,113,19,2,127,26,4,122,113,20,2,127,26,4,112,7,7,112,0,32,2,123],
    [113,20,4,128,77],
    [113,19,4,128,74],
    [112,-9,160,112,27,33,129,122],
    [112,0,146],
    [112,0],
    [119,19,112,32,112,1,27],
    [113,19,37,129,97],
    [112,0],
    [119,20,112,32,112,1,27],
    [113,20,37,129,96],
    [113,24,113,19,2,127,26,4,122,113,20,2,127,26,4,113,1114,113,19,2,127,26,4,122,113,20,2,127,26,4,122,2,123],
    [113,24,113,19,2,127,26,4,122,113,20,2,127,26,4,122,129,94],
    [113,19,113,20,112,8388608,100],
    [128,95],
    [113,19,113,20,112,10025880,100],
    [113,20,4,128,88],
    [113,19,4,128,85],
    [112,-1,146],
    [112,0],
    [119,19,112,32,112,1,27],
    [113,19,37,129,121],
    [112,0],
    [119,20,112,32,112,1,27],
    [113,20,37,129,120],
    [112,0,119,23],
    [112,1,23],
    [119,21,112,1],
    [113,21,37,129,115],
    [112,1,23],
    [119,22,112,1],
    [113,22,37,129,114],
    [113,24,113,19,113,21,26,112,32,26,112,32,31,2,127,26,4,122,113,20,113,22,26,112,32,26,112,32,31,2,127,26,4,122,129,113],
    [116,23,1,122,4,2,123],
    [113,22,4,128,109],
    [113,21,4,128,106],
    [113,24,113,19,2,127,26,4,122,113,20,2,127,26,4,122,129,118],
    [113,1114,113,19,2,127,26,4,122,113,20,2,127,26,4,113,23,112,3,32,113,23,112,4,32,18,2,123],
    [128,119],
    [113,1114,113,19,2,127,26,4,122,113,20,2,127,26,4,113,23,112,3,32,2,123],
    [113,20,4,128,102],
    [113,19,4,128,99],
    [128,82],
    [130]
  ]
}
