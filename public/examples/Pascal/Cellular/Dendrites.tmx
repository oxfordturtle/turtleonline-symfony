{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Dendritic crystal growth",
  "author":"Peter Millican",
  "date":"28/07/2020",
  "time":"13:24:00",
  "code":"PROGRAM Dendrites;\nCONST half=100;\n      crystal=cyan;\n      molecule=white;\n      solution=teal;\n      initrandomradius=10;\n      maxdistance=75;\n      cyclemod=5;\n      moddelay=0;\nVAR whole,randomradius,maxsofar: integer;\n    cycle: integer;\n    numattached: integer;\n\n Function attached(x,y: integer): boolean;\n Begin\n  result:=false;\n  if (pixcol(x-1,y)=crystal) or (pixcol(x+1,y)=crystal) or (pixcol(x,y-1)=crystal) or (pixcol(x,y+1)=crystal)\n     then\n   begin\n    result:=true;\n    pixset(x,y,crystal);\n    inc(numattached);\n    if hypot(x,y,1)>=maxsofar then\n     maxsofar:=hypot(x,y,1)\n   end\n End;\n\n Procedure randomwalk;\n Var n: integer;\n Begin\n  repeat\n   n:=random(4)*2+1;\n   turtx:=turtx+n div 3-1;\n   turty:=turty+n mod 3-1;\n   if pixcol(turtx,turty)=black then\n    begin\n     turtx:=turtx-2*(n div 3-1);\n     turty:=turty-2*(n mod 3-1)\n    end\n  until pixcol(turtx,turty)=solution\n End;\n\n Procedure biasedwalk;\n Var distance,turn,range: integer;\n Begin\n  turnxy(-turtx,-turty);\n  distance:=hypot(turtx,turty,1);\n  if distance<randomradius then\n   direction(random(360))\n  else\n   begin\n    range:=divmult(half-distance,half-randomradius,180);\n    turn:=random(range*2)-range;\n    right(turn)\n   end;\n  repeat\n   forward(1)\n  until pixcol(turtx,turty)=solution\n End;\n\nBEGIN\n whole:=half*2+3;\n canvas(-half,-half,whole,whole);\n resolution(whole,whole);\n penup;\n setxy(-half,-half);\n box(whole,whole,solution,true);\n randomradius:=initrandomradius;\n writeln('Initial randomradius = '+str(randomradius));\n pixset(0,0,crystal);\n numattached:=1;\n writeln('Counting molecules within growing crystal:');\n write('1 ');\n maxsofar:=1;\n timeset(0);\n repeat\n  home;\n  direction(random(360));\n  forward(half);\n  if pixcol(turtx,turty)<>solution then\n   randomwalk;\n  cycle:=0;\n  while not(attached(turtx,turty)) do\n   begin\n    pixset(turtx,turty,molecule);\n    if cycle mod cyclemod=0 then\n     begin\n      update;\n      if moddelay>0 then\n       pause(moddelay);\n      noupdate\n     end;\n    inc(cycle);\n    pixset(turtx,turty,solution);\n    biasedwalk\n   end;\n  if numattached mod 10=0 then\n   writeln(str(numattached))\n  else\n   write(str(numattached)+' ');\n  if maxsofar>randomradius then\n   begin\n    randomradius:=maxsofar;\n    writeln('');\n    writeln('randomradius = '+str(randomradius))\n   end\n until maxsofar>=maxdistance;\n writeln('Simulation finished ('+qstr(time,1000,2)+' seconds)')\nEND.",
  "usage":[
    {
      "category": "Turtle: relative movement",
      "expressions":[
        {"name":"forward", "level":1, "count":2, "lines":"57 79"},
        {"name":"right", "level":1, "count":1, "lines":"54"}
      ],
      "total":3
    },
    {
      "category": "Turtle: absolute movement",
      "expressions":[
        {"name":"direction", "level":1, "count":2, "lines":"49 78"},
        {"name":"home", "level":1, "count":1, "lines":"77"},
        {"name":"setxy", "level":1, "count":1, "lines":"66"},
        {"name":"turnxy", "level":2, "count":1, "lines":"46"}
      ],
      "total":5
    },
    {
      "category": "Turtle: drawing shapes",
      "expressions":[
        {"name":"box", "level":2, "count":1, "lines":"67"}
      ],
      "total":1
    },
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"penup", "level":1, "count":1, "lines":"65"}
      ],
      "total":1
    },
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"noupdate", "level":1, "count":1, "lines":"91"},
        {"name":"update", "level":1, "count":1, "lines":"88"},
        {"name":"canvas", "level":2, "count":1, "lines":"63"},
        {"name":"resolution", "level":2, "count":1, "lines":"64"},
        {"name":"pixcol", "level":3, "count":8, "lines":"17 17 17 17 35 40 58 80"},
        {"name":"pixset", "level":3, "count":4, "lines":"21 70 85 94"}
      ],
      "total":16
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"inc", "level":1, "count":2, "lines":"22 93"},
        {"name":"hypot", "level":2, "count":3, "lines":"23 24 47"},
        {"name":"random", "level":2, "count":4, "lines":"32 49 53 78"},
        {"name":"divmult", "level":3, "count":1, "lines":"52"}
      ],
      "total":10
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"write", "level":1, "count":2, "lines":"73 100"},
        {"name":"writeln", "level":1, "count":6, "lines":"69 72 98 104 105 108"}
      ],
      "total":8
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"str", "level":1, "count":4, "lines":"69 98 100 105"},
        {"name":"qstr", "level":2, "count":1, "lines":"108"}
      ],
      "total":5
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"pause", "level":1, "count":1, "lines":"90"},
        {"name":"time", "level":2, "count":1, "lines":"108"},
        {"name":"timeset", "level":2, "count":1, "lines":"75"}
      ],
      "total":3
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":9, "lines":"17 23 35 48 80 86 89 97 101"},
        {"name":"else", "level":1, "count":2, "lines":"50 99"},
        {"name":"repeat", "level":2, "count":3, "lines":"31 56 76"},
        {"name":"while", "level":2, "count":1, "lines":"83"},
        {"name":"procedure", "level":2, "count":2, "lines":"28 43"},
        {"name":"function", "level":3, "count":1, "lines":"14"}
      ],
      "total":18
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"randomwalk", "level":0, "count":1, "lines":"81"},
        {"name":"attached", "level":0, "count":1, "lines":"83"},
        {"name":"biasedwalk", "level":0, "count":1, "lines":"95"}
      ],
      "total":3
    }
  ],
  "pcode":[
    [112,16,1,1,112,0,123,112,6,2,123,4,112,11,124,112,27,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [128,40],
    [133,1],
    [139,12,3],
    [117,12,1,112,3,124,120,12,3,120,12,2],
    [112,0,120,12,1],
    [114,12,2,112,1,27,114,12,3,99,112,65535,32,114,12,2,112,1,26,114,12,3,99,112,65535,32,18,114,12,2,114,12,3,112,1,27,99,112,65535,32,18,114,12,2,114,12,3,112,1,26,99,112,65535,32,18,129,14],
    [112,-1,120,12,1],
    [114,12,2,114,12,3,112,65535,100],
    [116,27,1,122,4,2,123],
    [114,12,2,114,12,3,112,1,50,113,25,37,129,14],
    [114,12,2,114,12,3,112,1,50,119,25],
    [113,12,119,15,140,12,134,132],
    [133,2],
    [139,13,1],
    [117,13,1,112,1,124],
    [112,4,7,112,2,28,112,1,26,120,13,1],
    [113,17,114,13,1,112,3,30,26,112,1,27,119,17],
    [113,18,114,13,1,112,3,31,26,112,1,27,119,18],
    [113,17,113,18,99,112,0,32,129,24],
    [113,17,112,2,114,13,1,112,3,30,112,1,27,28,27,119,17],
    [113,18,112,2,114,13,1,112,3,31,112,1,27,28,27,119,18],
    [113,17,113,18,99,112,32896,32,129,18],
    [140,13,134,132],
    [133,3],
    [139,14,3],
    [117,14,1,112,3,124],
    [113,17,23,113,18,23,95],
    [113,17,113,18,112,1,50,120,14,1],
    [114,14,1,113,24,34,129,34],
    [112,360,7,83],
    [128,37],
    [112,100,114,14,1,27,112,100,113,24,27,112,180,48,120,14,3],
    [114,14,3,112,2,28,7,114,14,3,27,120,14,2],
    [114,14,2,94],
    [112,1,91],
    [113,17,113,18,99,112,32896,32,129,37],
    [140,14,134,132],
    [112,100,112,2,28,112,3,26,119,23],
    [112,100,23,112,100,23,113,23,113,23,144],
    [113,23,113,23,145],
    [112,0,86],
    [112,100,23,112,100,23,88],
    [113,23,113,23,112,32896,112,-1,111],
    [112,10,119,24],
    [118,23,73,110,105,116,105,97,108,32,114,97,110,100,111,109,114,97,100,105,117,115,32,61,32,113,24,11,64,169,170,142],
    [112,0,112,0,112,65535,100],
    [112,1,119,27],
    [118,42,67,111,117,110,116,105,110,103,32,109,111,108,101,99,117,108,101,115,32,119,105,116,104,105,110,32,103,114,111,119,105,110,103,32,99,114,121,115,116,97,108,58,169,170,142],
    [118,2,49,32,169,142],
    [112,1,119,25],
    [112,0,173],
    [80],
    [112,360,7,83],
    [112,100,91],
    [113,17,113,18,99,112,32896,33,129,59],
    [131,15],
    [112,0,119,26],
    [113,17,113,18,131,4],
    [114,15,1,16,129,72],
    [113,17,113,18,112,16777215,100],
    [113,26,112,5,31,112,0,32,129,68],
    [112,-1,146],
    [112,0,112,0,35,129,67],
    [112,0,174],
    [112,0,146],
    [116,26,1,122,4,2,123],
    [113,17,113,18,112,32896,100],
    [131,26],
    [128,60],
    [113,27,112,10,31,112,0,32,129,75],
    [113,27,11,169,170],
    [128,76],
    [113,27,11,112,32,9,64,169,142],
    [113,25,113,24,35,129,80],
    [113,25,119,24],
    [118,0,169,170,142],
    [118,15,114,97,110,100,111,109,114,97,100,105,117,115,32,61,32,113,24,11,64,169,170,142],
    [113,25,112,75,37,129,54],
    [118,21,83,105,109,117,108,97,116,105,111,110,32,102,105,110,105,115,104,101,100,32,40,172,112,1000,112,2,14,64,118,9,32,115,101,99,111,110,100,115,41,64,169,170,142],
    [130]
  ]
}
