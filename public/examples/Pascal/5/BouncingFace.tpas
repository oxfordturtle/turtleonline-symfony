PROGRAM BouncingFace;
CONST faceRadius = 100;
VAR x, y: integer;
    xVelocity, yVelocity: integer;

  {draws a face of the given radius}
  {N.B. copied from the Resizable face example}
  Procedure face(radius: integer);

    procedure eye;
    begin
      colour(white);
      ellblot(radius * 3 / 20, radius / 10);
      colour(emerald);
      blot(radius * 9 / 100);
      colour(black);
      blot(radius / 25)
    end;

  Begin
    direction(0);
    {draw head}
    colour(peach);
    blot(radius);
    {draw mouth}
    colour(darkred);
    blot(radius * 7 / 10);
    forward(radius * 3 / 20);
    colour(peach);
    blot(radius * 3 / 4);
    {draw nose}
    back(radius * 3 / 10);
    colour(royal);
    blot(radius * 3 / 20);
    {move to left eye position (without drawing)}
    penup;
    forward(radius * 9 / 20);
    left(90);
    forward(radius * 2 / 5);
    {draw left eye}
    eye;
    {move to right eye position (without drawing)}
    back(radius * 4 / 5);
    {draw right eye}
    eye
  End;

BEGIN
  {set starting point and velocity}
  x := 300;
  y := 700;
  xVelocity := 8;
  yVelocity := -4;
  while 0 < 1 do
    begin
      noupdate;
      {rub out the existing face}
      colour(white);
      blot(faceRadius + 1);
      {move to the next location}
      x := x + xVelocity;
      y := y + yVelocity;
      setxy(x, y);
      {draw a new face}
      face(faceRadius);
      {reset x and y after face drawing}
      setxy(x, y);
      update;
      pause(10);
      {"bounce" (i.e. invert velocity) at the canvas edges}
      if (x < faceRadius) or (x > 999 - faceRadius) then
        xVelocity := -xVelocity;
      if (y < faceRadius) or (y > 999 - faceRadius) then
        yVelocity := -yVelocity
    end
END.
