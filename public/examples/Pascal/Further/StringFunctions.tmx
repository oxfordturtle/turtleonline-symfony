{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Standard string functions",
  "author":"Peter Millican",
  "date":"23/07/2020",
  "time":"11:59:02",
  "code":"PROGRAM StringFunctions;\nCONST delay = 500;\nVAR s1, s2, s3, s4, s5: string;\n    posn, n: integer;\nBEGIN\n  output(true, cream, true);\n  s1 := 'Turtle Pascal';\n  s2 := copy(s1, 1, 6);\n  writeln(s2 + ' is the name of a small animal.');\n  pause(delay);\n  s3 := copy(s1, 8, 6);\n  writeln(s3 + ' was a French philosopher.');\n  pause(delay);\n  s4 := insert('eter R', s3, 2);\n  writeln('''' + s4 + ''' is a silly name.');\n  pause(delay);\n  writeln('\"' + s1 + '\" has ' + str(length(s1)) + ' characters.');\n  pause(delay);\n  writeln('In lower case it is \"' + lowercase(s1) + '\".');\n  writeln('In upper case it is \"' + uppercase(s1) + '\".');\n  pause(delay);\n  posn := pos(s3, s1);\n  if posn > 0 then\n    writeln('\"' + s3 + '\" occurs within \"' + s1 + '\" at position ' + str(posn) + '.');\n  pause(delay);\n  s5 := '3.14159';\n  writeln(s5 + ' times 100000 = ' + str(qval(s5, 100000, -1)) + '.');\n  pause(delay);\n  n := qval(s5, 100000, -1);\n  writeln(str(n) + ' divided by 100000 = ' + qstr(n, 100000, 5) + '.');\n  writeln('');\n  pause(delay * 5);\n  writeln('Now back to the Canvas and Console ...');\n  output(false, peach, true);\n  pause(delay * 5);\n  output(false, lightred, false);\n  pause(delay * 5);\n  console(true, lightblue);\n  writeln('You will see this on a clear light blue Console')\nEND.",
  "usage":[
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"console", "level":2, "count":1, "lines":"38"},
        {"name":"output", "level":2, "count":3, "lines":"6 34 36"}
      ],
      "total":4
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"writeln", "level":1, "count":12, "lines":"9 12 15 17 19 20 24 27 30 31 33 39"},
        {"name":"length", "level":2, "count":1, "lines":"17"},
        {"name":"lowercase", "level":2, "count":1, "lines":"19"},
        {"name":"uppercase", "level":2, "count":1, "lines":"20"},
        {"name":"copy", "level":3, "count":2, "lines":"8 11"},
        {"name":"insert", "level":3, "count":1, "lines":"14"},
        {"name":"pos", "level":3, "count":1, "lines":"22"}
      ],
      "total":19
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"str", "level":1, "count":4, "lines":"17 24 27 30"},
        {"name":"qstr", "level":2, "count":1, "lines":"30"},
        {"name":"qval", "level":2, "count":2, "lines":"27 29"}
      ],
      "total":7
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"pause", "level":1, "count":10, "lines":"10 13 16 18 21 25 28 32 35 37"}
      ],
      "total":10
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":1, "lines":"23"}
      ],
      "total":1
    }
  ],
  "pcode":[
    [112,12,1,1,112,0,123,112,6,2,123,4,112,183,124,112,195,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [116,21,119,19],
    [112,33,119,20],
    [116,56,119,54],
    [112,33,119,55],
    [116,91,119,89],
    [112,33,119,90],
    [116,126,119,124],
    [112,33,119,125],
    [116,161,119,159],
    [112,33,119,160],
    [112,-1,112,16777147,112,-1,166],
    [113,19,118,13,84,117,114,116,108,101,32,80,97,115,99,97,108,2,126,142],
    [113,54,113,19,112,1,112,6,67,2,126,142],
    [113,54,118,31,32,105,115,32,116,104,101,32,110,97,109,101,32,111,102,32,97,32,115,109,97,108,108,32,97,110,105,109,97,108,46,64,169,170,142],
    [112,500,174],
    [113,89,113,19,112,8,112,6,67,2,126,142],
    [113,89,118,26,32,119,97,115,32,97,32,70,114,101,110,99,104,32,112,104,105,108,111,115,111,112,104,101,114,46,64,169,170,142],
    [112,500,174],
    [113,124,118,6,101,116,101,114,32,82,113,89,112,2,69,2,126,142],
    [112,39,9,113,124,64,118,18,39,32,105,115,32,97,32,115,105,108,108,121,32,110,97,109,101,46,64,169,170,142],
    [112,500,174],
    [112,34,9,113,19,64,118,6,34,32,104,97,115,32,64,113,19,65,11,64,118,12,32,99,104,97,114,97,99,116,101,114,115,46,64,169,170,142],
    [112,500,174],
    [118,21,73,110,32,108,111,119,101,114,32,99,97,115,101,32,105,116,32,105,115,32,34,113,19,112,1,66,64,118,2,34,46,64,169,170,142],
    [118,21,73,110,32,117,112,112,101,114,32,99,97,115,101,32,105,116,32,105,115,32,34,113,19,112,2,66,64,118,2,34,46,64,169,170,142],
    [112,500,174],
    [113,89,113,19,70,119,194],
    [113,194,112,0,35,129,32],
    [112,34,9,113,89,64,118,17,34,32,111,99,99,117,114,115,32,119,105,116,104,105,110,32,34,64,113,19,64,118,14,34,32,97,116,32,112,111,115,105,116,105,111,110,32,64,113,194,11,64,112,46,9,64,169,170,142],
    [112,500,174],
    [113,159,118,7,51,46,49,52,49,53,57,2,126,142],
    [113,159,118,16,32,116,105,109,101,115,32,49,48,48,48,48,48,32,61,32,64,113,159,112,100000,112,1,23,15,11,64,112,46,9,64,169,170,142],
    [112,500,174],
    [113,159,112,100000,112,1,23,15,119,195],
    [113,195,11,118,21,32,100,105,118,105,100,101,100,32,98,121,32,49,48,48,48,48,48,32,61,32,64,113,195,112,100000,112,5,14,64,112,46,9,64,169,170,142],
    [118,0,169,170,142],
    [112,500,112,5,28,174],
    [118,38,78,111,119,32,98,97,99,107,32,116,111,32,116,104,101,32,67,97,110,118,97,115,32,97,110,100,32,67,111,110,115,111,108,101,32,46,46,46,169,170,142],
    [112,0,112,16764080,112,-1,166],
    [112,500,112,5,28,174],
    [112,0,112,13458524,112,0,166],
    [112,500,112,5,28,174],
    [112,-1,112,10075135,167],
    [118,47,89,111,117,32,119,105,108,108,32,115,101,101,32,116,104,105,115,32,111,110,32,97,32,99,108,101,97,114,32,108,105,103,104,116,32,98,108,117,101,32,67,111,110,115,111,108,101,169,170,142],
    [130]
  ]
}
