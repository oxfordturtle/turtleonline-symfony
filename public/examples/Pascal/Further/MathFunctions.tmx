{
  "format":1,
  "language":"Pascal",
  "version":13,
  "name":"Mathematical functions",
  "author":"Peter Millican",
  "date":"28/07/2020",
  "time":"13:23:50",
  "code":"PROGRAM MathFunctions;\nCONST decimals=4;\n      denominator=1000000;\nVAR count: integer;\n    a,b,c: integer;\n\n Procedure show(s: string;n: integer);\n Begin\n  writeln(s+'('+str(a)+'/'+str(b)+') = '+qstr(n,denominator,decimals))\n End;\n\n Procedure selectab;\n Begin\n  a:=random(900)+100;\n  b:=random(900)+100\n End;\n\nBEGIN\n output(true,white,true);\n writeln('This program selects two random numbers a and b, in the range');\n writeln('100-999, and then outputs various mathematical functions of the');\n writeln('fraction a/b.  The results are expressed to '+str(decimals)+' decimal places, and');\n writeln('a denominator of '+str(denominator)+' is used in the calculations to provide');\n writeln('precision, even though the Turtle functions strictly operate');\n writeln('only on integers and produce integer results.');\n writeln('');\n selectab;\n writeln('a='+str(a)+'; b='+str(b));\n writeln('a/b = '+str(a)+'/'+str(b)+' = '+qstr(a,b,decimals));\n writeln('');\n show('square',power(a,b,2,denominator));\n show('square root',root(a,b,2,denominator));\n show('cube',power(a,b,3,denominator));\n show('cube root',root(a,b,3,denominator));\n writeln('');\n show('hypot',hypot(a,b,denominator));\n show('calculated hypot',sqrt(a*a+b*b,denominator));\n writeln('');\n show('sin',sin(a,b,denominator));\n show('cos',cos(a,b,denominator));\n show('tan',tan(a,b,denominator));\n writeln('');\n show('ln',ln(a,b,denominator));\n if divmult(a,b,1000)+ln(denominator,1,1000)>ln(maxint,1,1000) then\n  begin\n   writeln('EXP('+str(a)+'/'+str(b)+') would give numerical overflow, because');\n   writeln('the result*'+str(denominator)+' would be greater than '+str(maxint))\n  end\n else\n  show('exp',exp(a,b,denominator));\n show('log10',log10(a,b,denominator));\n if divmult(a,b,1000)+log10(denominator,1,1000)>log10(maxint,1,1000) then\n  begin\n   writeln('ANTILOG('+str(a)+'/'+str(b)+') would give numerical overflow, because');\n   writeln('the result*'+str(denominator)+' would be greater than '+str(maxint))\n  end\n else\n  show('antilog',antilog(a,b,denominator));\n writeln('');\n if a>b then\n  writeln('ARCCOS and ARCSIN are not defined for '+str(a)+'/'+str(b)+' = '+qstr(a,b,decimals))\n else\n  begin\n   show('arccos',arccos(a,b,denominator));\n   show('arcsin',arcsin(a,b,denominator))\n  end;\n show('arctan',arctan(a,b,denominator))\nEND.",
  "usage":[
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"output", "level":2, "count":1, "lines":"19"}
      ],
      "total":1
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"hypot", "level":2, "count":1, "lines":"36"},
        {"name":"random", "level":2, "count":2, "lines":"14 15"},
        {"name":"sqrt", "level":2, "count":1, "lines":"37"},
        {"name":"divmult", "level":3, "count":2, "lines":"44 52"},
        {"name":"maxint", "level":3, "count":4, "lines":"44 47 52 55"},
        {"name":"power", "level":3, "count":2, "lines":"31 33"},
        {"name":"root", "level":3, "count":2, "lines":"32 34"}
      ],
      "total":14
    },
    {
      "category": "Trig / exp / log functions",
      "expressions":[
        {"name":"cos", "level":2, "count":1, "lines":"40"},
        {"name":"exp", "level":2, "count":1, "lines":"50"},
        {"name":"ln", "level":2, "count":3, "lines":"43 44 44"},
        {"name":"sin", "level":2, "count":1, "lines":"39"},
        {"name":"tan", "level":2, "count":1, "lines":"41"},
        {"name":"antilog", "level":3, "count":1, "lines":"58"},
        {"name":"arccos", "level":3, "count":1, "lines":"64"},
        {"name":"arcsin", "level":3, "count":1, "lines":"65"},
        {"name":"arctan", "level":3, "count":1, "lines":"67"},
        {"name":"log10", "level":3, "count":3, "lines":"51 52 52"}
      ],
      "total":14
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"writeln", "level":1, "count":20, "lines":"9 20 21 22 23 24 25 26 28 29 30 35 38 42 46 47 54 55 59 61"}
      ],
      "total":20
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"str", "level":1, "count":18, "lines":"9 9 22 23 28 28 29 29 46 46 47 47 54 54 55 55 61 61"},
        {"name":"qstr", "level":2, "count":3, "lines":"9 29 61"}
      ],
      "total":21
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"if", "level":1, "count":3, "lines":"44 52 60"},
        {"name":"else", "level":1, "count":3, "lines":"49 57 62"},
        {"name":"procedure", "level":2, "count":2, "lines":"7 12"}
      ],
      "total":8
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"selectab", "level":0, "count":1, "lines":"27"},
        {"name":"show", "level":0, "count":16, "lines":"31 32 33 34 36 37 39 40 41 43 50 51 58 64 65 67"}
      ],
      "total":17
    }
  ],
  "pcode":[
    [112,14,1,1,112,0,123,112,6,2,123,4,112,10,124,112,24,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [128,13],
    [133,1],
    [139,12,36],
    [117,12,1,112,36,124,120,12,36,117,12,2,1,1,4,120,12,1,112,33,2,123,4,126],
    [114,12,1,112,40,9,64,113,22,11,64,112,47,9,64,113,23,11,64,118,4,41,32,61,32,64,114,12,36,112,1000000,112,4,14,64,169,170,142],
    [140,12,134,132],
    [133,2],
    [112,900,7,112,100,26,119,22],
    [112,900,7,112,100,26,119,23],
    [134,132],
    [112,-1,112,16777215,112,-1,166],
    [118,61,84,104,105,115,32,112,114,111,103,114,97,109,32,115,101,108,101,99,116,115,32,116,119,111,32,114,97,110,100,111,109,32,110,117,109,98,101,114,115,32,97,32,97,110,100,32,98,44,32,105,110,32,116,104,101,32,114,97,110,103,101,169,170,142],
    [118,63,49,48,48,45,57,57,57,44,32,97,110,100,32,116,104,101,110,32,111,117,116,112,117,116,115,32,118,97,114,105,111,117,115,32,109,97,116,104,101,109,97,116,105,99,97,108,32,102,117,110,99,116,105,111,110,115,32,111,102,32,116,104,101,169,170,142],
    [118,44,102,114,97,99,116,105,111,110,32,97,47,98,46,32,32,84,104,101,32,114,101,115,117,108,116,115,32,97,114,101,32,101,120,112,114,101,115,115,101,100,32,116,111,32,112,4,11,64,118,20,32,100,101,99,105,109,97,108,32,112,108,97,99,101,115,44,32,97,110,100,64,169,170,142],
    [118,17,97,32,100,101,110,111,109,105,110,97,116,111,114,32,111,102,32,112,1000000,11,64,118,39,32,105,115,32,117,115,101,100,32,105,110,32,116,104,101,32,99,97,108,99,117,108,97,116,105,111,110,115,32,116,111,32,112,114,111,118,105,100,101,64,169,170,142],
    [118,60,112,114,101,99,105,115,105,111,110,44,32,101,118,101,110,32,116,104,111,117,103,104,32,116,104,101,32,84,117,114,116,108,101,32,102,117,110,99,116,105,111,110,115,32,115,116,114,105,99,116,108,121,32,111,112,101,114,97,116,101,169,170,142],
    [118,45,111,110,108,121,32,111,110,32,105,110,116,101,103,101,114,115,32,97,110,100,32,112,114,111,100,117,99,101,32,105,110,116,101,103,101,114,32,114,101,115,117,108,116,115,46,169,170,142],
    [118,0,169,170,142],
    [131,9],
    [118,2,97,61,113,22,11,64,118,4,59,32,98,61,64,113,23,11,64,169,170,142],
    [118,6,97,47,98,32,61,32,113,22,11,64,112,47,9,64,113,23,11,64,118,3,32,61,32,64,113,22,113,23,112,4,14,64,169,170,142],
    [118,0,169,170,142],
    [118,6,115,113,117,97,114,101,113,22,113,23,112,2,112,1000000,52,142,131,4],
    [118,11,115,113,117,97,114,101,32,114,111,111,116,113,22,113,23,112,2,112,1000000,51,142,131,4],
    [118,4,99,117,98,101,113,22,113,23,112,3,112,1000000,52,142,131,4],
    [118,9,99,117,98,101,32,114,111,111,116,113,22,113,23,112,3,112,1000000,51,142,131,4],
    [118,0,169,170,142],
    [118,5,104,121,112,111,116,113,22,113,23,112,1000000,50,142,131,4],
    [118,16,99,97,108,99,117,108,97,116,101,100,32,104,121,112,111,116,113,22,113,22,28,113,23,113,23,28,26,112,1000000,49,142,131,4],
    [118,0,169,170,142],
    [118,3,115,105,110,113,22,113,23,112,1000000,57,142,131,4],
    [118,3,99,111,115,113,22,113,23,112,1000000,58,142,131,4],
    [118,3,116,97,110,113,22,113,23,112,1000000,59,142,131,4],
    [118,0,169,170,142],
    [118,2,108,110,113,22,113,23,112,1000000,55,142,131,4],
    [113,22,113,23,112,1000,48,112,1000000,112,1,112,1000,55,26,6,112,1,112,1000,55,35,129,42],
    [118,4,69,88,80,40,113,22,11,64,112,47,9,64,113,23,11,64,118,40,41,32,119,111,117,108,100,32,103,105,118,101,32,110,117,109,101,114,105,99,97,108,32,111,118,101,114,102,108,111,119,44,32,98,101,99,97,117,115,101,64,169,170,142],
    [118,11,116,104,101,32,114,101,115,117,108,116,42,112,1000000,11,64,118,23,32,119,111,117,108,100,32,98,101,32,103,114,101,97,116,101,114,32,116,104,97,110,32,64,6,11,64,169,170,142],
    [128,43],
    [118,3,101,120,112,113,22,113,23,112,1000000,56,142,131,4],
    [118,5,108,111,103,49,48,113,22,113,23,112,1000000,53,142,131,4],
    [113,22,113,23,112,1000,48,112,1000000,112,1,112,1000,53,26,6,112,1,112,1000,53,35,129,48],
    [118,8,65,78,84,73,76,79,71,40,113,22,11,64,112,47,9,64,113,23,11,64,118,40,41,32,119,111,117,108,100,32,103,105,118,101,32,110,117,109,101,114,105,99,97,108,32,111,118,101,114,102,108,111,119,44,32,98,101,99,97,117,115,101,64,169,170,142],
    [118,11,116,104,101,32,114,101,115,117,108,116,42,112,1000000,11,64,118,23,32,119,111,117,108,100,32,98,101,32,103,114,101,97,116,101,114,32,116,104,97,110,32,64,6,11,64,169,170,142],
    [128,49],
    [118,7,97,110,116,105,108,111,103,113,22,113,23,112,1000000,54,142,131,4],
    [118,0,169,170,142],
    [113,22,113,23,35,129,53],
    [118,38,65,82,67,67,79,83,32,97,110,100,32,65,82,67,83,73,78,32,97,114,101,32,110,111,116,32,100,101,102,105,110,101,100,32,102,111,114,32,113,22,11,64,112,47,9,64,113,23,11,64,118,3,32,61,32,64,113,22,113,23,112,4,14,64,169,170],
    [142,128,55],
    [118,6,97,114,99,99,111,115,113,22,113,23,112,1000000,61,142,131,4],
    [118,6,97,114,99,115,105,110,113,22,113,23,112,1000000,60,142,131,4],
    [118,6,97,114,99,116,97,110,113,22,113,23,112,1000000,62,142,131,4],
    [130]
  ]
}
