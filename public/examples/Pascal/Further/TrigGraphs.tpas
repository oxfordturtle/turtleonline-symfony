PROGRAM TrigGraphs;
CONST xOrigin = 500;
      yOrigin = 500;
      halfWidth = 400;
      yScale = 200;
      radians = false; {make true for x-axis in radians}

  {draws graph axes}
  Procedure drawAxes;
  Begin
    thickness(3);
    {draw y axis}
    setxy(xOrigin - halfWidth, yOrigin);
    drawxy(halfWidth * 2, 0);
    {draw x axis}
    setxy(xOrigin, 0);
    drawxy(0, 1000);
    {draw circle at origin}
    setxy(xOrigin, yOrigin);
    circle(15);
    {draw lines at y=1 and y=-1}
    thickness(2);
    setxy(xOrigin - halfWidth, yOrigin - yScale);
    drawxy(halfWidth * 2, 0);
    setxy(xOrigin - halfWidth, yOrigin + yScale);
    drawxy(halfWidth * 2, 0);
    setxy(xOrigin + halfWidth + 10, yOrigin - yScale - 18);
    print('+1', 0, 20);
    setxy(xOrigin + halfWidth + 10, yOrigin + yScale - 18);
    print('-1', 0, 20);
    {print x axis labels}
    if radians then
      begin
        setxy(xOrigin - halfWidth - 44, yOrigin - 4);
        print('-p', 29, 28);
        setxy(xOrigin - halfWidth div 2 - 2, yOrigin - 4);
        print('-p/2', 29, 28);
        setxy(xOrigin + halfWidth div 2 - 50, yOrigin - 4);
        print('p/2', 29, 28);
        setxy(xOrigin + halfWidth, yOrigin - 4);
        print('p', 29, 28)
      end
    else
      begin
        setxy(xOrigin - halfWidth - 64, yOrigin + 2);
        print('-180', 0, 24);
        setxy(xOrigin - halfWidth div 2 - 2, yOrigin + 2);
        print('-90', 0, 24);
        setxy(xOrigin + halfWidth div 2 - 36, yOrigin + 2);
        print('90', 0, 24);
        setxy(xOrigin + halfWidth, yOrigin + 2);
        print('180', 0, 24)
      end
  End;

  {plots a sine curve}
  Procedure plotSineCurve;
  Var degrees, x, y: integer;
  Begin
    for degrees := -180 to 180 do
      begin
        x := xOrigin + divmult(degrees, 180, halfWidth);
        y := yOrigin - sin(degrees, 1, yScale);
        setxy(x, y)
      end;
    polyline(361)
  End;

  {plots a cosine curve}
  Procedure plotCosineCurve;
  Var degrees, x, y: integer;
  Begin
    for degrees := -180 to 180 do
      begin
        x := xOrigin + divmult(degrees, 180, halfWidth);
        y := yOrigin - cos(degrees, 1, yScale);
        setxy(x, y)
      end;
    polyline(361)
  End;

  {plots a tan curve}
  Procedure plotTanCurve;
  Var degrees, x, y: integer;
  Begin
    for degrees := -180 to 180 do
      if degrees = -90 then
        polyline(90)
      else
      if degrees = 90 then
        polyline(179)
      else
        begin
          x := xOrigin + divmult(degrees, 180, halfWidth);
          y := yOrigin - tan(degrees, 1, yScale);
          setxy(x, y)
        end;
    polyline(90)
  End;

BEGIN
  {draw axes}
  drawAxes;
  noupdate;
  thickness(4);
  {plot sine curve in green}
  colour(green);
  setxy(250, 700);
  print('sine', 16, 40);
  plotSineCurve;
  {plot cosine curve in red}
  colour(red);
  setxy(30, 700);
  print('cosine', 16, 40);
  plotCosineCurve;
  {plot tan curve in blue}
  colour(blue);
  setxy(140, 920);
  print('tangent', 16, 40);
  plotTanCurve
END.
