const int gunlength = 1000;
const int distancecol = green;
const int timecol = red;
int steps;

void graphaxes () {
  thickness(5);
  setxy(9700, 600);
  drawxy(0, 3900);
  drawxy(-9000, 0);
  drawxy(0, -3900);
  for (int n = 0; n <= 90; n = n + 1) {
    if (n % 5 == 0) {
      setxy(650 + n * 100, 4600);
      print(itoa(n), 2, 16);
    }
  }
  for (n = 0; n < 10; n = n + 1) {
    setxy(100, 4350 - n * 400);
    print(itoa(n * 1000), 2, 16);
  }
  for (n = 0; n < 10; n = n + 1) {
    setxy(9900, 4380 - n * 400);
    print(itoa(n * 20), 2, 16);
  }
  setxy(4000, 4900);
  print('Angle of elevation', 2, 24);
  colour(distancecol);
  setxy(0, 100);
  print('Distance', 2, 24);
  colour(timecol);
  setxy(9600, 100);
  print('Time', 2, 24);
}

void plot (int x, int y, int col) {
  setxy(700 + x * 100, 4500 - y * 2 / 5);
  colour(col);
  blot(40);
}

void aim () {
  do {
    noupdate();
    setxy(0, 10000);
    colour(cream);
    blot(1600);
    colour(yellowgreen);
    blot(1400);
    colour(maroon);
    setxy(250, 9750);
    blot(250);
    forward(gunlength);
    setxy(250, 9750);
    colour(red);
    blot(100);
    update();
    do {} while (?lmouse <= 0);
    if (pixcol(?mousex, ?mousey) == cream) {
      turnxy(?mousex - 250, ?mousey - 9750);
    }
  } while (pixcol(?mousex, ?mousey) != red);
}

void fire (int xvel, int yvel, int gravity, int floor) {
  setxy(250, 9750);
  steps = 0;
  do {
    steps = steps + 1;
    if (pixcol(turtx, turty) == black) {
      colour(white);
      blot(90);
    }
    movexy(xvel, yvel);
    yvel = yvel + gravity;
    if (turty > floor) {
      turty = floor;
    }
    if ((pixcol(turtx, turty) == white) || (turty == floor)) {
      colour(black);
      blot(75);
    }
    update();
    pause(10);
    noupdate();
  } while (turty < floor);
}

void main () {
  canvas(0, 0, 10500, 10000);
  graphaxes();
  turtd = 45;
  thickness(20);
  do {
    aim();
    write('Elevation: ' + itoa(90 - turtd));
    fire(cos(90 - turtd, 1, 96), sin(90 - turtd, 1, -96), 1, 9950);
    write('  Distance: ' + itoa(turtx));
    writeline('  Time: ' + itoa(steps));
    plot(90 - turtd, turtx, distancecol);
    plot(90 - turtd, steps * 50, timecol);
  } while (1 == 1);
}
