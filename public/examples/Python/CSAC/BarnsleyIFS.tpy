xleft: Final = -236
xright: Final = 263
ytop: Final = 1
ybottom: Final = 1000
scaledown: Final = 3
mappings: Final = 4
label: Final = 'Barnsley fern'
live: Final = green
copied: Final = emerald
pauseval: Final = 2000
coeffdiv
mapxx: List[int, mappings]
mapxy: List[int, mappings]
mapxc: List[int, mappings]
mapyx: List[int, mappings]
mapyy: List[int, mappings]
mapyc: List[int, mappings]
xl
xr
yt
yb

def setmaps ():
  coeffdiv = 100
  mapxx[1] = 0
  mapyx[1] = 0
  mapxy[1] = 0
  mapyy[1] = 16
  mapxc[1] = 0
  mapyc[1] = 0
  mapxx[2] = 85
  mapyx[2] = -4
  mapxy[2] = 4
  mapyy[2] = 85
  mapxc[2] = 0
  mapyc[2] = 160
  mapxx[3] = 20
  mapyx[3] = 23
  mapxy[3] = -26
  mapyy[3] = 22
  mapxc[3] = 0
  mapyc[3] = 160
  mapxx[4] = -15
  mapyx[4] = 26
  mapxy[4] = 28
  mapyy[4] = 24
  mapxc[4] = 0
  mapyc[4] = 44

def setscale ():
  global xl, xr, yt, yb
  xl = xleft / scaledown
  xr = xright / scaledown
  yt = ytop / scaledown
  yb = ybottom / scaledown
  for i = 1 to mappings do
    mapxc[i] = mapxc[i] / scaledown
    mapyc[i] = mapyc[i] / scaledown

def map (a, x, y, newxadd, newyadd):
  poke(newxadd, divmult(x, coeffdiv, mapxx[a]) + divmult(y, coeffdiv, mapxy[a]) + mapxc[a])
  poke(newyadd, divmult(x, coeffdiv, mapyx[a]) + divmult(y, coeffdiv, mapyy[a]) + mapyc[a])

def domap (mapnum):
  newx
  newy
  noupdate()
  for y in range(yt, yb + 1):
    for x in range(xl, xr + 1):
      if pixcol(x, y) != white:
        map(mapnum, x, y, address(newx), address(newy))
        if pixcol(newx, newy) = white:
          numborn = numborn + 1
        pixset(newx, newy, copied)
  update()

def cleanup ():
  noupdate()
  for y in range(yt, yb + 1):
    for x in range(xl, xr + 1):
      if pixcol(x, y) = live:
        pixset(x, y, white)
        numkilled = numkilled + 1
      else:
        if pixcol(x, y) = copied:
          pixset(x, y, live)
  update()

setmaps()
setscale()
canvas(xl, yt, xr - xl + 1, yb - yt + 1)
resolution(xr - xl + 1, yb - yt + 1)
pixset(1, 1, live)
iteration = 0
print(label + ' by iterative mapping')
timeset(0)
while numborn > numkilled:
  starttimeL int = time()
  iteration = iteration + 1
  print('')
  print('Iteration ' + str(iteration) + ':')
  numborn = 0
  for count in range(mappings):
    domap(count)
  numkilled = 0
  cleanup()
  print('  ' + str(numborn) + ' pixels born ' + str(numkilled) + ' pixels killed')
  print('  (took ' + str((time() - starttime) / 1000) + ' seconds - total ' + str(time() / 1000) + ' seconds so far)')
  if (numborn + numkilled > 0) and (pauseval >= 1000):
    print('  (now pausing ' + qstr(pauseval, 1000, 1) + ' seconds to allow halting if desired ...)')
    pause(pauseval)
    print('')
print('FINISH - fixed point of iterative mapping has been reached')
