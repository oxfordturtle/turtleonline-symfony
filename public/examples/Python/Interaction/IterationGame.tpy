# disable key output in the console
keyecho(False)
# repeatedly...
while (True):
  # rub out previous frame
  blank(white)
  setxy(50, 20)
  colour(blue)
  print('Type in a starting integer (>1):', 4, 36)
  setxy(800, 20)
  colour(black)
  # while waiting for input of integer greater than 1...
  first: int = -1
  while (first <= 1):
    # empty the keybuffer
    reset(\keybuffer)
    # print contents of keybuffer on canvas
    while (abs(?key) != \return):
      box(200, 60, white, False)
      print(read(0), 4, 36)
      pause(100)
    # read value of keybuffer into String
    s: str = readline()
    # try to convert s to integer
    first = intdef(s, -1)
    # reset key input value
    reset(\key)
  # set latest number to user's input
  latest: int = first
  # initialise count variable
  count: int = 0
  # print first number in blue
  colour(blue)
  # until the sequence reaches 1...
  while (latest != 1):
    # print the latest number
    setxy((count % 10) * 100 + 20, (count // 10) * 45 + 300)
    print(str(latest), 4, 24)
    # move to the next number in the sequence
    if (latest % 2 == 0):
      latest = latest / 2
    else:
      latest = 3 * latest + 1
    # increment the count variable
    count = count + 1
    # print subsequent numbers in green
    colour(green)
  # print const number (1) in red
  setxy((count % 10) * 100 + 20, (count // 10) * 45 + 300)
  colour(red)
  print(str(latest), 4, 24)
  # print length of sequence
  setxy(100, 100)
  print('That took ' + str(count) + ' iterations to reach 1', 4, 36)
  colour(black)
  setxy(250, 200)
  # wait for key press to start again
  print('[Press a key to continue]', 4, 30)
  while (?key <= 0):
    pass
  # reset key input value
  reset(\key)
