const sunRadius: number = 50000;
const planets: number = 8;
var radius: number[planets];
var distanceFromSun: number[planets];
var colr: number[planets];
var rotation: number[planets];
var speed: number[planets];

// sets up the planet property arrays
function setup (): void {
  // mercury
  radius[0] = 2433;
  distanceFromSun[0] = 5795;
  speed[0] = 1607;
  colr[0] = white;
  // venus
  radius[1] = 6053;
  distanceFromSun[1] = 10811;
  speed[1] = 1174;
  colr[1] = ochre;
  // earth
  radius[2] = 6371;
  distanceFromSun[2] = 14957;
  speed[2] = 1000;
  colr[2] = blue;
  // mars
  radius[3] = 3380;
  distanceFromSun[3] = 22784;
  speed[3] = 802;
  colr[3] = orangered;
  // jupiter
  radius[4] = 71492;
  distanceFromSun[4] = 77814;
  speed[4] = 434;
  colr[4] = lightred;
  // saturn
  radius[5] = 58219;
  distanceFromSun[5] = 142700;
  speed[5] = 323;
  colr[5] = cream;
  // uranus
  radius[6] = 23470;
  distanceFromSun[6] = 287030;
  speed[6] = 182;
  colr[6] = cyan;
  // neptune
  radius[7] = 23716;
  distanceFromSun[7] = 449990;
  speed[7] = 159;
  colr[7] = royal;
}

setup();
// multiply canvas dimensions by 1000
angles(360000);
canvas(0, 0, 1000000, 1000000);
penUp();
while (true) {
  noUpdate();
  // rub out previous frame
  blank(black);
  // draw sun
  home();
  colour(yellow);
  blot(sunRadius);
  // draw each planet
  for (var i: number = 0; i < planets; i = i + 1) {
    home();
    // draw a white circle for the orbit
    colour(white);
    circle(distanceFromSun[i] + sunRadius);
    // move to next position and draw the planet
    right(rotation[i]);
    forward(distanceFromSun[i] + sunRadius);
    rotation[i] = (rotation[i] + speed[i]) % 360000;
    colour(colr[i]);
    if (i < 4) {
      blot(radius[i] * 2); // make inner planets double scale
    } else {
      blot(radius[i] / 2); // make outer planets half scale
    }
  }
  update();
}
