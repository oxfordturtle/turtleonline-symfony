{
  "format":1,
  "language":"BASIC",
  "version":13,
  "name":"Mathematical functions",
  "author":"Peter Millican",
  "date":"23/07/2020",
  "time":"12:00:25",
  "code":"REM MathFunctions\n\nCONST DECIMALS% = 4\nCONST DENOMINATOR% = 1000000\nOUTPUT(TRUE, WHITE, TRUE)\nWRITELN(\"This program selects two random numbers a and b, in the\")\nWRITELN(\"range 100-999, and then outputs various mathematical\")\nWRITELN(\"functions of the fraction a/b. The results are expressed\")\nWRITELN(\"to \" + STR$(DECIMALS%) + \" decimal places, and a denominator of \" + STR$(DENOMINATOR%) + \" is\")\nWRITELN(\"used in the calculations to provide precision, even\")\nWRITELN(\"though the Turtle functions strictly operate only on\")\nWRITELN(\"integers and produce integer results.\")\nWRITELN(\"\")\nPROCselectAB\nWRITELN(\"a = \" + STR$(A%) + \"; b = \" + STR$(B%))\nWRITELN(\"a / b = \" + STR$(A%) + \" / \" + STR$(B%) + \" = \" + QSTR$(A%, B%, DECIMALS%))\nWRITELN(\"\")\nPROCshow(\"square\", POWER(A%, B%, 2, DENOMINATOR%))\nPROCshow(\"square root\", ROOT(A%, B%, 2, DENOMINATOR%))\nPROCshow(\"cube\", POWER(A%, B%, 3, DENOMINATOR%))\nPROCshow(\"cube root\", ROOT(A%, B%, 3, DENOMINATOR%))\nWRITELN(\"\")\nPROCshow(\"hypot\", HYPOT(A%, B%, DENOMINATOR%))\nPROCshow(\"calculated hypot\", SQR(A% * A% + B% * B%, DENOMINATOR%))\nWRITELN(\"\")\nPROCshow(\"sin\", SIN(A%, B%, DENOMINATOR%))\nPROCshow(\"cos\", COS(A%, B%, DENOMINATOR%))\nPROCshow(\"tan\", TAN(A%, B%, DENOMINATOR%))\nWRITELN(\"\")\nPROCshow(\"ln\", LN(A%, B%, DENOMINATOR%))\nIF DIVMULT(A%, B%, 1000) + LN(DENOMINATOR%, 1, 1000) > LN(MAXINT, 1, 1000) THEN\n  WRITELN(\"EXP(\" + STR$(A%) + \" / \" + STR$(B%) + \") would give numerical overflow, because\")\n  WRITELN(\"the result * \" + STR$(DENOMINATOR%) + \" would be greater than \" + STR$(MAXINT))\nELSE\n  PROCshow(\"exp\", EXP(A%, B%, DENOMINATOR%))\nENDIF\nPROCshow(\"log10\", LOG10(A%, B%, DENOMINATOR%))\nIF DIVMULT(A%, B%, 1000) + LOG10(DENOMINATOR%, 1, 1000) > LOG10(MAXINT, 1, 1000) THEN\n  WRITELN(\"ANTILOG(\" + STR$(A%) + \" / \" + STR$(B%) + \") would give numerical overflow, because\")\n  WRITELN(\"the result * \" + STR$(DENOMINATOR%) + \" would be greater than \" + STR$(MAXINT))\nELSE\n  PROCshow(\"antilog\", ANTILOG(A%, B%, DENOMINATOR%))\nENDIF\nWRITELN(\"\")\nIF A% > B% THEN\n  WRITELN(\"ACS and ASN are not defined for \" + STR$(A%) + \" / \" + STR$(B%) + \" = \" + QSTR$(A%, B%, DECIMALS%))\nELSE\n  PROCshow(\"arccos\", ACS(A%, B%, DENOMINATOR%))\n  PROCshow(\"arcsin\", ASN(A%, B%, DENOMINATOR%))\nENDIF\nPROCshow(\"arctan\", ATN(A%, B%, DENOMINATOR%))\nEND\n\nDEF PROCshow(s$, n%)\n  WRITELN(s$ + \"(\" + STR$(A%) + \" / \" + STR$(B%) + \") = \" + QSTR$(n%, DENOMINATOR%, DECIMALS%))\nENDPROC\n\nDEF PROCselectAB\n  A% = RND(900) + 99\n  B% = RND(900) + 99\nENDPROC",
  "usage":[
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"OUTPUT", "level":2, "count":1, "lines":"5"}
      ],
      "total":1
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"HYPOT", "level":2, "count":1, "lines":"23"},
        {"name":"RND", "level":2, "count":2, "lines":"59 60"},
        {"name":"SQR", "level":2, "count":1, "lines":"24"},
        {"name":"DIVMULT", "level":3, "count":2, "lines":"31 38"},
        {"name":"MAXINT", "level":3, "count":4, "lines":"31 33 38 40"},
        {"name":"POWER", "level":3, "count":2, "lines":"18 20"},
        {"name":"ROOT", "level":3, "count":2, "lines":"19 21"}
      ],
      "total":14
    },
    {
      "category": "Trig / exp / log functions",
      "expressions":[
        {"name":"COS", "level":2, "count":1, "lines":"27"},
        {"name":"EXP", "level":2, "count":1, "lines":"35"},
        {"name":"LN", "level":2, "count":3, "lines":"30 31 31"},
        {"name":"SIN", "level":2, "count":1, "lines":"26"},
        {"name":"TAN", "level":2, "count":1, "lines":"28"},
        {"name":"ACS", "level":3, "count":1, "lines":"48"},
        {"name":"ANTILOG", "level":3, "count":1, "lines":"42"},
        {"name":"ASN", "level":3, "count":1, "lines":"49"},
        {"name":"ATN", "level":3, "count":1, "lines":"51"},
        {"name":"LOG10", "level":3, "count":3, "lines":"37 38 38"}
      ],
      "total":14
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"WRITELN", "level":1, "count":21, "lines":"55 6 7 8 9 10 11 12 13 15 16 17 22 25 29 32 33 39 40 44 46"}
      ],
      "total":21
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"STR$", "level":1, "count":18, "lines":"55 55 9 9 15 15 16 16 32 32 33 33 39 39 40 40 46 46"},
        {"name":"QSTR$", "level":2, "count":3, "lines":"55 16 46"}
      ],
      "total":21
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"IF", "level":1, "count":3, "lines":"31 38 45"},
        {"name":"ELSE", "level":1, "count":3, "lines":"34 41 47"},
        {"name":"DEF PROC", "level":2, "count":2, "lines":"54 58"}
      ],
      "total":8
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"PROCselectAB", "level":0, "count":1, "lines":"14"},
        {"name":"PROCshow", "level":0, "count":16, "lines":"18 19 20 21 23 24 26 27 28 30 35 37 42 48 49 51"}
      ],
      "total":17
    }
  ],
  "pcode":[
    [112,14,1,1,112,0,123,112,6,2,123,4,112,8,124,112,22,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [128,13],
    [133,1],
    [139,12,36],
    [117,12,1,112,36,124,120,12,36,117,12,2,1,1,4,120,12,1,112,33,2,123,4,126],
    [114,12,1,118,1,40,64,113,21,11,64,118,3,32,47,32,64,113,22,11,64,118,4,41,32,61,32,64,114,12,36,112,1000000,112,4,14,64,169,170,142],
    [140,12,134,132],
    [133,2],
    [112,900,7,4,112,99,26,119,21],
    [112,900,7,4,112,99,26,119,22],
    [134,132],
    [112,-1,112,16777215,112,-1,166],
    [118,55,84,104,105,115,32,112,114,111,103,114,97,109,32,115,101,108,101,99,116,115,32,116,119,111,32,114,97,110,100,111,109,32,110,117,109,98,101,114,115,32,97,32,97,110,100,32,98,44,32,105,110,32,116,104,101,169,170,142],
    [118,52,114,97,110,103,101,32,49,48,48,45,57,57,57,44,32,97,110,100,32,116,104,101,110,32,111,117,116,112,117,116,115,32,118,97,114,105,111,117,115,32,109,97,116,104,101,109,97,116,105,99,97,108,169,170,142],
    [118,56,102,117,110,99,116,105,111,110,115,32,111,102,32,116,104,101,32,102,114,97,99,116,105,111,110,32,97,47,98,46,32,84,104,101,32,114,101,115,117,108,116,115,32,97,114,101,32,101,120,112,114,101,115,115,101,100,169,170,142],
    [118,3,116,111,32,112,4,11,64,118,38,32,100,101,99,105,109,97,108,32,112,108,97,99,101,115,44,32,97,110,100,32,97,32,100,101,110,111,109,105,110,97,116,111,114,32,111,102,32,64,112,1000000,11,64,118,3,32,105,115,64,169,170,142],
    [118,51,117,115,101,100,32,105,110,32,116,104,101,32,99,97,108,99,117,108,97,116,105,111,110,115,32,116,111,32,112,114,111,118,105,100,101,32,112,114,101,99,105,115,105,111,110,44,32,101,118,101,110,169,170,142],
    [118,52,116,104,111,117,103,104,32,116,104,101,32,84,117,114,116,108,101,32,102,117,110,99,116,105,111,110,115,32,115,116,114,105,99,116,108,121,32,111,112,101,114,97,116,101,32,111,110,108,121,32,111,110,169,170,142],
    [118,37,105,110,116,101,103,101,114,115,32,97,110,100,32,112,114,111,100,117,99,101,32,105,110,116,101,103,101,114,32,114,101,115,117,108,116,115,46,169,170,142],
    [118,0,169,170,142],
    [131,9],
    [118,4,97,32,61,32,113,21,11,64,118,6,59,32,98,32,61,32,64,113,22,11,64,169,170,142],
    [118,8,97,32,47,32,98,32,61,32,113,21,11,64,118,3,32,47,32,64,113,22,11,64,118,3,32,61,32,64,113,21,113,22,112,4,14,64,169,170,142],
    [118,0,169,170,142],
    [118,6,115,113,117,97,114,101,113,21,113,22,112,2,112,1000000,52,142,131,4],
    [118,11,115,113,117,97,114,101,32,114,111,111,116,113,21,113,22,112,2,112,1000000,51,142,131,4],
    [118,4,99,117,98,101,113,21,113,22,112,3,112,1000000,52,142,131,4],
    [118,9,99,117,98,101,32,114,111,111,116,113,21,113,22,112,3,112,1000000,51,142,131,4],
    [118,0,169,170,142],
    [118,5,104,121,112,111,116,113,21,113,22,112,1000000,50,142,131,4],
    [118,16,99,97,108,99,117,108,97,116,101,100,32,104,121,112,111,116,113,21,113,21,28,113,22,113,22,28,26,112,1000000,49,142,131,4],
    [118,0,169,170,142],
    [118,3,115,105,110,113,21,113,22,112,1000000,57,142,131,4],
    [118,3,99,111,115,113,21,113,22,112,1000000,58,142,131,4],
    [118,3,116,97,110,113,21,113,22,112,1000000,59,142,131,4],
    [118,0,169,170,142],
    [118,2,108,110,113,21,113,22,112,1000000,55,142,131,4],
    [113,21,113,22,112,1000,48,112,1000000,112,1,112,1000,55,26,6,112,1,112,1000,55,35,129,43],
    [118,4,69,88,80,40,113,21,11,64,118,3,32,47,32,64,113,22,11,64,118,40,41,32,119,111,117,108,100,32,103,105,118,101,32,110,117,109,101,114,105,99,97,108,32,111,118,101,114,102,108,111,119,44,32,98,101,99,97,117,115,101,64,169,170,142],
    [118,13,116,104,101,32,114,101,115,117,108,116,32,42,32,112,1000000,11,64,118,23,32,119,111,117,108,100,32,98,101,32,103,114,101,97,116,101,114,32,116,104,97,110,32,64,6,11,64,169,170,142],
    [128,44],
    [118,3,101,120,112,113,21,113,22,112,1000000,56,142,131,4],
    [118,5,108,111,103,49,48,113,21,113,22,112,1000000,53,142,131,4],
    [113,21,113,22,112,1000,48,112,1000000,112,1,112,1000,53,26,6,112,1,112,1000,53,35,129,49],
    [118,8,65,78,84,73,76,79,71,40,113,21,11,64,118,3,32,47,32,64,113,22,11,64,118,40,41,32,119,111,117,108,100,32,103,105,118,101,32,110,117,109,101,114,105,99,97,108,32,111,118,101,114,102,108,111,119,44,32,98,101,99,97,117,115,101,64,169,170,142],
    [118,13,116,104,101,32,114,101,115,117,108,116,32,42,32,112,1000000,11,64,118,23,32,119,111,117,108,100,32,98,101,32,103,114,101,97,116,101,114,32,116,104,97,110,32,64,6,11,64,169,170,142],
    [128,50],
    [118,7,97,110,116,105,108,111,103,113,21,113,22,112,1000000,54,142,131,4],
    [118,0,169,170,142],
    [113,21,113,22,35,129,54],
    [118,32,65,67,83,32,97,110,100,32,65,83,78,32,97,114,101,32,110,111,116,32,100,101,102,105,110,101,100,32,102,111,114,32,113,21,11,64,118,3,32,47,32,64,113,22,11,64,118,3,32,61,32,64,113,21,113,22,112,4,14,64,169,170,142],
    [128,56],
    [118,6,97,114,99,99,111,115,113,21,113,22,112,1000000,61,142,131,4],
    [118,6,97,114,99,115,105,110,113,21,113,22,112,1000000,60,142,131,4],
    [118,6,97,114,99,116,97,110,113,21,113,22,112,1000000,62,142,131,4],
    [130]
  ]
}
