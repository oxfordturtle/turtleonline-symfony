{
  "format":1,
  "language":"BASIC",
  "version":13,
  "name":"Flocking behaviour",
  "author":"Peter Millican",
  "date":"23/07/2020",
  "time":"12:00:33",
  "code":"REM Flocking\n\nCONST NUMBOIDS% = 30\nCONST BOIDRADIUS% = 20\nCONST MAXSPEED% = 50\nCONST BOIDCOLOUR% = LIGHTBROWN\nCONST HALOCOLOUR% = &FFFFFE\nCONST DELAY% = 50\nCONST POSFACTOR% = 50\nCONST VELFACTOR% = 50\nCONST NEARD% = 200\nCONST NEARFACTOR% = 10\nCONST TGTRADIUS% = 2000\nDIM boidx%(NUMBOIDS%)\nDIM boidy%(NUMBOIDS%)\nDIM boidvx%(NUMBOIDS%)\nDIM boidvy%(NUMBOIDS%)\nCANVAS(-2500, -2500, 5000, 5000)\nNOUPDATE\nPROCsetup\nBLANK(WHITE)\nPROCdraw(TRUE)\ncycle% = 0\nREPEAT\n  PROCaverages\n  PROCsettarget\n  NOUPDATE\n  PROCdraw(FALSE)\n  FOR n% = 0 TO NUMBOIDS%\n    PROCmove(n%)\n  NEXT\n  PROCdraw(TRUE)\n  UPDATE\n  PAUSE(DELAY%)\nUNTIL 0 = 1\nEND\n\nDEF PROCsetup\n  LOCAL n%\n  PENUP\n  COLOUR(HALOCOLOUR%)\n  FOR n% = 0 TO NUMBOIDS%\n    REPEAT\n      boidx%(n%) = RND(5000 - 2 * BOIDRADIUS%) + BOIDRADIUS% - 1\n      boidy%(n%) = RND(5000 - 2 * BOIDRADIUS%) + BOIDRADIUS% - 1\n    UNTIL PIXCOL(boidx%(n%), boidy%(n%)) = WHITE\n    boidvx%(n%) = RND(MAXSPEED% * 2 + 1) - MAXSPEED% - 1\n    boidvy%(n%) = RND(MAXSPEED% * 2 + 1) - MAXSPEED% - 1\n    SETXY(boidx%(n%), boidy%(n%))\n    BLOT(2 * BOIDRADIUS%)\n  NEXT\nENDPROC\n\nDEF PROCdraw(positive%)\n  LOCAL n%\n  IF positive% THEN\n    COLOUR(BOIDCOLOUR%)\n    radius% = BOIDRADIUS%\n  ELSE\n    COLOUR(WHITE)\n    radius% = BOIDRADIUS% + 10\n  ENDIF\n  FOR n% = 0 TO NUMBOIDS%\n    SETXY(boidx%(n%), boidy%(n%))\n    BLOT(radius%)\n  NEXT\nENDPROC\n\nDEF PROCaverages\n  LOCAL totalx%, totaly%, totalxv%, totalyv%\n  LOCAL n%\n  totalx% = 0\n  totaly% = 0\n  totalvx% = 0\n  totalvy% = 0\n  FOR n% = 0 TO NUMBOIDS%\n    totalx% = totalx% + boidx%(n%)\n    totaly% = totaly% + boidy%(n%)\n    totalvx% = totalvx% + boidvx%(n%)\n    totalvy% = totalvy% + boidvy%(n%)\n  NEXT\n  avgx% = totalx% / NUMBOIDS%\n  avgy% = totaly% / NUMBOIDS%\n  avgvx% = totalvx% / NUMBOIDS%\n  avgvy% = totalvy% / NUMBOIDS%\nENDPROC\n\nDEF PROCsettarget\n  IF cycle% MOD 100 = 0 THEN\n    tgtangvel% = RND(7) - 2\n  ENDIF\n  tgtx% = DIVMULT(SIN(cycle% * tgtangvel%, 1, 1000), 1000, TGTRADIUS%)\n  tgty% = -DIVMULT(COS(cycle% * tgtangvel%, 1, 1000), 1000, TGTRADIUS%)\n  INC(cycle%)\nENDPROC\n\nDEF PROCmove(b%)\n  LOCAL n%\n  LOCAL distx%, disty%, speed%\n  boidvx%(b%) = boidvx%(b%) + (avgx% - boidx%(b%)) / POSFACTOR% + (avgvx% - boidvx%(b%)) / VELFACTOR%\n  boidvy%(b%) = boidvy%(b%) + (avgy% - boidy%(b%)) / POSFACTOR% + (avgvy% - boidvy%(b%)) / VELFACTOR%\n  FOR n% = 0 TO NUMBOIDS%\n    IF n% <> b% THEN\n      distx% = boidx%(n%) - boidx%(b%)\n      disty% = boidy%(n%) - boidy%(b%)\n      IF HYPOT(distx%, disty%, 1) < NEARD% THEN\n        boidvx%(b%) = boidvx%(b%) - SGN(distx%) * (NEARD% - ABS(distx%)) / NEARFACTOR%\n        boidvy%(b%) = boidvy%(b%) - SGN(disty%) * (NEARD% - ABS(disty%)) / NEARFACTOR%\n      ENDIF\n    ENDIF\n  NEXT\n  IF RND(10) = 1 THEN\n    boidvx%(b%) = tgtx% - boidx%(b%)\n    boidvy%(b%) = tgty% - boidy%(b%)\n  ENDIF\n  speed% = HYPOT(boidvx%(b%), boidvy%(b%), 1)\n  IF speed% > MAXSPEED% THEN\n    boidvx%(b%) = DIVMULT(boidvx%(b%), speed%, MAXSPEED%)\n    boidvy%(b%) = DIVMULT(boidvy%(b%), speed%, MAXSPEED%)\n  ENDIF\n  boidx%(b%) = boidx%(b%) + boidvx%(b%)\n  boidy%(b%) = boidy%(b%) + boidvy%(b%)\nENDPROC",
  "usage":[
    {
      "category": "Turtle: absolute movement",
      "expressions":[
        {"name":"SETXY", "level":1, "count":2, "lines":"49 64"}
      ],
      "total":2
    },
    {
      "category": "Turtle: drawing shapes",
      "expressions":[
        {"name":"BLOT", "level":1, "count":2, "lines":"50 65"}
      ],
      "total":2
    },
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"COLOUR", "level":1, "count":3, "lines":"41 57 60"},
        {"name":"PENUP", "level":1, "count":1, "lines":"40"}
      ],
      "total":4
    },
    {
      "category": "Canvas operations",
      "expressions":[
        {"name":"BLANK", "level":1, "count":1, "lines":"21"},
        {"name":"NOUPDATE", "level":1, "count":2, "lines":"19 27"},
        {"name":"UPDATE", "level":1, "count":1, "lines":"33"},
        {"name":"CANVAS", "level":2, "count":1, "lines":"18"},
        {"name":"PIXCOL", "level":3, "count":1, "lines":"46"}
      ],
      "total":6
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"ABS", "level":1, "count":2, "lines":"107 108"},
        {"name":"INC", "level":1, "count":1, "lines":"94"},
        {"name":"HYPOT", "level":2, "count":2, "lines":"106 116"},
        {"name":"RND", "level":2, "count":6, "lines":"44 45 47 48 90 112"},
        {"name":"SGN", "level":2, "count":2, "lines":"107 108"},
        {"name":"DIVMULT", "level":3, "count":4, "lines":"92 93 118 119"}
      ],
      "total":17
    },
    {
      "category": "Trig / exp / log functions",
      "expressions":[
        {"name":"COS", "level":2, "count":1, "lines":"93"},
        {"name":"SIN", "level":2, "count":1, "lines":"92"}
      ],
      "total":2
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"PAUSE", "level":1, "count":1, "lines":"34"}
      ],
      "total":1
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"IF", "level":1, "count":6, "lines":"56 89 103 106 112 117"},
        {"name":"ELSE", "level":1, "count":1, "lines":"59"},
        {"name":"FOR", "level":1, "count":5, "lines":"42 63 76 102 29"},
        {"name":"REPEAT", "level":2, "count":2, "lines":"43 24"},
        {"name":"DEF PROC", "level":2, "count":5, "lines":"38 54 69 88 97"}
      ],
      "total":19
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"PROCsetup", "level":0, "count":1, "lines":"20"},
        {"name":"PROCdraw", "level":0, "count":3, "lines":"22 28 32"},
        {"name":"PROCaverages", "level":0, "count":1, "lines":"25"},
        {"name":"PROCsettarget", "level":0, "count":1, "lines":"26"},
        {"name":"PROCmove", "level":0, "count":1, "lines":"30"}
      ],
      "total":7
    }
  ],
  "pcode":[
    [112,17,1,1,112,0,123,112,6,2,123,4,112,150,124,112,167,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [116,25,119,24],
    [112,31,119,25],
    [116,58,119,57],
    [112,31,119,58],
    [116,91,119,90],
    [112,31,119,91],
    [116,124,119,123],
    [112,31,119,124],
    [128,97],
    [133,1],
    [139,12,1],
    [117,12,1,112,1,124],
    [112,0,86],
    [112,16777214,87],
    [112,0],
    [120,12,1,112,30],
    [114,12,1,37,129,28],
    [113,24,114,12,1,2,127,26,4,112,5000,112,2,112,20,28,27,7,4,112,20,26,112,1,27,2,123],
    [113,57,114,12,1,2,127,26,4,112,5000,112,2,112,20,28,27,7,4,112,20,26,112,1,27,2,123],
    [113,24,114,12,1,2,127,26,4,122,113,57,114,12,1,2,127,26,4,122,99,112,16777215,32,129,20],
    [113,90,114,12,1,2,127,26,4,112,50,112,2,28,112,1,26,7,4,112,50,27,112,1,27,2,123],
    [113,123,114,12,1,2,127,26,4,112,50,112,2,28,112,1,26,7,4,112,50,27,112,1,27,2,123],
    [113,24,114,12,1,2,127,26,4,122,113,57,114,12,1,2,127,26,4,122,88],
    [112,2,112,20,28,108],
    [114,12,1,4,128,18],
    [140,12,134,132],
    [133,2],
    [139,13,2],
    [117,13,1,112,2,124,120,13,1],
    [114,13,1,129,36],
    [112,11567184,87],
    [112,20,119,158],
    [128,38],
    [112,16777215,87],
    [112,20,112,10,26,119,158],
    [112,0],
    [120,13,2,112,30],
    [114,13,2,37,129,44],
    [113,24,114,13,2,2,127,26,4,122,113,57,114,13,2,2,127,26,4,122,88],
    [113,158,108],
    [114,13,2,4,128,39],
    [140,13,134,132],
    [133,3],
    [139,14,5],
    [117,14,1,112,5,124],
    [112,0,120,14,1],
    [112,0,120,14,2],
    [112,0,119,159],
    [112,0,119,160],
    [112,0],
    [120,14,5,112,30],
    [114,14,5,37,129,60],
    [114,14,1,113,24,114,14,5,2,127,26,4,122,26,120,14,1],
    [114,14,2,113,57,114,14,5,2,127,26,4,122,26,120,14,2],
    [113,159,113,90,114,14,5,2,127,26,4,122,26,119,159],
    [113,160,113,123,114,14,5,2,127,26,4,122,26,119,160],
    [114,14,5,4,128,53],
    [114,14,1,112,30,29,119,161],
    [114,14,2,112,30,29,119,162],
    [113,159,112,30,29,119,163],
    [113,160,112,30,29,119,164],
    [140,14,134,132],
    [133,4],
    [113,156,112,100,31,112,0,32,129,68],
    [112,7,7,4,112,2,27,119,165],
    [113,156,113,165,28,112,1,112,1000,57,112,1000,112,2000,48,119,166],
    [113,156,113,165,28,112,1,112,1000,58,112,1000,112,2000,48,23,119,167],
    [116,156,1,122,4,2,123],
    [134,132],
    [133,5],
    [139,16,5],
    [117,16,1,112,5,124,120,16,1],
    [113,90,114,16,1,2,127,26,4,113,90,114,16,1,2,127,26,4,122,113,161,113,24,114,16,1,2,127,26,4,122,27,112,50,29,26,113,163,113,90,114,16,1,2,127,26,4,122,27,112,50,29,26,2,123],
    [113,123,114,16,1,2,127,26,4,113,123,114,16,1,2,127,26,4,122,113,162,113,57,114,16,1,2,127,26,4,122,27,112,50,29,26,113,164,113,123,114,16,1,2,127,26,4,122,27,112,50,29,26,2,123],
    [112,0],
    [120,16,2,112,30],
    [114,16,2,37,129,87],
    [114,16,2,114,16,1,33,129,86],
    [113,24,114,16,2,2,127,26,4,122,113,24,114,16,1,2,127,26,4,122,27,120,16,3],
    [113,57,114,16,2,2,127,26,4,122,113,57,114,16,1,2,127,26,4,122,27,120,16,4],
    [114,16,3,114,16,4,112,1,50,112,200,34,129,86],
    [113,90,114,16,1,2,127,26,4,113,90,114,16,1,2,127,26,4,122,114,16,3,25,112,200,114,16,3,24,27,28,112,10,29,27,2,123],
    [113,123,114,16,1,2,127,26,4,113,123,114,16,1,2,127,26,4,122,114,16,4,25,112,200,114,16,4,24,27,28,112,10,29,27,2,123],
    [114,16,2,4,128,78],
    [112,10,7,4,112,1,32,129,90],
    [113,90,114,16,1,2,127,26,4,113,166,113,24,114,16,1,2,127,26,4,122,27,2,123],
    [113,123,114,16,1,2,127,26,4,113,167,113,57,114,16,1,2,127,26,4,122,27,2,123],
    [113,90,114,16,1,2,127,26,4,122,113,123,114,16,1,2,127,26,4,122,112,1,50,120,16,5],
    [114,16,5,112,50,35,129,94],
    [113,90,114,16,1,2,127,26,4,113,90,114,16,1,2,127,26,4,122,114,16,5,112,50,48,2,123],
    [113,123,114,16,1,2,127,26,4,113,123,114,16,1,2,127,26,4,122,114,16,5,112,50,48,2,123],
    [113,24,114,16,1,2,127,26,4,113,24,114,16,1,2,127,26,4,122,113,90,114,16,1,2,127,26,4,122,26,2,123],
    [113,57,114,16,1,2,127,26,4,113,57,114,16,1,2,127,26,4,122,113,123,114,16,1,2,127,26,4,122,26,2,123],
    [140,16,134,132],
    [112,2500,23,112,2500,23,112,5000,112,5000,144],
    [112,0,146],
    [131,12],
    [112,16777215,96],
    [112,-1,131,29],
    [112,0,119,156],
    [131,45],
    [131,65],
    [112,0,146],
    [112,0,131,29],
    [112,0],
    [119,157,112,30],
    [113,157,37,129,112],
    [113,157,131,72],
    [113,157,4,128,108],
    [112,-1,131,29],
    [112,-1,146],
    [112,50,174],
    [112,0,112,1,32,129,103],
    [130]
  ]
}
