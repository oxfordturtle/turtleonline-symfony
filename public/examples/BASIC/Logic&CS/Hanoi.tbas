CONST numdisks% = 6
CONST delay% = 500
DIM pile$(3)
DIM x%(3)
DIM y(3)
DIM top%(3)
PROCsetup(1)
THICKNESS(10)
PROCdraw
PAUSE(1000)
count% = 0
PROCmovepile(numdisks%, 1, 3)
END

PROCsetup (startdisk%: integer)
  x%(1) = 250
  x%(2) = 500
  x%(3) = 750
  y(1) = 800
  y(2) = 500
  y(3) = 800
  FOR p% = 1 TO 3
    pile$(p%) = ""
    top%(p%) = y(p%) - numdisks% * 20 - 40
  NEXT
  FOR d% = 1 TO numdisks%
    pile$(startdisk%) = pile$(startdisk%) + CHR$(d% + 48)
  NEXT
  WRITELN(PAD$(" ", " ", -32) + "   PILE 1   PILE 2   PILE 3")
  WRITELN("")
  WRITE(PAD$("Starting position:", " ", -32))
  WRITELN(PAD$(pile$(1), " ", 9) + PAD$(pile$(2), " ", 9) + PAD$(pile$(3), " ", 9))
  WRITELN("")
ENDPROC

DEF PROCdraw
  FOR p% = 1 TO 3
    SETXY(x%(p%), y(p%))
    FOR i% = length(pile$(p%)) TO 1 STEP -1
      MOVEXY(0, -20)
      COLOUR(rgb(ord(pile$(p%, i%)) - 47))
      ELLBLOT((ord(pile$(p%, i%)) - 47) * 20, (ord(pile$(p%, i%)) - 47) * 10)
    NEXT
    COLOUR(black)
    SETXY(x%(p%), top%(p%))
    POYLINE(2)
  NEXT
ENDPROC

DEF PROCmovedisk (n%, start%, finish%)
  pile$(finish%) = pile$(start%, 1) + pile$(finish%)
  pile$(start%) = DELETE$(pile$(start%), 1, 1)
  BLANK(white)
  PROCdraw
  count% = count% + 1
  WRITE(PAD$(STR$(count%), " ", 4) + ". Move disk " + STR$(n%) + " from " + STR$(start%) + " to " + STR$(finish%) + ":  ")
  WRITELN(PAD$(pile$(1), " ", 9) + PAD$(pile$(2), " ", 9) + PAD$(pile$(3), " ", 9))
  PAUSE(delay%)
ENDPROC

DEF PROCmovepile (n%, start%, finish%)
  IF n% > 0 THEN
    PROCmovepile(n% - 1, start%, 6 - start% - finish%)
    PROCmovedisk(n%, start%, finish%)
    PROCmovepile(n% - 1, 6 - start% - finish%, finish%)
  ENDIF
ENDPROC
