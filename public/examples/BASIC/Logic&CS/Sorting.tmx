{
  "format":1,
  "language":"BASIC",
  "version":13,
  "name":"Comparison of sorting methods",
  "author":"Peter Millican",
  "date":"23/07/2020",
  "time":"12:00:40",
  "code":"REM Sorting\n\nCONST METHODS% = 4\nCONST N% = 100\nCONST COLS% = 10\nCONST TRIES% = 10\nCONST CHECKING% = TRUE\nDIM a%(N%)\nDIM caption$(METHODS%)\nDIM comptotal%(METHODS%)\nDIM swaptotal%(METHODS%)\nOUTPUT(TRUE, WHITE, TRUE)\nPROCsetup\nPROCinit\nWRITELN(STR$(METHODS%) + \" sorting methods will be compared, each of them being used to\")\nWRITELN(\"sort randomised arrays of \" + STR$(N%) + \" items (\" + STR$(TRIES%) + \" times), while keeping\")\nWRITELN(\"track of the numbers of comparisons and swaps required.\")\nIF CHECKING% THEN\n  WRITELN(\"If sorting fails, the program will halt and show the array.\")\n  WRITELN(\"\")\nENDIF\nFOR round% = 1 TO TRIES%\n  FOR m% = 1 TO METHODS%\n    PROCrandomise\n    PROCsort(m%)\n    comptotal%(m%) = comptotal%(m%) + comps%\n    swaptotal%(m%) = swaptotal%(m%) + swaps%\n  NEXT\n  WRITELN(\"\")\nNEXT\nOUTPUT(TRUE, CREAM, TRUE)\nWRITELN(\"Averages from sorting \" + STR$(N%) + \" items, over \" + STR$(TRIES%) + \" trials\")\nWRITELN(\"\")\nWRITELN(\"               COMPARISONS    SWAPS\")\nFOR m% = 1 TO METHODS%\n  WRITE(PAD(caption$(m%), \" \", -17) + PAD(QSTR$(comptotal%(m%), TRIES%, 1), \" \", 7))\n  WRITELN(PAD(QSTR$(swaptotal%(m%), TRIES%, 1), \" \", 11))\nNEXT\nEND\n\nDEF PROCsetup\n  caption$(1) = \"Bubblesort:\"\n  caption$(2) = \"Selectionsort:\"\n  caption$(3) = \"Insertionsort:\"\n  caption$(4) = \"Quicksort:\"\nENDPROC\n\nDEF PROCinit\n  LOCAL i%\n  FOR i% = 1 TO N%\n    a%(i%) = i%\n  NEXT\n  FOR i% = 1 TO METHODS%\n    comptotal%(i%) = 0\n    swaptotal%(i%) = 0\n  NEXT\nENDPROC\n\nDEF FNlessthan(x%, y%)\n  INC(comps%)\n= (x% < y%)\n\nDEF PROCswap(x%, y%)\n  LOCAL t%\n  t% = a%(x%)\n  a%(x%) = a%(y%)\n  a%(y%) = t%\n  INC(swaps%)\nENDPROC\n\nDEF FNordered\n  LOCAL i%, result%\n  result% = TRUE\n  FOR i% = 2 TO N%\n    IF a%(i% - 1) > a%(i%) THEN result% = FALSE\n  NEXT\n= result%\n\nDEF PROClist\n  LOCAL i%\n  WRITE(\"     \")\n  FOR i% = 1 TO N%\n    WRITE(STR$(a%(i%)) + \" \")\n    IF i% MOD COLS% = 0 THEN\n      WRITELN(\"\")\n      WRITE(\"     \")\n    ENDIF\n  NEXT\n  WRITELN(\"\")\nENDPROC\n\nDEF PROCrandomise\n  LOCAL i%, j%\n  FOR i% = 1 TO N%\n    j% = RND(N%)\n    PROCswap(i%, j%)\n  NEXT\nENDPROC\n\nDEF PROCbubblesort\n  LOCAL i%, j%\n  FOR i% = 1 TO N%\n    FOR j% = 1 TO N% - 1\n      IF FNlessthan(a%(j% + 1), a%(j%)) THEN PROCswap(j%, j% + 1)\n    NEXT\n  NEXT\nENDPROC\n\nDEF PROCselectionsort\n  LOCAL i%, j%, lowsofar%\n  FOR i% = 1 TO N%\n    lowsofar% = i%\n    FOR j% = i% + 1 TO N%\n      IF FNlessthan(a%(j%), a%(lowsofar%)) THEN lowsofar% = j%\n    NEXT\n    IF lowsofar% <> i% THEN PROCswap(i%, lowsofar%)\n  NEXT\nENDPROC\n\nDEF PROCinsertionsort\n  LOCAL i%, j%\n  FOR i% = 2 TO N%\n    j% = i%\n    WHILE (j% > 1) AND FNlessthan(a%(j%), a%(j% - 1))\n      PROCswap(j% - 1, j%)\n      DEC(j%)\n    ENDWHILE\n  NEXT\nENDPROC\n\nDEF PROCqsort(left%, right%)\n  LOCAL m%, i%\n  IF left% < right% THEN\n    m% = left%\n    FOR i% = left% + 1 TO right%\n      IF FNlessthan(a%(i%), a%(left%)) THEN\n        INC(m%)\n        PROCswap(m%, i%)\n      ENDIF\n    NEXT\n    PROCswap(left%, m%)\n    PROCqsort(left%, m% - 1)\n    PROCqsort(m% + 1, right%)\n  ENDIF\nENDPROC\n\nDEF PROCquicksort\n  PROCqsort(1, N%)\nENDPROC\n\nDEF PROCsort(method%)\n  comps% = 0\n  swaps% = 0\n  IF method% = 1 THEN\n    PROCbubblesort\n  ELSE\n    IF method% = 2 THEN\n      PROCselectionsort\n    ELSE\n      IF method% = 3 THEN\n        PROCinsertionsort\n      ELSE\n        IF method% = 4 THEN\n          PROCquicksort\n        ENDIF\n      ENDIF\n    ENDIF\n  ENDIF\n  WRITE(PAD(caption$(method%), \" \", -17) + PAD(STR$(comps%), \" \", 4) + \" comparisons\")\n  WRITELN(PAD(STR$(swaps%), \" \", 6) + \" swaps%\")\n  IF CHECKING% THEN\n    IF NOT(FNordered) THEN\n      WRITELN(\"     Sort failed:\")\n      PROClist\n      HALT\n    ENDIF\n  ENDIF\nENDPROC",
  "usage":[
    {
      "category": "Other Turtle commands",
      "expressions":[
        {"name":"OUTPUT", "level":2, "count":2, "lines":"12 31"}
      ],
      "total":2
    },
    {
      "category": "General arithmetic functions",
      "expressions":[
        {"name":"DEC", "level":1, "count":1, "lines":"126"},
        {"name":"INC", "level":1, "count":3, "lines":"60 68 137"},
        {"name":"RND", "level":2, "count":1, "lines":"95"}
      ],
      "total":5
    },
    {
      "category": "String operations",
      "expressions":[
        {"name":"WRITE", "level":1, "count":5, "lines":"81 83 86 169 36"},
        {"name":"WRITELN", "level":1, "count":14, "lines":"85 89 170 173 15 16 17 19 20 29 32 33 34 37"},
        {"name":"PAD", "level":3, "count":6, "lines":"169 169 170 36 36 37"}
      ],
      "total":25
    },
    {
      "category": "Type conversion routines",
      "expressions":[
        {"name":"STR$", "level":1, "count":8, "lines":"83 169 170 15 16 16 32 32"},
        {"name":"QSTR$", "level":2, "count":2, "lines":"36 37"}
      ],
      "total":10
    },
    {
      "category": "Input and timing routines",
      "expressions":[
        {"name":"HALT", "level":1, "count":1, "lines":"175"}
      ],
      "total":1
    },
    {
      "category": "Command structures",
      "expressions":[
        {"name":"IF", "level":1, "count":14, "lines":"75 84 104 114 116 133 136 154 157 160 163 171 172 18"},
        {"name":"ELSE", "level":1, "count":3, "lines":"156 159 162"},
        {"name":"FOR", "level":1, "count":14, "lines":"50 53 74 82 94 102 103 111 113 122 135 22 23 35"},
        {"name":"WHILE", "level":2, "count":1, "lines":"124"},
        {"name":"DEF PROC", "level":2, "count":11, "lines":"41 48 63 79 92 100 109 120 131 147 151"},
        {"name":"DEF FN", "level":3, "count":2, "lines":"59 71"}
      ],
      "total":45
    },
    {
      "category": "Subroutine calls",
      "expressions":[
        {"name":"PROCswap", "level":0, "count":6, "lines":"96 104 116 125 138 141"},
        {"name":"FNlessthan", "level":0, "count":4, "lines":"104 114 124 136"},
        {"name":"PROCqsort", "level":0, "count":3, "lines":"142 143 148"},
        {"name":"PROCbubblesort", "level":0, "count":1, "lines":"155"},
        {"name":"PROCselectionsort", "level":0, "count":1, "lines":"158"},
        {"name":"PROCinsertionsort", "level":0, "count":1, "lines":"161"},
        {"name":"PROCquicksort", "level":0, "count":1, "lines":"164"},
        {"name":"FNordered", "level":0, "count":1, "lines":"172"},
        {"name":"PROClist", "level":0, "count":1, "lines":"174"},
        {"name":"PROCsetup", "level":0, "count":1, "lines":"13"},
        {"name":"PROCinit", "level":0, "count":1, "lines":"14"},
        {"name":"PROCrandomise", "level":0, "count":1, "lines":"24"},
        {"name":"PROCsort", "level":0, "count":1, "lines":"25"}
      ],
      "total":23
    }
  ],
  "pcode":[
    [112,26,1,1,112,0,123,112,6,2,123,4,112,304,124,112,330,138],
    [80,112,2,85,112,360,84,112,32,162,112,1,123,141,112,0,1,112,1000,1,1,1,145,144],
    [116,34,119,33],
    [112,101,119,34],
    [116,137,119,136],
    [112,5,119,137,116,144,119,138],
    [112,33,119,143,116,178,119,139],
    [112,33,119,177,116,212,119,140],
    [112,33,119,211,116,246,119,141],
    [112,33,119,245,116,280,119,142],
    [112,33,119,279],
    [116,314,119,313],
    [112,5,119,314],
    [116,321,119,320],
    [112,5,119,321],
    [128,180],
    [133,1],
    [113,136,112,1,2,127,26,4,122,118,11,66,117,98,98,108,101,115,111,114,116,58,2,126,142],
    [113,136,112,2,2,127,26,4,122,118,14,83,101,108,101,99,116,105,111,110,115,111,114,116,58,2,126,142],
    [113,136,112,3,2,127,26,4,122,118,14,73,110,115,101,114,116,105,111,110,115,111,114,116,58,2,126,142],
    [113,136,112,4,2,127,26,4,122,118,10,81,117,105,99,107,115,111,114,116,58,2,126,142],
    [134,132],
    [133,2],
    [139,13,1],
    [117,13,1,112,1,124],
    [112,1],
    [120,13,1,112,100],
    [114,13,1,37,129,31],
    [113,33,114,13,1,2,127,26,4,114,13,1,2,123],
    [114,13,1,4,128,27],
    [112,1],
    [120,13,1,112,4],
    [114,13,1,37,129,37],
    [113,313,114,13,1,2,127,26,4,112,0,2,123],
    [113,320,114,13,1,2,127,26,4,112,0,2,123],
    [114,13,1,4,128,32],
    [140,13,134,132],
    [133,3],
    [139,14,3],
    [117,14,1,112,3,124,120,14,3,120,14,2],
    [116,329,1,122,4,2,123],
    [114,14,2,114,14,3,34,120,14,1],
    [113,14,119,25,140,14,134,132],
    [133,4],
    [139,15,3],
    [117,15,1,112,3,124,120,15,2,120,15,1],
    [113,33,114,15,1,2,127,26,4,122,120,15,3],
    [113,33,114,15,1,2,127,26,4,113,33,114,15,2,2,127,26,4,122,2,123],
    [113,33,114,15,2,2,127,26,4,114,15,3,2,123],
    [116,330,1,122,4,2,123],
    [140,15,134,132],
    [133,5],
    [139,16,3],
    [117,16,1,112,3,124],
    [112,-1,120,16,3],
    [112,2],
    [120,16,2,112,100],
    [114,16,2,37,129,62],
    [113,33,114,16,2,112,1,27,2,127,26,4,122,113,33,114,16,2,2,127,26,4,122,35,129,61],
    [112,0,120,16,3],
    [114,16,2,4,128,57],
    [114,16,3,120,16,1],
    [113,16,119,25,140,16,134,132],
    [133,6],
    [139,17,1],
    [117,17,1,112,1,124],
    [118,5,32,32,32,32,32,169,142],
    [112,1],
    [120,17,1,112,100],
    [114,17,1,37,129,76],
    [113,33,114,17,1,2,127,26,4,122,11,118,1,32,64,169,142],
    [114,17,1,112,10,31,112,0,32,129,75],
    [118,0,169,170,142],
    [118,5,32,32,32,32,32,169,142],
    [114,17,1,4,128,69],
    [118,0,169,170,142],
    [140,17,134,132],
    [133,7],
    [139,18,2],
    [117,18,1,112,2,124],
    [112,1],
    [120,18,1,112,100],
    [114,18,1,37,129,87],
    [112,100,7,4,120,18,2],
    [114,18,1,114,18,2,131,44],
    [114,18,1,4,128,82],
    [140,18,134,132],
    [133,8],
    [139,19,2],
    [117,19,1,112,2,124],
    [112,1],
    [120,19,1,112,100],
    [114,19,1,37,129,102],
    [112,1],
    [120,19,2,112,100,112,1,27],
    [114,19,2,37,129,101],
    [113,33,114,19,2,112,1,26,2,127,26,4,122,113,33,114,19,2,2,127,26,4,122,131,38],
    [114,25,1,129,100],
    [114,19,2,114,19,2,112,1,26,131,44],
    [114,19,2,4,128,95],
    [114,19,1,4,128,92],
    [140,19,134,132],
    [133,9],
    [139,20,3],
    [117,20,1,112,3,124],
    [112,1],
    [120,20,1,112,100],
    [114,20,1,37,129,120],
    [114,20,1,120,20,3],
    [114,20,1,112,1,26],
    [120,20,2,112,100],
    [114,20,2,37,129,117],
    [113,33,114,20,2,2,127,26,4,122,113,33,114,20,3,2,127,26,4,122,131,38],
    [114,25,1,129,116],
    [114,20,2,120,20,3],
    [114,20,2,4,128,111],
    [114,20,3,114,20,1,33,129,119],
    [114,20,1,114,20,3,131,44],
    [114,20,1,4,128,107],
    [140,20,134,132],
    [133,10],
    [139,21,2],
    [117,21,1,112,2,124],
    [112,2],
    [120,21,1,112,100],
    [114,21,1,37,129,134],
    [114,21,1,120,21,2],
    [114,21,2,112,1,35,113,33,114,21,2,2,127,26,4,122,113,33,114,21,2,112,1,27,2,127,26,4,122,131,38],
    [114,25,1,17,129,133],
    [114,21,2,112,1,27,114,21,2,131,44],
    [117,21,2,1,122,5,2,123],
    [128,128],
    [114,21,1,4,128,125],
    [140,21,134,132],
    [133,11],
    [139,22,4],
    [117,22,1,112,4,124,120,22,2,120,22,1],
    [114,22,1,114,22,2,34,129,151],
    [114,22,1,120,22,3],
    [114,22,1,112,1,26],
    [120,22,4,114,22,2],
    [114,22,4,37,129,148],
    [113,33,114,22,4,2,127,26,4,122,113,33,114,22,1,2,127,26,4,122,131,38],
    [114,25,1,129,147],
    [117,22,3,1,122,4,2,123],
    [114,22,3,114,22,4,131,44],
    [114,22,4,4,128,141],
    [114,22,1,114,22,3,131,44],
    [114,22,1,114,22,3,112,1,27,131,135],
    [114,22,3,112,1,26,114,22,2,131,135],
    [140,22,134,132],
    [133,12],
    [112,1,112,100,131,135],
    [134,132],
    [133,13],
    [139,24,1],
    [117,24,1,112,1,124,120,24,1],
    [112,0,119,329],
    [112,0,119,330],
    [114,24,1,112,1,32,129,163],
    [131,88],
    [128,171],
    [114,24,1,112,2,32,129,166],
    [131,103],
    [128,171],
    [114,24,1,112,3,32,129,169],
    [131,121],
    [128,171],
    [114,24,1,112,4,32,129,171],
    [131,152],
    [113,136,114,24,1,2,127,26,4,122,118,1,32,112,17,23,72,113,329,11,118,1,32,112,4,72,64,118,12,32,99,111,109,112,97,114,105,115,111,110,115,64,169,142],
    [113,330,11,118,1,32,112,6,72,118,7,32,115,119,97,112,115,37,64,169,170,142],
    [112,-1,129,179],
    [131,52],
    [114,25,1,16,129,179],
    [118,17,32,32,32,32,32,83,111,114,116,32,102,97,105,108,101,100,58,169,170,142],
    [131,64],
    [130],
    [140,24,134,132],
    [112,-1,112,16777215,112,-1,166],
    [131,17],
    [131,23],
    [112,4,11,118,61,32,115,111,114,116,105,110,103,32,109,101,116,104,111,100,115,32,119,105,108,108,32,98,101,32,99,111,109,112,97,114,101,100,44,32,101,97,99,104,32,111,102,32,116,104,101,109,32,98,101,105,110,103,32,117,115,101,100,32,116,111,64,169,170,142],
    [118,26,115,111,114,116,32,114,97,110,100,111,109,105,115,101,100,32,97,114,114,97,121,115,32,111,102,32,112,100,11,64,118,8,32,105,116,101,109,115,32,40,64,112,10,11,64,118,22,32,116,105,109,101,115,41,44,32,119,104,105,108,101,32,107,101,101,112,105,110,103,64,169,170,142],
    [118,55,116,114,97,99,107,32,111,102,32,116,104,101,32,110,117,109,98,101,114,115,32,111,102,32,99,111,109,112,97,114,105,115,111,110,115,32,97,110,100,32,115,119,97,112,115,32,114,101,113,117,105,114,101,100,46,169,170,142],
    [112,-1,129,189],
    [118,59,73,102,32,115,111,114,116,105,110,103,32,102,97,105,108,115,44,32,116,104,101,32,112,114,111,103,114,97,109,32,119,105,108,108,32,104,97,108,116,32,97,110,100,32,115,104,111,119,32,116,104,101,32,97,114,114,97,121,46,169,170,142],
    [118,0,169,170,142],
    [112,1],
    [119,327,112,10],
    [113,327,37,129,202],
    [112,1],
    [119,328,112,4],
    [113,328,37,129,200],
    [131,78],
    [113,328,131,155],
    [113,313,113,328,2,127,26,4,113,313,113,328,2,127,26,4,122,113,329,26,2,123],
    [113,320,113,328,2,127,26,4,113,320,113,328,2,127,26,4,122,113,330,26,2,123],
    [113,328,4,128,193],
    [118,0,169,170,142],
    [113,327,4,128,190],
    [112,-1,112,16777147,112,-1,166],
    [118,22,65,118,101,114,97,103,101,115,32,102,114,111,109,32,115,111,114,116,105,110,103,32,112,100,11,64,118,13,32,105,116,101,109,115,44,32,111,118,101,114,32,64,112,10,11,64,118,7,32,116,114,105,97,108,115,64,169,170,142],
    [118,0,169,170,142],
    [118,35,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,67,79,77,80,65,82,73,83,79,78,83,32,32,32,32,83,87,65,80,83,169,170,142],
    [112,1],
    [119,328,112,4],
    [113,328,37,129,212],
    [113,136,113,328,2,127,26,4,122,118,1,32,112,17,23,72,113,313,113,328,2,127,26,4,122,112,10,112,1,14,118,1,32,112,7,72,64,169,142],
    [113,320,113,328,2,127,26,4,122,112,10,112,1,14,118,1,32,112,11,72,169,170,142],
    [113,328,4,128,207],
    [130]
  ]
}
